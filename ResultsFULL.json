{
  "title" : "Jacobi polynomials",
  "formulae" : [
    {
      "id" : "FORMULA_b725256371c41890892b17cf94d2106f",
      "formula" : "P_{n}^{(\\alpha, \\beta)}(x)",
      "semanticFormula" : "\\JacobipolyP{\\alpha}{\\beta}{n}@{x}",
      "confidence" : 0.8135152636383296,
      "translations" : {
        "Mathematica" : {
          "translation" : "JacobiP[n, \\[Alpha], \\[Beta], x]",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 49,
            "numberOfSuccessfulTests" : 1,
            "testCalculations" : [
              {
                "result" : "3.75",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "10.9375",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "29.53125",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "3.5",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "9.6875",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "25.15625",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "3.875",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "11.5859375",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "31.8701171875",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "2.5",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "5.9375",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "14.21875",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "2.25",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "5.0",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "11.484375",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "2.625",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "6.4296875",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "15.7080078125",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "4.375",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "14.0234375",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "40.2880859375",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "4.125",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "12.6171875",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "34.9462890625",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "4.5",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "14.75",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "43.125",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "1.25",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "0.4375",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "-0.65625",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "1.5",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "0.9375",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "-0.21875",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "1.125",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "0.2109375",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[1, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "-0.8154296875",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "0.5",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "-0.3125",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "-0.65625",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "0.75",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "-0.546875",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "0.375",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "-0.4453125",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[1, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "-0.6689453125",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "1.625",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "1.0234375",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "-0.3662109375",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "1.875",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "1.6171875",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "JacobiP[n, α, β, x]",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "JacobiP(n, alpha, beta, x)",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 49,
            "numberOfSuccessfulTests" : 1,
            "testCalculations" : [
              {
                "result" : "3.750000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "10.93750000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "29.53125000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "1.250000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : ".4375000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-.6562500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "5.000000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "20.12500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "76.12500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.500000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "9.687499999",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "25.15625000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "1.500000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : ".9375000001",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-.2187500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "4.500000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "16.87500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "60.81250000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.875000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "11.58593750",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "31.87011719",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "1.125000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : ".2109375000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "-.8154296876",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "5.250000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "21.84375000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "84.57031249",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "2.500000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "5.937500001",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "14.21875000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : ".5000000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "1/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-.3125000001",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-.6562500000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.500000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "11.87500000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "40.68750000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "2.250000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "5.000000001",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "11.48437500",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : ".7500000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "1/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-.5468750000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "1/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.000000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "9.375000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "30.62500000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "2.625000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "6.429687501",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "15.70800781",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : ".3750000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "1/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "-.4453125000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "1/2",
                  "beta" : "2",
                  "n" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "JacobiP(n,alpha,beta,x)",
                "property" : "Simple"
              },
              {
                "result" : "JacobiP(n,alpha,beta,x)",
                "property" : "ConvEXP"
              },
              {
                "result" : "binomial(alpha+n,alpha)*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*x)",
                "property" : "ConvHYP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,x)",
                "property" : "EXP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,x)",
                "property" : "EXP+EXP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,x)",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 0,
          "sentence" : 0,
          "word" : 15
        }
      ],
      "includes" : [
        "x",
        "n",
        "P_{n}^{(\\alpha, \\beta)}",
        "\\alpha,\\beta"
      ],
      "isPartOf" : [
        "P_n^{(\\alpha,\\beta)}(z)=\\frac{(\\alpha+1)_n}{n!}\\,{}_2F_1\\left(-n,1+\\alpha+\\beta+n;\\alpha+1;\\tfrac{1}{2}(1-z)\\right)",
        "P_n^{(\\alpha,\\beta)} (z) = \\frac{\\Gamma (\\alpha+n+1)}{n!\\,\\Gamma (\\alpha+\\beta+n+1)} \\sum_{m=0}^n {n\\choose m} \\frac{\\Gamma (\\alpha + \\beta + n + m + 1)}{\\Gamma (\\alpha + m + 1)} \\left(\\frac{z-1}{2}\\right)^m",
        "P_n^{(\\alpha,\\beta)}(z) = \\frac{(-1)^n}{2^n n!} (1-z)^{-\\alpha} (1+z)^{-\\beta} \\frac{d^n}{dz^n} \\left\\{ (1-z)^\\alpha (1+z)^\\beta \\left (1 - z^2 \\right )^n \\right\\}",
        "P_n^{(\\alpha,\\beta)}(x)= \\sum_{s=0}^n {n+\\alpha\\choose n-s}{n+\\beta \\choose s} \\left(\\frac{x-1}{2}\\right)^{s} \\left(\\frac{x+1}{2}\\right)^{n-s}",
        "P_n^{(\\alpha,\\beta)}(x)=(n+\\alpha)! (n+\\beta)! \\sum_{s=0}^n \\frac{1}{s! (n+\\alpha-s)!(\\beta+s)!(n-s)!} \\left(\\frac{x-1}{2}\\right)^{n-s} \\left(\\frac{x+1}{2}\\right)^{s}",
        "P_0^{(\\alpha,\\beta)}(z)= 1",
        "P_1^{(\\alpha,\\beta)}(z)= (\\alpha+1) + (\\alpha+\\beta+2)\\frac{z-1}{2}",
        "P_2^{(\\alpha,\\beta)}(z)= \\frac{(\\alpha+1)(\\alpha+2)}{2}+ (\\alpha+2)(\\alpha+\\beta+3)\\frac{z-1}{2}+ \\frac{(\\alpha+\\beta+3)(\\alpha+\\beta+4)}{2}\\left(\\frac{z-1}{2}\\right)^2,..",
        "\\int_{-1}^1 (1-x)^{\\alpha} (1+x)^{\\beta} P_m^{(\\alpha,\\beta)} (x)P_n^{(\\alpha,\\beta)} (x)\\,dx =\\frac{2^{\\alpha+\\beta+1}}{2n+\\alpha+\\beta+1} \\frac{\\Gamma(n+\\alpha+1)\\Gamma(n+\\beta+1)}{\\Gamma(n+\\alpha+\\beta+1)n!} \\delta_{nm}, \\qquad \\alpha,\\ \\beta > -1",
        "P_n^{(\\alpha, \\beta)} (1) = {n+\\alpha\\choose n}",
        "P_n^{(\\alpha, \\beta)} (-z) = (-1)^n P_n^{(\\beta, \\alpha)} (z)",
        "P_n^{(\\alpha, \\beta)} (-1) = (-1)^n { n+\\beta\\choose n}",
        "\\frac{d^k}{dz^k} P_n^{(\\alpha,\\beta)} (z) = \\frac{\\Gamma (\\alpha+\\beta+n+1+k)}{2^k \\Gamma (\\alpha+\\beta+n+1)} P_{n-k}^{(\\alpha+k, \\beta+k)} (z)",
        "\\begin{align}&2n (n + \\alpha + \\beta) (2n + \\alpha + \\beta - 2) P_n^{(\\alpha,\\beta)}(z) \\\\&\\qquad= (2n+\\alpha + \\beta-1) \\Big\\{ (2n+\\alpha + \\beta)(2n+\\alpha+\\beta-2) z +  \\alpha^2 - \\beta^2 \\Big\\} P_{n-1}^{(\\alpha,\\beta)}(z) - 2 (n+\\alpha - 1) (n + \\beta-1) (2n+\\alpha + \\beta) P_{n-2}^{(\\alpha, \\beta)}(z),\\end{align}",
        "\\begin{align}(z-1) \\frac{d}{dz} P_n^{(\\alpha,\\beta)}(z) &= \\frac{1}{2} (z-1)(1+\\alpha+\\beta+n)P_{n-1}^{(\\alpha+1,\\beta+1)} \\\\&= n P_n^{(\\alpha,\\beta)} - (\\alpha+n) P_{n-1}^{(\\alpha,\\beta+1)} \\\\&=(1+\\alpha+\\beta+n) \\left( P_n^{(\\alpha,\\beta+1)} - P_{n}^{(\\alpha,\\beta)} \\right) \\\\&=(\\alpha+n) P_n^{(\\alpha-1,\\beta+1)} - \\alpha P_n^{(\\alpha,\\beta)} \\\\&=\\frac{2(n+1) P_{n+1}^{(\\alpha,\\beta-1)} - \\left(z(1+\\alpha+\\beta+n)+\\alpha+1+n-\\beta \\right) P_n^{(\\alpha,\\beta)}}{1+z} \\\\&=\\frac{(2\\beta+n+nz) P_n^{(\\alpha,\\beta)} - 2(\\beta+n) P_n^{(\\alpha,\\beta-1)}}{1+z} \\\\&=\\frac{1-z}{1+z} \\left( \\beta P_n^{(\\alpha,\\beta)} - (\\beta+n) P_{n}^{(\\alpha+1,\\beta-1)} \\right) \\, .\\end{align}",
        "\\sum_{n=0}^\\infty P_n^{(\\alpha,\\beta)}(z) t^n = 2^{\\alpha + \\beta} R^{-1} (1 - t + R)^{-\\alpha} (1 + t + R)^{-\\beta}",
        "P_n^{(\\alpha,\\beta)}(\\cos \\theta) = n^{-\\frac{1}{2}}k(\\theta)\\cos (N\\theta + \\gamma) + O \\left (n^{-\\frac{3}{2}} \\right )",
        "\\begin{align}\\lim_{n \\to \\infty} n^{-\\alpha}P_n^{(\\alpha,\\beta)}\\left(\\cos \\left ( \\tfrac{z}{n} \\right ) \\right) &= \\left(\\tfrac{z}{2}\\right)^{-\\alpha} J_\\alpha(z)\\\\ \\lim_{n \\to \\infty} n^{-\\beta}P_n^{(\\alpha,\\beta)}\\left(\\cos \\left (\\pi - \\tfrac{z}{n} \\right) \\right) &= \\left(\\tfrac{z}{2}\\right)^{-\\beta} J_\\beta(z)\\end{align}",
        "d^j_{m'm}(\\phi) =\\left[ \\frac{(j+m)!(j-m)!}{(j+m')!(j-m')!}\\right]^{\\frac{1}{2}} \\left(\\sin\\tfrac{\\phi}{2}\\right)^{m-m'} \\left(\\cos\\tfrac{\\phi}{2}\\right)^{m+m'} P_{j-m}^{(m-m',m+m')}(\\cos \\phi)"
      ],
      "definiens" : [
        {
          "definition" : "Jacobi polynomial",
          "score" : 0.8135152636383296
        },
        {
          "definition" : "class of classical orthogonal polynomial",
          "score" : 0.722
        },
        {
          "definition" : "mathematics",
          "score" : 0.6584038577190456
        },
        {
          "definition" : "hypergeometric polynomial",
          "score" : 0.5713127376286706
        },
        {
          "definition" : "Pochhammer 's symbol",
          "score" : 0.36472730811035264
        },
        {
          "definition" : "equivalent expression",
          "score" : 0.362772320015081
        },
        {
          "definition" : "orthogonality condition",
          "score" : 0.3506858099067741
        },
        {
          "definition" : "symmetry relation",
          "score" : 0.3506857142907173
        },
        {
          "definition" : "Darboux formula",
          "score" : 0.35068571428571427
        },
        {
          "definition" : "Heine formula",
          "score" : 0.35068571428571427
        },
        {
          "definition" : "identity",
          "score" : 0.35068571428571427
        },
        {
          "definition" : "simplicity",
          "score" : 0.3412842248511015
        },
        {
          "definition" : "other terminal value",
          "score" : 0.34128422478198883
        },
        {
          "definition" : "recurrence relation for the Jacobi polynomial",
          "score" : 0.3412842247769864
        },
        {
          "definition" : "expression of the Wigner d-matrix",
          "score" : 0.3412842247769857
        },
        {
          "definition" : "Rodrigues ' formula",
          "score" : 0.3224897825957048
        },
        {
          "definition" : "special case",
          "score" : 0.3146251755059523
        },
        {
          "definition" : "polynomial",
          "score" : 0.31459433391452507
        },
        {
          "definition" : "derivative of the explicit expression",
          "score" : 0.31459433390981145
        },
        {
          "definition" : "asymptotic",
          "score" : 0.31459433390952196
        },
        {
          "definition" : "asymptotic of the Jacobi polynomial",
          "score" : 0.31459433390952196
        },
        {
          "definition" : "function of the Jacobi polynomial",
          "score" : 0.31459433390952196
        },
        {
          "definition" : "limit",
          "score" : 0.31459433390952196
        },
        {
          "definition" : "Mehler",
          "score" : 0.31459433390952196
        },
        {
          "definition" : "equivalent definition",
          "score" : 0.28265584226469764
        },
        {
          "definition" : "hypergeometric function",
          "score" : 0.2776361880199776
        },
        {
          "definition" : "nonnegative integer",
          "score" : 0.27479123517494514
        },
        {
          "definition" : "alternative normalization",
          "score" : 0.27476039365263044
        },
        {
          "definition" : "domain",
          "score" : 0.27476039357851473
        },
        {
          "definition" : "Gauss ' contiguous relation",
          "score" : 0.27476039357851473
        },
        {
          "definition" : "interior",
          "score" : 0.27476039357851473
        },
        {
          "definition" : "interval",
          "score" : 0.27476039357851473
        },
        {
          "definition" : "case",
          "score" : 0.2489913090572421
        },
        {
          "definition" : "series for the hypergeometric function",
          "score" : 0.2489913090572421
        },
        {
          "definition" : "quantity",
          "score" : 0.22753405541557728
        },
        {
          "definition" : "orthonormal basis",
          "score" : 0.22750321389326258
        },
        {
          "definition" : "branch of square root",
          "score" : 0.22750321381914684
        },
        {
          "definition" : "expression",
          "score" : 0.22750321381914684
        },
        {
          "definition" : "point",
          "score" : 0.22750321381914684
        },
        {
          "definition" : "term",
          "score" : 0.22750321381914684
        },
        {
          "definition" : "term of Jacobi polynomial",
          "score" : 0.22750321381914684
        }
      ]
    },
    {
      "id" : "FORMULA_b635fef078fb115b6dcaced6f5fc3f34",
      "formula" : "(1 - x)^{\\alpha}(1 + x)^{\\beta}",
      "semanticFormula" : "(1 - x)^{\\alpha}(1 + x)^{\\beta}",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "(1 - x)^\\[Alpha]*(1 + x)^\\[Beta]",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 27,
            "numberOfFailedTests" : 27,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "Complex[0.0, -1.3975424859373686]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]"
                }
              },
              {
                "result" : "Complex[0.0, -0.5590169943749475]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]"
                }
              },
              {
                "result" : "Complex[0.0, -2.2097086912079607]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]"
                }
              },
              {
                "result" : "Complex[0.0, 2.7950849718747373]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]"
                }
              },
              {
                "result" : "Complex[0.0, 1.118033988749895]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]"
                }
              },
              {
                "result" : "Complex[0.0, 4.419417382415921]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]"
                }
              },
              {
                "result" : "0.9882117688026186",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]"
                }
              },
              {
                "result" : "0.39528470752104744",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]"
                }
              },
              {
                "result" : "1.5625",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]"
                }
              },
              {
                "result" : "0.649519052838329",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]"
                }
              },
              {
                "result" : "0.4330127018922193",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[1, 2]"
                }
              },
              {
                "result" : "0.795495128834866",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[1, 2]"
                }
              },
              {
                "result" : "1.299038105676658",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]"
                }
              },
              {
                "result" : "0.8660254037844386",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[1, 2]"
                }
              },
              {
                "result" : "1.590990257669732",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[1, 2]"
                }
              },
              {
                "result" : "0.45927932677184585",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]"
                }
              },
              {
                "result" : "0.30618621784789724",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[1, 2]"
                }
              },
              {
                "result" : "0.5625",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[1, 2]"
                }
              },
              {
                "result" : "Complex[0.0, -5.196152422706632]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "2"
                }
              },
              {
                "result" : "Complex[0.0, -1.7320508075688772]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "2"
                }
              },
              {
                "result" : "Complex[0.0, -9.0]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "2"
                }
              },
              {
                "result" : "Complex[0.0, 5.196152422706632]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "2"
                }
              },
              {
                "result" : "Complex[0.0, 1.7320508075688772]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "2"
                }
              },
              {
                "result" : "Complex[0.0, 9.0]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "2"
                }
              },
              {
                "result" : "5.196152422706632",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "2"
                }
              },
              {
                "result" : "1.7320508075688772",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "2"
                }
              },
              {
                "result" : "9.0",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "Times[Power[Plus[1, Times[-1, x]], α], Power[Plus[1, x], β]]",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "(1 - x)**(Symbol('alpha'))*(1 + x)**(Symbol('beta'))"
        },
        "Maple" : {
          "translation" : "(1 - x)^(alpha)*(1 + x)^(beta)",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 27,
            "numberOfFailedTests" : 27,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "-1.397542486*I",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "3/2"
                }
              },
              {
                "result" : ".6495190530",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "3/2"
                }
              },
              {
                "result" : "-5.196152424*I",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "3/2"
                }
              },
              {
                "result" : "-.5590169942*I",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "1/2"
                }
              },
              {
                "result" : ".4330127020",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "1/2"
                }
              },
              {
                "result" : "-1.732050808*I",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "1/2"
                }
              },
              {
                "result" : "-2.209708691*I",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "2"
                }
              },
              {
                "result" : ".7954951286",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "2"
                }
              },
              {
                "result" : "-9.*I",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "2"
                }
              },
              {
                "result" : "2.795084971*I",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "3/2"
                }
              },
              {
                "result" : "1.299038106",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "1/2",
                  "beta" : "3/2"
                }
              },
              {
                "result" : "5.196152424*I",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "2",
                  "beta" : "3/2"
                }
              },
              {
                "result" : "1.118033988*I",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "1/2"
                }
              },
              {
                "result" : ".8660254040",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "1/2",
                  "beta" : "1/2"
                }
              },
              {
                "result" : "1.732050808*I",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "2",
                  "beta" : "1/2"
                }
              },
              {
                "result" : "4.419417381*I",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "2"
                }
              },
              {
                "result" : "1.590990257",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "1/2",
                  "beta" : "2"
                }
              },
              {
                "result" : "9.*I",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "2",
                  "beta" : "2"
                }
              },
              {
                "result" : ".9882117684",
                "testValues" : {
                  "alpha" : "2",
                  "x" : "3/2",
                  "beta" : "3/2"
                }
              },
              {
                "result" : ".4592793268",
                "testValues" : {
                  "alpha" : "2",
                  "x" : "1/2",
                  "beta" : "3/2"
                }
              },
              {
                "result" : "5.196152424",
                "testValues" : {
                  "alpha" : "2",
                  "x" : "2",
                  "beta" : "3/2"
                }
              },
              {
                "result" : ".3952847074",
                "testValues" : {
                  "alpha" : "2",
                  "x" : "3/2",
                  "beta" : "1/2"
                }
              },
              {
                "result" : ".3061862179",
                "testValues" : {
                  "alpha" : "2",
                  "x" : "1/2",
                  "beta" : "1/2"
                }
              },
              {
                "result" : "1.732050808",
                "testValues" : {
                  "alpha" : "2",
                  "x" : "2",
                  "beta" : "1/2"
                }
              },
              {
                "result" : "1.562500000",
                "testValues" : {
                  "alpha" : "2",
                  "x" : "3/2",
                  "beta" : "2"
                }
              },
              {
                "result" : ".5625000000",
                "testValues" : {
                  "alpha" : "2",
                  "x" : "1/2",
                  "beta" : "2"
                }
              },
              {
                "result" : "9.",
                "testValues" : {
                  "alpha" : "2",
                  "x" : "2",
                  "beta" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "(1-x)^alpha*(1+x)^beta",
                "property" : "Simple"
              },
              {
                "result" : "(1-x)^alpha*(1+x)^beta",
                "property" : "ConvEXP"
              },
              {
                "result" : "(1-x)^alpha*(1+x)^beta",
                "property" : "ConvHYP"
              },
              {
                "result" : "(1-x)^alpha*(1+x)^beta",
                "property" : "EXP"
              },
              {
                "result" : "(1-x)^alpha*(1+x)^beta",
                "property" : "EXP+EXP"
              },
              {
                "result" : "(1-x)^alpha*(1+x)^beta",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 0,
          "sentence" : 1,
          "word" : 8
        }
      ],
      "includes" : [
        "x"
      ],
      "isPartOf" : [
        "P_n^{(\\alpha,\\beta)}(z) = \\frac{(-1)^n}{2^n n!} (1-z)^{-\\alpha} (1+z)^{-\\beta} \\frac{d^n}{dz^n} \\left\\{ (1-z)^\\alpha (1+z)^\\beta \\left (1 - z^2 \\right )^n \\right\\}",
        "\\int_{-1}^1 (1-x)^{\\alpha} (1+x)^{\\beta} P_m^{(\\alpha,\\beta)} (x)P_n^{(\\alpha,\\beta)} (x)\\,dx =\\frac{2^{\\alpha+\\beta+1}}{2n+\\alpha+\\beta+1} \\frac{\\Gamma(n+\\alpha+1)\\Gamma(n+\\beta+1)}{\\Gamma(n+\\alpha+\\beta+1)n!} \\delta_{nm}, \\qquad \\alpha,\\ \\beta > -1"
      ],
      "definiens" : [
        {
          "definition" : "respect to the weight",
          "score" : 0.722
        },
        {
          "definition" : "interval",
          "score" : 0.7125985104912714
        },
        {
          "definition" : "orthogonality condition",
          "score" : 0.37819124115895464
        },
        {
          "definition" : "Rodrigues ' formula",
          "score" : 0.3635871910523791
        },
        {
          "definition" : "Jacobi polynomial",
          "score" : 0.3420998607827622
        },
        {
          "definition" : "equivalent definition",
          "score" : 0.32375325072137184
        }
      ]
    },
    {
      "id" : "FORMULA_7dec1d46e68831c4eca28b020fcb1604",
      "formula" : "[-1, 1]",
      "semanticFormula" : "[-1, 1]",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "[- 1 , 1]",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 1,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "Part[FullSimplify, -1, 1]",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "[- 1 , 1]"
        },
        "Maple" : {
          "translation" : "[- 1 , 1]",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "numberOfFailedTests" : 1,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [-1., 1.]\"",
                "testValues" : { }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "[-1, 1]",
                "property" : "Simple"
              },
              {
                "result" : "[-1, 1]",
                "property" : "ConvEXP"
              },
              {
                "result" : "[-1, 1]",
                "property" : "ConvHYP"
              },
              {
                "result" : "[-1, 1]",
                "property" : "EXP"
              },
              {
                "result" : "[-1, 1]",
                "property" : "EXP+EXP"
              },
              {
                "result" : "[-1, 1]",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 0,
          "sentence" : 1,
          "word" : 12
        },
        {
          "section" : 11,
          "sentence" : 0,
          "word" : 6
        },
        {
          "section" : 11,
          "sentence" : 2,
          "word" : 3
        }
      ],
      "includes" : [ ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "interval",
          "score" : 0.7691252825276034
        },
        {
          "definition" : "respect to the weight",
          "score" : 0.6288842031023242
        },
        {
          "definition" : "asymptotic",
          "score" : 0.4270447071245939
        },
        {
          "definition" : "interior",
          "score" : 0.35159851049127144
        },
        {
          "definition" : "Darboux formula",
          "score" : 0.2378174995334326
        },
        {
          "definition" : "term",
          "score" : 0.14390742558144942
        }
      ]
    },
    {
      "id" : "FORMULA_c8b5b9184e45bca39744427c45693115",
      "formula" : "P_n^{(\\alpha,\\beta)}(z)=\\frac{(\\alpha+1)_n}{n!}\\,{}_2F_1\\left(-n,1+\\alpha+\\beta+n;\\alpha+1;\\tfrac{1}{2}(1-z)\\right)",
      "semanticFormula" : "\\JacobipolyP{\\alpha}{\\beta}{n}@{z} = \\frac{\\Pochhammersym{\\alpha + 1}{n}}{n!} \\genhyperF{2}{1}@{- n , 1 + \\alpha + \\beta + n}{\\alpha + 1}{\\tfrac{1}{2} (1 - z)}",
      "confidence" : 0.45800708304610005,
      "translations" : {
        "Mathematica" : {
          "translation" : "JacobiP[n, \\[Alpha], \\[Beta], z] == Divide[Pochhammer[\\[Alpha]+ 1, n],(n)!]*HypergeometricPFQ[{- n , 1 + \\[Alpha]+ \\[Beta]+ n}, {\\[Alpha]+ 1}, Divide[1,2]*(1 - z)]",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 50,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : true,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "0",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "JacobiP(n, alpha, beta, z) = (pochhammer(alpha + 1, n))/(factorial(n))*hypergeom([- n , 1 + alpha + beta + n], [alpha + 1], (1)/(2)*(1 - z))",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 50,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : true,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "JacobiP(n,alpha,beta,z)-pochhammer(alpha+1,n)/n!*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*z)",
                "property" : "Simple"
              },
              {
                "result" : "JacobiP(n,alpha,beta,z)-pochhammer(alpha+1,n)/n!*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*z)",
                "property" : "ConvEXP"
              },
              {
                "result" : "0",
                "property" : "ConvHYP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,z)-(alpha+n)!/alpha!/n!*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*z)",
                "property" : "EXP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,z)-(alpha+n)!/alpha!/n!*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*z)",
                "property" : "EXP+EXP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,z)-(alpha+n)!/alpha!/n!*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*z)",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 1,
          "sentence" : 0,
          "word" : 12
        }
      ],
      "includes" : [
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "(\\alpha+1)_n",
        "n",
        "n + \\alpha + \\beta",
        "P_{n}^{(\\alpha, \\beta)}",
        "\\alpha,\\beta",
        "z"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "Pochhammer 's symbol",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "hypergeometric function",
          "score" : 0.5988174995334326
        },
        {
          "definition" : "Jacobi polynomial",
          "score" : 0.5988174995334326
        }
      ]
    },
    {
      "id" : "FORMULA_223c39c524bdf2bf4c8bbf904ab164b1",
      "formula" : "(\\alpha+1)_n",
      "semanticFormula" : "\\Pochhammersym{\\alpha + 1}{n}",
      "confidence" : 0.722,
      "translations" : {
        "Mathematica" : {
          "translation" : "Pochhammer[\\[Alpha]+ 1, n]",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 9,
            "numberOfFailedTests" : 9,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "2.5",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "8.75",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "39.375",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "1.5",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "3.75",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "13.125",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "3.0",
                "testValues" : {
                  "α" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "12.0",
                "testValues" : {
                  "α" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "60.0",
                "testValues" : {
                  "α" : "2",
                  "n" : "3"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "Pochhammer[Plus[1, α], n]",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "pochhammer(alpha + 1, n)",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 9,
            "numberOfFailedTests" : 9,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "2.500000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "8.750000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "39.37500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "1.500000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "3.750000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "13.12500000",
                "testValues" : {
                  "alpha" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.",
                "testValues" : {
                  "alpha" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "12.",
                "testValues" : {
                  "alpha" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "60.",
                "testValues" : {
                  "alpha" : "2",
                  "n" : "3"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "pochhammer(alpha+1,n)",
                "property" : "Simple"
              },
              {
                "result" : "pochhammer(alpha+1,n)",
                "property" : "ConvEXP"
              },
              {
                "result" : "pochhammer(alpha+1,n)",
                "property" : "ConvHYP"
              },
              {
                "result" : "pochhammer(alpha,n)*(alpha+n)/alpha",
                "property" : "EXP"
              },
              {
                "result" : "pochhammer(alpha,n)*(alpha+n)/alpha",
                "property" : "EXP+EXP"
              },
              {
                "result" : "pochhammer(alpha,n)*(alpha+n)/alpha",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 1,
          "sentence" : 0,
          "word" : 15
        }
      ],
      "includes" : [
        "n"
      ],
      "isPartOf" : [
        "P_n^{(\\alpha,\\beta)}(z)=\\frac{(\\alpha+1)_n}{n!}\\,{}_2F_1\\left(-n,1+\\alpha+\\beta+n;\\alpha+1;\\tfrac{1}{2}(1-z)\\right)"
      ],
      "definiens" : [
        {
          "definition" : "Pochhammer 's symbol",
          "score" : 0.722
        },
        {
          "definition" : "hypergeometric function",
          "score" : 0.5988174995334326
        },
        {
          "definition" : "Jacobi polynomial",
          "score" : 0.5988174995334326
        }
      ]
    },
    {
      "id" : "FORMULA_8aef2b8e75b872d1e8ef1530bb9bb795",
      "formula" : "P_n^{(\\alpha,\\beta)} (z) = \\frac{\\Gamma (\\alpha+n+1)}{n!\\,\\Gamma (\\alpha+\\beta+n+1)} \\sum_{m=0}^n {n\\choose m} \\frac{\\Gamma (\\alpha + \\beta + n + m + 1)}{\\Gamma (\\alpha + m + 1)} \\left(\\frac{z-1}{2}\\right)^m",
      "semanticFormula" : "\\JacobipolyP{\\alpha}{\\beta}{n}@{z} = \\frac{\\EulerGamma@{\\alpha + n + 1}}{n! \\EulerGamma@{\\alpha + \\beta + n + 1}} \\sum_{m=0}^n{n\\choose m} \\frac{\\EulerGamma@{\\alpha + \\beta + n + m + 1}}{\\EulerGamma@{\\alpha + m + 1}} (\\frac{z-1}{2})^m",
      "confidence" : 0.6776974091773368,
      "translations" : {
        "Mathematica" : {
          "translation" : "JacobiP[n, \\[Alpha], \\[Beta], z] == Divide[Gamma[\\[Alpha]+ n + 1],(n)!*Gamma[\\[Alpha]+ \\[Beta]+ n + 1]]*Sum[Binomial[n,m]*Divide[Gamma[\\[Alpha]+ \\[Beta]+ n + m + 1],Gamma[\\[Alpha]+ m + 1]]*(Divide[z - 1,2])^(m), {m, 0, n}, GenerateConditions->None]",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 50,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : true,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "0",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "JacobiP(n, alpha, beta, z) = (GAMMA(alpha + n + 1))/(factorial(n)*GAMMA(alpha + beta + n + 1))*sum(binomial(n,m)*(GAMMA(alpha + beta + n + m + 1))/(GAMMA(alpha + m + 1))*((z - 1)/(2))^(m), m = 0..n)",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 50,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : true,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "JacobiP(n,alpha,beta,z)-GAMMA(n+alpha+1)/GAMMA(alpha+1)/GAMMA(n+1)*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*z)",
                "property" : "Simple"
              },
              {
                "result" : "JacobiP(n,alpha,beta,z)-GAMMA(n+alpha+1)/GAMMA(alpha+1)/GAMMA(n+1)*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*z)",
                "property" : "ConvEXP"
              },
              {
                "result" : "0",
                "property" : "ConvHYP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,z)-GAMMA(n+alpha+1)/GAMMA(alpha+1)/GAMMA(n+1)*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*z)",
                "property" : "EXP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,z)-GAMMA(n+alpha+1)/GAMMA(alpha+1)/GAMMA(n+1)*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*z)",
                "property" : "EXP+EXP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,z)-GAMMA(n+alpha+1)/GAMMA(alpha+1)/GAMMA(n+1)*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*z)",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 1,
          "sentence" : 1,
          "word" : 21
        }
      ],
      "includes" : [
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "n",
        "\\Gamma(z)",
        "n + \\alpha + \\beta",
        "P_{n}^{(\\alpha, \\beta)}",
        "\\alpha,\\beta",
        "z"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "equivalent expression",
          "score" : 0.7125985104912714
        },
        {
          "definition" : "case",
          "score" : 0.5988174995334326
        },
        {
          "definition" : "series for the hypergeometric function",
          "score" : 0.5988174995334326
        }
      ]
    },
    {
      "id" : "FORMULA_b98cc2a3c71764be8bc7fe354e54ebf7",
      "formula" : "P_n^{(\\alpha,\\beta)}(z) = \\frac{(-1)^n}{2^n n!} (1-z)^{-\\alpha} (1+z)^{-\\beta} \\frac{d^n}{dz^n} \\left\\{ (1-z)^\\alpha (1+z)^\\beta \\left (1 - z^2 \\right )^n \\right\\}",
      "semanticFormula" : "\\JacobipolyP{\\alpha}{\\beta}{n}@{z} = \\frac{(-1)^n}{2^n n!} (1 - z)^{-\\alpha} (1 + z)^{-\\beta} \\deriv [n]{ }{z} \\{(1 - z)^\\alpha (1 + z)^\\beta (1 - z^2)^n \\}",
      "confidence" : 0.8135152636383296,
      "translations" : {
        "Mathematica" : {
          "translation" : "JacobiP[n, \\[Alpha], \\[Beta], z] == Divide[(- 1)^(n),(2)^(n)* (n)!]*(1 - z)^(- \\[Alpha])*(1 + z)^(- \\[Beta])* D[(1 - z)^\\[Alpha]*(1 + z)^\\[Beta]*(1 - (z)^(2))^(n), {z, n}]",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 50,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "$Aborted",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "JacobiP(n, alpha, beta, z) = ((- 1)^(n))/((2)^(n)* factorial(n))*(1 - z)^(- alpha)*(1 + z)^(- beta)* diff((1 - z)^(alpha)*(1 + z)^(beta)*(1 - (z)^(2))^(n), [z$(n)])",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 50,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [-1], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [-1], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [-1], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [-1], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [-1], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [-1], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "3/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "3/2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [-1], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "3/2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "1/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "1/2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [-1], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "1/2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [-1], found in the second list.\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [-1], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [-1], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [-1], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [-1], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [-1], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [-1], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "3/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "3/2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [-1], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "3/2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "1/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"function doesn't exist: missing appropriate non-positive integers in the first list of parameters to compensate the non-positive integer(s): [0], found in the second list.\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "1/2",
                  "beta" : "2",
                  "n" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "JacobiP(n,alpha,beta,z)-(-1)^n*2^(-n)/n!*(1-z)^(-alpha)*(z+1)^(-beta)*Sum(binomial(n,_k1)*(-1)^_k1*pochhammer(alpha-_k1+1,_k1)*(1-z)^(alpha-_k1)*Sum(binomial(n-_k1,_k2)*pochhammer(beta-_k2+1,_k2)*(z+1)^(beta-_k2)*pochhammer(1-n+_k1+_k2,n-_k1-_k2)*z^(-n+_k1+_k2)*hypergeom([1/2, 1, -n],[-1/2*n+1/2*_k1+1/2*_k2+1, -1/2*n+1/2*_k1+1/2*_k2+1/2],z^2),_k2 = 0 .. n-_k1),_k1 = 0 .. n)",
                "property" : "Simple"
              },
              {
                "result" : "1/n!*(-2^(-n)*(1-z)^(-alpha)*(z+1)^(-beta)*exp(I*Pi*n)*Sum(binomial(n,_k1)*(1-z)^(alpha-_k1)*exp(I*Pi*_k1)*pochhammer(alpha-_k1+1,_k1)*Sum(binomial(n-_k1,_k2)*pochhammer(beta-_k2+1,_k2)*(z+1)^(beta-_k2)*pochhammer(1-n+_k1+_k2,n-_k1-_k2)*z^(-n+_k1+_k2)*hypergeom([1/2, 1, -n],[-1/2*n+1/2*_k1+1/2*_k2+1, -1/2*n+1/2*_k1+1/2*_k2+1/2],z^2),_k2 = 0 .. n-_k1),_k1 = 0 .. n)+JacobiP(n,alpha,beta,z)*n!)",
                "property" : "ConvEXP"
              },
              {
                "result" : "binomial(alpha+n,alpha)*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*z)-(-1)^n*2^(-n)/n!*(1-z)^(-alpha)*(z+1)^(-beta)*Sum(binomial(n,_k1)*(-1)^_k1*pochhammer(alpha-_k1+1,_k1)*(1-z)^(alpha-_k1)*Sum(binomial(n-_k1,_k2)*pochhammer(beta-_k2+1,_k2)*(z+1)^(beta-_k2)*pochhammer(1-n+_k1+_k2,n-_k1-_k2)*z^(-n+_k1+_k2)*hypergeom([1/2, 1, -n],[-1/2*n+1/2*_k1+1/2*_k2+1, -1/2*n+1/2*_k1+1/2*_k2+1/2],z^2),_k2 = 0 .. n-_k1),_k1 = 0 .. n)",
                "property" : "ConvHYP"
              },
              {
                "result" : "1/Pi*(-2^(-n)*(1-z)^(-alpha)*(-1)^n*GAMMA(beta+1)*GAMMA(alpha+1)*Sum((-1)^_k1*(1-z)^(alpha-_k1)*z^(-n+_k1)*Sum(sin(Pi*(-n+_k1+_k2))*z^_k2*hypergeom([1/2, 1, -n],[-1/2*n+1/2*_k1+1/2*_k2+1, -1/2*n+1/2*_k1+1/2*_k2+1/2],z^2)/(-n+_k1+_k2)*(z+1)^(-_k2)/GAMMA(beta-_k2+1)/GAMMA(_k2+1),_k2 = 0 .. n-_k1)/GAMMA(alpha-_k1+1)/GAMMA(_k1+1),_k1 = 0 .. n)+JacobiP(n,alpha,beta,z)*Pi)",
                "property" : "EXP"
              },
              {
                "result" : "1/Pi*(-2^(-n)*(1-z)^(-alpha)*(-1)^n*GAMMA(beta+1)*GAMMA(alpha+1)*Sum((-1)^_k1*(1-z)^(alpha-_k1)*z^(-n+_k1)*Sum(sin(Pi*(-n+_k1+_k2))*z^_k2*hypergeom([1/2, 1, -n],[-1/2*n+1/2*_k1+1/2*_k2+1, -1/2*n+1/2*_k1+1/2*_k2+1/2],z^2)/(-n+_k1+_k2)*(z+1)^(-_k2)/GAMMA(beta-_k2+1)/GAMMA(_k2+1),_k2 = 0 .. n-_k1)/GAMMA(alpha-_k1+1)/GAMMA(_k1+1),_k1 = 0 .. n)+JacobiP(n,alpha,beta,z)*Pi)",
                "property" : "EXP+EXP"
              },
              {
                "result" : "1/Pi*(-2^(-n)*(1-z)^(-alpha)*(-1)^n*GAMMA(beta+1)*GAMMA(alpha+1)*Sum((-1)^_k1*(1-z)^(alpha-_k1)*z^(-n+_k1)*Sum(sin(Pi*(-n+_k1+_k2))*z^_k2*hypergeom([1/2, 1, -n],[-1/2*n+1/2*_k1+1/2*_k2+1, -1/2*n+1/2*_k1+1/2*_k2+1/2],z^2)/(-n+_k1+_k2)*(z+1)^(-_k2)/GAMMA(beta-_k2+1)/GAMMA(_k2+1),_k2 = 0 .. n-_k1)/GAMMA(alpha-_k1+1)/GAMMA(_k1+1),_k1 = 0 .. n)+JacobiP(n,alpha,beta,z)*Pi)",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 2,
          "sentence" : 0,
          "word" : 10
        }
      ],
      "includes" : [
        "(1 - x)^{\\alpha}(1 + x)^{\\beta}",
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "n",
        "P_{n}^{(\\alpha, \\beta)}",
        "\\alpha,\\beta",
        "z"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "Rodrigues ' formula",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "equivalent definition",
          "score" : 0.6460746792928004
        }
      ]
    },
    {
      "id" : "FORMULA_c67a4e52a3d370768609f2e25781a9d2",
      "formula" : "\\alpha = \\beta = 0",
      "semanticFormula" : "\\alpha = \\beta = 0",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "\\[Alpha] == \\[Beta] == 0",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 18,
            "numberOfFailedTests" : 15,
            "numberOfSuccessfulTests" : 3,
            "testCalculations" : [
              {
                "result" : "1.0",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]"
                }
              },
              {
                "result" : "-0.5",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2"
                }
              },
              {
                "result" : "-1.0",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]"
                }
              },
              {
                "result" : "-1.5",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2"
                }
              },
              {
                "result" : "0.5",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]"
                }
              },
              {
                "result" : "1.5",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]"
                }
              },
              {
                "result" : "1.5",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]"
                }
              },
              {
                "result" : "0.5",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]"
                }
              },
              {
                "result" : "2.0",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2"
                }
              },
              {
                "result" : "1.5",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]"
                }
              },
              {
                "result" : "0.5",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]"
                }
              },
              {
                "result" : "2.0",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2"
                }
              },
              {
                "result" : "1.5",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]"
                }
              },
              {
                "result" : "0.5",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]"
                }
              },
              {
                "result" : "2.0",
                "testValues" : {
                  "α" : "2",
                  "β" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 2,
            "testCalculations" : [
              {
                "result" : "Plus[α, Times[-1, β]]",
                "property" : "Simple"
              },
              {
                "result" : "β",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "Symbol('alpha') == Symbol('beta') == 0"
        },
        "Maple" : {
          "translation" : "alpha = beta = 0",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 18,
            "numberOfFailedTests" : 15,
            "numberOfSuccessfulTests" : 3,
            "testCalculations" : [
              {
                "result" : "1.000000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "1/2"
                }
              },
              {
                "result" : "-.500000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "2"
                }
              },
              {
                "result" : "-1.000000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "3/2"
                }
              },
              {
                "result" : "-1.500000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "2"
                }
              },
              {
                "result" : ".500000000",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "3/2"
                }
              },
              {
                "result" : "1.500000000",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "1/2"
                }
              },
              {
                "result" : "1.500000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "3/2"
                }
              },
              {
                "result" : ".5000000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "1/2"
                }
              },
              {
                "result" : "2.",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "2"
                }
              },
              {
                "result" : "1.500000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "3/2"
                }
              },
              {
                "result" : ".5000000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "1/2"
                }
              },
              {
                "result" : "2.",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "2"
                }
              },
              {
                "result" : "1.500000000",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "3/2"
                }
              },
              {
                "result" : ".5000000000",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "1/2"
                }
              },
              {
                "result" : "2.",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 12,
            "testCalculations" : [
              {
                "result" : "alpha-beta",
                "property" : "Simple"
              },
              {
                "result" : "beta",
                "property" : "Simple"
              },
              {
                "result" : "alpha-beta",
                "property" : "ConvEXP"
              },
              {
                "result" : "beta",
                "property" : "ConvEXP"
              },
              {
                "result" : "alpha-beta",
                "property" : "ConvHYP"
              },
              {
                "result" : "beta",
                "property" : "ConvHYP"
              },
              {
                "result" : "alpha-beta",
                "property" : "EXP"
              },
              {
                "result" : "beta",
                "property" : "EXP"
              },
              {
                "result" : "alpha-beta",
                "property" : "EXP+EXP"
              },
              {
                "result" : "beta",
                "property" : "EXP+EXP"
              },
              {
                "result" : "alpha-beta",
                "property" : "EXP+HYP"
              },
              {
                "result" : "beta",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 2,
          "sentence" : 1,
          "word" : 1
        }
      ],
      "includes" : [ ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "Legendre polynomial",
          "score" : 0.6859086196238077
        }
      ]
    },
    {
      "id" : "FORMULA_a4907d0a0a6187a8ae845e5eca7cc6d7",
      "formula" : "P_{n}(z) = \\frac{1 }{2^n  n! } \\frac{d^n }{ d z^n }  ( z^2 - 1 )^n  \\;",
      "semanticFormula" : "\\LegendrepolyP{n}@{z} = \\frac{1 }{2^n  n! } \\deriv [n]{ }{z} (z^2 - 1)^n",
      "confidence" : 0.7125985104912714,
      "translations" : {
        "Mathematica" : {
          "translation" : "LegendreP[n, z] == Divide[1,(2)^(n)* (n)!]*D[((z)^(2)- 1)^(n), {z, n}]",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 21,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 21,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "Plus[LegendreP[n, z], Times[-1, Power[2, Times[-1, n]], DifferenceRoot[Function[{, }, {Equal[Plus[Times[Plus[, Times[-2, n]], []], Times[-2, Plus[-1, Times[-1, ], n], z, [Plus[1, ]]], Times[Plus[2, ], Plus[-1, z], Plus[1, z], [Plus[2, ]]]], 0], Equal[[0], Power[Plus[-1, Power[z, 2]], n]], Equal[[1], Times[2, n, z, Power[Plus[-1, Power[z, 2]], Plus[-1, n]]]]}]][n]]]",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "LegendreP(n, z) = (1)/((2)^(n)* factorial(n))*diff(((z)^(2)- 1)^(n), [z$(n)])",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 9,
            "numberOfFailedTests" : 9,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "\"the function is not defined: corresponding GAMMA poles must not coincide\"",
                "testValues" : {
                  "z" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"the function is not defined: corresponding GAMMA poles must not coincide\"",
                "testValues" : {
                  "z" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"the function is not defined: corresponding GAMMA poles must not coincide\"",
                "testValues" : {
                  "z" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"the function is not defined: corresponding GAMMA poles must not coincide\"",
                "testValues" : {
                  "z" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"the function is not defined: corresponding GAMMA poles must not coincide\"",
                "testValues" : {
                  "z" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"the function is not defined: corresponding GAMMA poles must not coincide\"",
                "testValues" : {
                  "z" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"the function is not defined: corresponding GAMMA poles must not coincide\"",
                "testValues" : {
                  "z" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"the function is not defined: corresponding GAMMA poles must not coincide\"",
                "testValues" : {
                  "z" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"the function is not defined: corresponding GAMMA poles must not coincide\"",
                "testValues" : {
                  "z" : "2",
                  "n" : "3"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "1/n/Pi*(LegendreP(n,z)*Pi*n-2^(-n)*z^(-n)*sin(Pi*n)*(-1)^n*hypergeom([1/2, 1, -n],[-1/2*n+1, -1/2*n+1/2],z^2))",
                "property" : "Simple"
              },
              {
                "result" : "1/n/Pi*(LegendreP(n,z)*Pi*n-2^(-n)*z^(-n)*sin(Pi*n)*exp(I*Pi*n)*hypergeom([1/2, 1, -n],[-1/2*n+1, -1/2*n+1/2],z^2))",
                "property" : "ConvEXP"
              },
              {
                "result" : "1/n/Pi*(hypergeom([-n, n+1],[1],1/2-1/2*z)*Pi*n-2^(-n)*z^(-n)*sin(Pi*n)*(-1)^n*hypergeom([1/2, 1, -n],[-1/2*n+1, -1/2*n+1/2],z^2))",
                "property" : "ConvHYP"
              },
              {
                "result" : "1/n/Pi*(LegendreP(n,z)*Pi*n-2^(-n)*z^(-n)*sin(Pi*n)*(-1)^n*hypergeom([1/2, 1, -n],[-1/2*n+1, -1/2*n+1/2],z^2))",
                "property" : "EXP"
              },
              {
                "result" : "1/n/Pi*(LegendreP(n,z)*Pi*n-2^(-n)*z^(-n)*sin(Pi*n)*(-1)^n*hypergeom([1/2, 1, -n],[-1/2*n+1, -1/2*n+1/2],z^2))",
                "property" : "EXP+EXP"
              },
              {
                "result" : "1/n/Pi*(LegendreP(n,z)*Pi*n-2^(-n)*z^(-n)*sin(Pi*n)*(-1)^n*hypergeom([1/2, 1, -n],[-1/2*n+1, -1/2*n+1/2],z^2))",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 2,
          "sentence" : 1,
          "word" : 11
        }
      ],
      "includes" : [
        "n",
        "z"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "Legendre polynomial",
          "score" : 0.7125985104912714
        }
      ]
    },
    {
      "id" : "FORMULA_9dd4e461268c8034f5c8564e155c67a6",
      "formula" : "x",
      "semanticFormula" : "x",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "x",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 3,
            "numberOfFailedTests" : 3,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "1.5",
                "testValues" : {
                  "x" : "Rational[3, 2]"
                }
              },
              {
                "result" : "0.5",
                "testValues" : {
                  "x" : "Rational[1, 2]"
                }
              },
              {
                "result" : "2.0",
                "testValues" : {
                  "x" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "x",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "x"
        },
        "Maple" : {
          "translation" : "x",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 3,
            "numberOfFailedTests" : 3,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "1.500000000",
                "testValues" : {
                  "x" : "3/2"
                }
              },
              {
                "result" : ".5000000000",
                "testValues" : {
                  "x" : "1/2"
                }
              },
              {
                "result" : "2.",
                "testValues" : {
                  "x" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "x",
                "property" : "Simple"
              },
              {
                "result" : "x",
                "property" : "ConvEXP"
              },
              {
                "result" : "x",
                "property" : "ConvHYP"
              },
              {
                "result" : "x",
                "property" : "EXP"
              },
              {
                "result" : "x",
                "property" : "EXP+EXP"
              },
              {
                "result" : "x",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 3,
          "sentence" : 0,
          "word" : 2
        },
        {
          "section" : 11,
          "sentence" : 0,
          "word" : 1
        }
      ],
      "includes" : [ ],
      "isPartOf" : [
        "(1 - x)^{\\alpha}(1 + x)^{\\beta}",
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "P_n^{(\\alpha,\\beta)}(x)= \\sum_{s=0}^n {n+\\alpha\\choose n-s}{n+\\beta \\choose s} \\left(\\frac{x-1}{2}\\right)^{s} \\left(\\frac{x+1}{2}\\right)^{n-s}",
        "P_n^{(\\alpha,\\beta)}(x)=(n+\\alpha)! (n+\\beta)! \\sum_{s=0}^n \\frac{1}{s! (n+\\alpha-s)!(\\beta+s)!(n-s)!} \\left(\\frac{x-1}{2}\\right)^{n-s} \\left(\\frac{x+1}{2}\\right)^{s}",
        "\\int_{-1}^1 (1-x)^{\\alpha} (1+x)^{\\beta} P_m^{(\\alpha,\\beta)} (x)P_n^{(\\alpha,\\beta)} (x)\\,dx =\\frac{2^{\\alpha+\\beta+1}}{2n+\\alpha+\\beta+1} \\frac{\\Gamma(n+\\alpha+1)\\Gamma(n+\\beta+1)}{\\Gamma(n+\\alpha+\\beta+1)n!} \\delta_{nm}, \\qquad \\alpha,\\ \\beta > -1",
        "\\left (1-x^2 \\right )y'' + ( \\beta-\\alpha - (\\alpha + \\beta + 2)x )y' + n(n+\\alpha+\\beta+1) y = 0"
      ],
      "definiens" : [
        {
          "definition" : "Jacobi polynomial",
          "score" : 0.9097529883184008
        },
        {
          "definition" : "special case",
          "score" : 0.5672486918673748
        },
        {
          "definition" : "nonnegative integer",
          "score" : 0.5274147515363676
        },
        {
          "definition" : "quantity",
          "score" : 0.48015757177699975
        },
        {
          "definition" : "interval",
          "score" : 0.4149862628581402
        },
        {
          "definition" : "orthogonality condition",
          "score" : 0.37217380952380946
        },
        {
          "definition" : "class of classical orthogonal polynomial",
          "score" : 0.34195572775317623
        },
        {
          "definition" : "solution of the second order linear homogeneous differential equation",
          "score" : 0.34128947089398726
        },
        {
          "definition" : "interior",
          "score" : 0.3412842248511015
        },
        {
          "definition" : "respect to the weight",
          "score" : 0.3170812444090436
        },
        {
          "definition" : "mathematics",
          "score" : 0.3152658368857124
        },
        {
          "definition" : "asymptotic",
          "score" : 0.3145943339836376
        },
        {
          "definition" : "Darboux formula",
          "score" : 0.3145943339836376
        },
        {
          "definition" : "hypergeometric polynomial",
          "score" : 0.22817471679533732
        },
        {
          "definition" : "term",
          "score" : 0.22750321389326258
        }
      ]
    },
    {
      "id" : "FORMULA_928ae1a1423003c84cfa0f8765957889",
      "formula" : "P_n^{(\\alpha,\\beta)}(x)= \\sum_{s=0}^n {n+\\alpha\\choose n-s}{n+\\beta \\choose s} \\left(\\frac{x-1}{2}\\right)^{s} \\left(\\frac{x+1}{2}\\right)^{n-s}",
      "semanticFormula" : "\\JacobipolyP{\\alpha}{\\beta}{n}@{x} = \\sum_{s=0}^n{n+\\alpha\\choose n-s}{n+\\beta \\choose s} (\\frac{x-1}{2})^{s} (\\frac{x+1}{2})^{n-s}",
      "confidence" : 0.6859086196238077,
      "translations" : {
        "Mathematica" : {
          "translation" : "JacobiP[n, \\[Alpha], \\[Beta], x] == Sum[Binomial[n + \\[Alpha],n - s]*Binomial[n + \\[Beta],s]*(Divide[x - 1,2])^(s)*(Divide[x + 1,2])^(n - s), {s, 0, n}, GenerateConditions->None]",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 50,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "Plus[Times[-1, Power[2, Times[-1, n]], Power[Plus[1, x], n], Binomial[Plus[n, α], n], Hypergeometric2F1[Times[-1, n], Plus[Times[-1, n], Times[-1, β]], Plus[1, α], Times[Plus[-1, x], Power[Plus[1, x], -1]]]], JacobiP[n, α, β, x]]",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "JacobiP(n, alpha, beta, x) = sum(binomial(n + alpha,n - s)*binomial(n + beta,s)*((x - 1)/(2))^(s)*((x + 1)/(2))^(n - s), s = 0..n)",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 50,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "JacobiP(n,alpha,beta,x)-binomial(alpha+n,n)*(1/2+1/2*x)^n*hypergeom([-n, -n-beta],[alpha+1],(x-1)/(1+x))",
                "property" : "Simple"
              },
              {
                "result" : "JacobiP(n,alpha,beta,x)-binomial(alpha+n,n)*exp(n*(-ln(2)+ln(1+x)))*hypergeom([-n, -n-beta],[alpha+1],(x-1)/(1+x))",
                "property" : "ConvEXP"
              },
              {
                "result" : "binomial(alpha+n,alpha)*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*x)-binomial(alpha+n,n)*(1/2+1/2*x)^n*hypergeom([-n, -n-beta],[alpha+1],(x-1)/(1+x))",
                "property" : "ConvHYP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,x)-binomial(alpha+n,n)*(1/2+1/2*x)^n*hypergeom([-n, -n-beta],[alpha+1],(x-1)/(1+x))",
                "property" : "EXP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,x)-binomial(alpha+n,n)*(1/2+1/2*x)^n*hypergeom([-n, -n-beta],[alpha+1],(x-1)/(1+x))",
                "property" : "EXP+EXP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,x)-binomial(alpha+n,n)*(1/2+1/2*x)^n*hypergeom([-n, -n-beta],[alpha+1],(x-1)/(1+x))",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 3,
          "sentence" : 0,
          "word" : 11
        }
      ],
      "includes" : [
        "x",
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "n",
        "s",
        "P_{n}^{(\\alpha, \\beta)}",
        "\\alpha,\\beta"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "Jacobi polynomial",
          "score" : 0.6859086196238077
        }
      ]
    },
    {
      "id" : "FORMULA_7b8b965ad4bca0e41ab51de7b31363a1",
      "formula" : "n",
      "semanticFormula" : "n",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "n",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 3,
            "numberOfFailedTests" : 3,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "1.0",
                "testValues" : {
                  "n" : "1"
                }
              },
              {
                "result" : "2.0",
                "testValues" : {
                  "n" : "2"
                }
              },
              {
                "result" : "3.0",
                "testValues" : {
                  "n" : "3"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "n",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "n"
        },
        "Maple" : {
          "translation" : "n",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 3,
            "numberOfFailedTests" : 3,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "1.",
                "testValues" : {
                  "n" : "1"
                }
              },
              {
                "result" : "2.",
                "testValues" : {
                  "n" : "2"
                }
              },
              {
                "result" : "3.",
                "testValues" : {
                  "n" : "3"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "n",
                "property" : "Simple"
              },
              {
                "result" : "n",
                "property" : "ConvEXP"
              },
              {
                "result" : "n",
                "property" : "ConvHYP"
              },
              {
                "result" : "n",
                "property" : "EXP"
              },
              {
                "result" : "n",
                "property" : "EXP+EXP"
              },
              {
                "result" : "n",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 3,
          "sentence" : 1,
          "word" : 3
        },
        {
          "section" : 11,
          "sentence" : 0,
          "word" : 14
        }
      ],
      "includes" : [ ],
      "isPartOf" : [
        "(\\alpha+1)_n",
        "P_n^{(\\alpha,\\beta)}(z)=\\frac{(\\alpha+1)_n}{n!}\\,{}_2F_1\\left(-n,1+\\alpha+\\beta+n;\\alpha+1;\\tfrac{1}{2}(1-z)\\right)",
        "P_n^{(\\alpha,\\beta)} (z) = \\frac{\\Gamma (\\alpha+n+1)}{n!\\,\\Gamma (\\alpha+\\beta+n+1)} \\sum_{m=0}^n {n\\choose m} \\frac{\\Gamma (\\alpha + \\beta + n + m + 1)}{\\Gamma (\\alpha + m + 1)} \\left(\\frac{z-1}{2}\\right)^m",
        "P_n^{(\\alpha,\\beta)}(z) = \\frac{(-1)^n}{2^n n!} (1-z)^{-\\alpha} (1+z)^{-\\beta} \\frac{d^n}{dz^n} \\left\\{ (1-z)^\\alpha (1+z)^\\beta \\left (1 - z^2 \\right )^n \\right\\}",
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "P_n^{(\\alpha,\\beta)}(x)= \\sum_{s=0}^n {n+\\alpha\\choose n-s}{n+\\beta \\choose s} \\left(\\frac{x-1}{2}\\right)^{s} \\left(\\frac{x+1}{2}\\right)^{n-s}",
        "P_{n}(z) = \\frac{1 }{2^n  n! } \\frac{d^n }{ d z^n }  ( z^2 - 1 )^n  \\;",
        "{z \\choose n} = \\begin{cases} \\frac{\\Gamma(z+1)}{\\Gamma(n+1)\\Gamma(z-n+1)} & n \\geq 0 \\\\ 0 & n < 0 \\end{cases}",
        "n, n + \\alpha, n + \\beta",
        "n + \\alpha + \\beta",
        "P_n^{(\\alpha,\\beta)}(x)=(n+\\alpha)! (n+\\beta)! \\sum_{s=0}^n \\frac{1}{s! (n+\\alpha-s)!(\\beta+s)!(n-s)!} \\left(\\frac{x-1}{2}\\right)^{n-s} \\left(\\frac{x+1}{2}\\right)^{s}",
        "\\int_{-1}^1 (1-x)^{\\alpha} (1+x)^{\\beta} P_m^{(\\alpha,\\beta)} (x)P_n^{(\\alpha,\\beta)} (x)\\,dx =\\frac{2^{\\alpha+\\beta+1}}{2n+\\alpha+\\beta+1} \\frac{\\Gamma(n+\\alpha+1)\\Gamma(n+\\beta+1)}{\\Gamma(n+\\alpha+\\beta+1)n!} \\delta_{nm}, \\qquad \\alpha,\\ \\beta > -1",
        "n=m",
        "P_n^{(\\alpha, \\beta)} (1) = {n+\\alpha\\choose n}",
        "P_n^{(\\alpha, \\beta)} (-z) = (-1)^n P_n^{(\\beta, \\alpha)} (z)",
        "P_n^{(\\alpha, \\beta)} (-1) = (-1)^n { n+\\beta\\choose n}",
        "\\frac{d^k}{dz^k} P_n^{(\\alpha,\\beta)} (z) = \\frac{\\Gamma (\\alpha+\\beta+n+1+k)}{2^k \\Gamma (\\alpha+\\beta+n+1)} P_{n-k}^{(\\alpha+k, \\beta+k)} (z)",
        "P_{n}^{(\\alpha, \\beta)}",
        "\\left (1-x^2 \\right )y'' + ( \\beta-\\alpha - (\\alpha + \\beta + 2)x )y' + n(n+\\alpha+\\beta+1) y = 0",
        "\\begin{align}&2n (n + \\alpha + \\beta) (2n + \\alpha + \\beta - 2) P_n^{(\\alpha,\\beta)}(z) \\\\&\\qquad= (2n+\\alpha + \\beta-1) \\Big\\{ (2n+\\alpha + \\beta)(2n+\\alpha+\\beta-2) z +  \\alpha^2 - \\beta^2 \\Big\\} P_{n-1}^{(\\alpha,\\beta)}(z) - 2 (n+\\alpha - 1) (n + \\beta-1) (2n+\\alpha + \\beta) P_{n-2}^{(\\alpha, \\beta)}(z),\\end{align}",
        "n= 2, 3, ...",
        "\\begin{align}(z-1) \\frac{d}{dz} P_n^{(\\alpha,\\beta)}(z) &= \\frac{1}{2} (z-1)(1+\\alpha+\\beta+n)P_{n-1}^{(\\alpha+1,\\beta+1)} \\\\&= n P_n^{(\\alpha,\\beta)} - (\\alpha+n) P_{n-1}^{(\\alpha,\\beta+1)} \\\\&=(1+\\alpha+\\beta+n) \\left( P_n^{(\\alpha,\\beta+1)} - P_{n}^{(\\alpha,\\beta)} \\right) \\\\&=(\\alpha+n) P_n^{(\\alpha-1,\\beta+1)} - \\alpha P_n^{(\\alpha,\\beta)} \\\\&=\\frac{2(n+1) P_{n+1}^{(\\alpha,\\beta-1)} - \\left(z(1+\\alpha+\\beta+n)+\\alpha+1+n-\\beta \\right) P_n^{(\\alpha,\\beta)}}{1+z} \\\\&=\\frac{(2\\beta+n+nz) P_n^{(\\alpha,\\beta)} - 2(\\beta+n) P_n^{(\\alpha,\\beta-1)}}{1+z} \\\\&=\\frac{1-z}{1+z} \\left( \\beta P_n^{(\\alpha,\\beta)} - (\\beta+n) P_{n}^{(\\alpha+1,\\beta-1)} \\right) \\, .\\end{align}",
        "\\sum_{n=0}^\\infty P_n^{(\\alpha,\\beta)}(z) t^n = 2^{\\alpha + \\beta} R^{-1} (1 - t + R)^{-\\alpha} (1 + t + R)^{-\\beta}",
        "P_n^{(\\alpha,\\beta)}(\\cos \\theta) = n^{-\\frac{1}{2}}k(\\theta)\\cos (N\\theta + \\gamma) + O \\left (n^{-\\frac{3}{2}} \\right )",
        "\\begin{align}k(\\theta) &= \\pi^{-\\frac{1}{2}} \\sin^{-\\alpha-\\frac{1}{2}} \\tfrac{\\theta}{2} \\cos^{-\\beta-\\frac{1}{2}} \\tfrac{\\theta}{2},\\\\N &= n + \\tfrac{1}{2} (\\alpha+\\beta+1),\\\\\\gamma &= - \\tfrac{\\pi}{2} \\left (\\alpha + \\tfrac{1}{2} \\right ),\\end{align}",
        "\\begin{align}\\lim_{n \\to \\infty} n^{-\\alpha}P_n^{(\\alpha,\\beta)}\\left(\\cos \\left ( \\tfrac{z}{n} \\right ) \\right) &= \\left(\\tfrac{z}{2}\\right)^{-\\alpha} J_\\alpha(z)\\\\ \\lim_{n \\to \\infty} n^{-\\beta}P_n^{(\\alpha,\\beta)}\\left(\\cos \\left (\\pi - \\tfrac{z}{n} \\right) \\right) &= \\left(\\tfrac{z}{2}\\right)^{-\\beta} J_\\beta(z)\\end{align}"
      ],
      "definiens" : [
        {
          "definition" : "Jacobi polynomial",
          "score" : 0.8688928255548329
        },
        {
          "definition" : "integer",
          "score" : 0.722
        },
        {
          "definition" : "Gamma function",
          "score" : 0.6839477168404777
        },
        {
          "definition" : "quantity",
          "score" : 0.6584627369697272
        },
        {
          "definition" : "nonnegative integer",
          "score" : 0.6317728461022634
        },
        {
          "definition" : "special case",
          "score" : 0.6317728461022634
        },
        {
          "definition" : "Legendre polynomial",
          "score" : 0.5120429549357158
        },
        {
          "definition" : "Rodrigues ' formula",
          "score" : 0.41371425056515165
        },
        {
          "definition" : "orthogonality condition",
          "score" : 0.3996726567405132
        },
        {
          "definition" : "equivalent expression",
          "score" : 0.39027116723178473
        },
        {
          "definition" : "equivalent definition",
          "score" : 0.3738803102341444
        },
        {
          "definition" : "symmetry relation",
          "score" : 0.350211185515873
        },
        {
          "definition" : "identity",
          "score" : 0.34953977816074233
        },
        {
          "definition" : "Darboux formula",
          "score" : 0.34953968348089337
        },
        {
          "definition" : "Heine formula",
          "score" : 0.3495396826137982
        },
        {
          "definition" : "simplicity",
          "score" : 0.3426251035304757
        },
        {
          "definition" : "other terminal value",
          "score" : 0.3408096960071445
        },
        {
          "definition" : "class of classical orthogonal polynomial",
          "score" : 0.3402936249371742
        },
        {
          "definition" : "solution of the second order linear homogeneous differential equation",
          "score" : 0.3401690346273844
        },
        {
          "definition" : "recurrence relation for the Jacobi polynomial",
          "score" : 0.34014343914795553
        },
        {
          "definition" : "asymptotic",
          "score" : 0.3401381939721649
        },
        {
          "definition" : "term",
          "score" : 0.3401381939721649
        },
        {
          "definition" : "Pochhammer 's symbol",
          "score" : 0.33493639740158543
        },
        {
          "definition" : "polynomial",
          "score" : 0.3141198051396807
        },
        {
          "definition" : "derivative of the explicit expression",
          "score" : 0.3136037340697103
        },
        {
          "definition" : "mathematics",
          "score" : 0.3136037340697103
        },
        {
          "definition" : "function of the Jacobi polynomial",
          "score" : 0.31344831240981247
        },
        {
          "definition" : "interval",
          "score" : 0.313448303104701
        },
        {
          "definition" : "asymptotic of the Jacobi polynomial",
          "score" : 0.3134483022376059
        },
        {
          "definition" : "limit",
          "score" : 0.3134483022376059
        },
        {
          "definition" : "Mehler",
          "score" : 0.3134483022376059
        },
        {
          "definition" : "square root of the right hand side",
          "score" : 0.28150981051866586
        },
        {
          "definition" : "case",
          "score" : 0.27649015627394585
        },
        {
          "definition" : "series for the hypergeometric function",
          "score" : 0.27649015627394585
        },
        {
          "definition" : "alternative normalization",
          "score" : 0.27610127233200465
        },
        {
          "definition" : "Gauss ' contiguous relation",
          "score" : 0.2736144574535428
        },
        {
          "definition" : "interior",
          "score" : 0.27361436277369383
        },
        {
          "definition" : "domain",
          "score" : 0.2736143619065987
        },
        {
          "definition" : "hypergeometric function",
          "score" : 0.2478452773112104
        },
        {
          "definition" : "orthonormal basis",
          "score" : 0.22884409257263683
        },
        {
          "definition" : "hypergeometric polynomial",
          "score" : 0.22651261397933525
        },
        {
          "definition" : "branch of square root",
          "score" : 0.2263571923194374
        },
        {
          "definition" : "point",
          "score" : 0.22635718214723086
        },
        {
          "definition" : "equation",
          "score" : 0.18553036932110353
        }
      ]
    },
    {
      "id" : "FORMULA_b1e4493881f1c47423915d9999dd9459",
      "formula" : "{z \\choose n} = \\begin{cases} \\frac{\\Gamma(z+1)}{\\Gamma(n+1)\\Gamma(z-n+1)} & n \\geq 0 \\\\ 0 & n < 0 \\end{cases}",
      "semanticFormula" : "{z \\choose n} = \\begin{cases}\\frac{\\EulerGamma@{z + 1}}{\\EulerGamma@{n + 1} \\EulerGamma@{z - n + 1}} n \\geq 0 0 & n < 0\\end{cases}",
      "confidence" : 0.5645790665700885,
      "translations" : {
        "Mathematica" : {
          "translation" : "Binomial[z,n] == ",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 21,
            "numberOfFailedTests" : 20,
            "numberOfSuccessfulTests" : 1,
            "testCalculations" : [
              {
                "result" : "Complex[0.8660254037844387, 0.49999999999999994]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-0.18301270189221927, 0.18301270189221933]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[0.03867513459481284, -0.09967936855888596]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-0.4999999999999998, 0.8660254037844387]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-2.7755575615628914*^-16, -0.8660254037844385]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[0.2500000000000001, 0.7216878364870319]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[0.5000000000000001, -0.8660254037844386]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[-1, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-0.49999999999999994, -1.1102230246251565*^-16]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[-1, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[0.24999999999999997, 0.1443375672974065]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[-1, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-0.8660254037844387, -0.49999999999999994]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[-5, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[0.6830127018922194, 0.6830127018922193]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[-5, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-0.5386751345948131, -0.7663460352255526]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[-5, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "1.5",
                "testValues" : {
                  "z" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "0.375",
                "testValues" : {
                  "z" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "-0.0625",
                "testValues" : {
                  "z" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "0.5",
                "testValues" : {
                  "z" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "-0.125",
                "testValues" : {
                  "z" : "Rational[1, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "0.0625",
                "testValues" : {
                  "z" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "2.0",
                "testValues" : {
                  "z" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "1.0",
                "testValues" : {
                  "z" : "2",
                  "n" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "Binomial[z, n]",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "binomial(z,n) == "
        },
        "Maple" : {
          "translation" : "binomial(z,n) = ",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 9,
            "numberOfFailedTests" : 8,
            "numberOfSuccessfulTests" : 1,
            "testCalculations" : [
              {
                "result" : "1.500000000",
                "testValues" : {
                  "z" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : ".3750000000",
                "testValues" : {
                  "z" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-.6250000000e-1",
                "testValues" : {
                  "z" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : ".5000000000",
                "testValues" : {
                  "z" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-.1250000000",
                "testValues" : {
                  "z" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : ".6250000000e-1",
                "testValues" : {
                  "z" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "2.",
                "testValues" : {
                  "z" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "1.",
                "testValues" : {
                  "z" : "2",
                  "n" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "binomial(z,n)",
                "property" : "Simple"
              },
              {
                "result" : "binomial(z,n)",
                "property" : "ConvEXP"
              },
              {
                "result" : "binomial(z,n)",
                "property" : "ConvHYP"
              },
              {
                "result" : "binomial(z,n)",
                "property" : "EXP"
              },
              {
                "result" : "binomial(z,n)",
                "property" : "EXP+EXP"
              },
              {
                "result" : "binomial(z,n)",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 3,
          "sentence" : 1,
          "word" : 4
        }
      ],
      "includes" : [
        "n",
        "\\Gamma(z)",
        "z"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "integer",
          "score" : 0.722
        },
        {
          "definition" : "Gamma function",
          "score" : 0.7125985104912714
        }
      ]
    },
    {
      "id" : "FORMULA_c5accc69791b469f2ce6bde7e27a4506",
      "formula" : "\\Gamma(z)",
      "semanticFormula" : "\\EulerGamma@{z}",
      "confidence" : 0.5720276987143617,
      "translations" : {
        "Mathematica" : {
          "translation" : "Gamma[z]",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 7,
            "numberOfFailedTests" : 7,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "Complex[0.8197354427278049, -0.29704633850053175]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]"
                }
              },
              {
                "result" : "Complex[-0.6378792868876463, -0.07028113503552423]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]"
                }
              },
              {
                "result" : "Complex[0.379804891791389, 0.5172790994748382]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[-1, 3]], Pi]]"
                }
              },
              {
                "result" : "Complex[-0.9082473370007507, -1.245645438214263]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[-5, 6]], Pi]]"
                }
              },
              {
                "result" : "0.8862269254527579",
                "testValues" : {
                  "z" : "Rational[3, 2]"
                }
              },
              {
                "result" : "1.7724538509055159",
                "testValues" : {
                  "z" : "Rational[1, 2]"
                }
              },
              {
                "result" : "1.0",
                "testValues" : {
                  "z" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "Gamma[z]",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "GAMMA(z)",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 3,
            "numberOfFailedTests" : 3,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : ".8862269255",
                "testValues" : {
                  "z" : "3/2"
                }
              },
              {
                "result" : "1.772453851",
                "testValues" : {
                  "z" : "1/2"
                }
              },
              {
                "result" : "1.",
                "testValues" : {
                  "z" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "GAMMA(z)",
                "property" : "Simple"
              },
              {
                "result" : "GAMMA(z)",
                "property" : "ConvEXP"
              },
              {
                "result" : "GAMMA(z)",
                "property" : "ConvHYP"
              },
              {
                "result" : "GAMMA(z)",
                "property" : "EXP"
              },
              {
                "result" : "GAMMA(z)",
                "property" : "EXP+EXP"
              },
              {
                "result" : "GAMMA(z)",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 3,
          "sentence" : 1,
          "word" : 6
        }
      ],
      "includes" : [
        "z"
      ],
      "isPartOf" : [
        "{z \\choose n} = \\begin{cases} \\frac{\\Gamma(z+1)}{\\Gamma(n+1)\\Gamma(z-n+1)} & n \\geq 0 \\\\ 0 & n < 0 \\end{cases}",
        "P_n^{(\\alpha,\\beta)} (z) = \\frac{\\Gamma (\\alpha+n+1)}{n!\\,\\Gamma (\\alpha+\\beta+n+1)} \\sum_{m=0}^n {n\\choose m} \\frac{\\Gamma (\\alpha + \\beta + n + m + 1)}{\\Gamma (\\alpha + m + 1)} \\left(\\frac{z-1}{2}\\right)^m",
        "\\int_{-1}^1 (1-x)^{\\alpha} (1+x)^{\\beta} P_m^{(\\alpha,\\beta)} (x)P_n^{(\\alpha,\\beta)} (x)\\,dx =\\frac{2^{\\alpha+\\beta+1}}{2n+\\alpha+\\beta+1} \\frac{\\Gamma(n+\\alpha+1)\\Gamma(n+\\beta+1)}{\\Gamma(n+\\alpha+\\beta+1)n!} \\delta_{nm}, \\qquad \\alpha,\\ \\beta > -1",
        "\\frac{d^k}{dz^k} P_n^{(\\alpha,\\beta)} (z) = \\frac{\\Gamma (\\alpha+\\beta+n+1+k)}{2^k \\Gamma (\\alpha+\\beta+n+1)} P_{n-k}^{(\\alpha+k, \\beta+k)} (z)"
      ],
      "definiens" : [
        {
          "definition" : "Gamma function",
          "score" : 0.722
        },
        {
          "definition" : "integer",
          "score" : 0.722
        },
        {
          "definition" : "orthogonality condition",
          "score" : 0.4283234503913069
        },
        {
          "definition" : "equivalent expression",
          "score" : 0.41892196088257844
        },
        {
          "definition" : "Jacobi polynomial",
          "score" : 0.3922320700151146
        },
        {
          "definition" : "derivative of the explicit expression",
          "score" : 0.34225452772050396
        },
        {
          "definition" : "case",
          "score" : 0.3051409499247395
        },
        {
          "definition" : "series for the hypergeometric function",
          "score" : 0.3051409499247395
        }
      ]
    },
    {
      "id" : "FORMULA_4161afcc29ec4aba9d1a79c1fe437fd6",
      "formula" : "n, n + \\alpha, n + \\beta",
      "semanticFormula" : "n, n + \\alpha, n + \\beta",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "n , n + \\[Alpha], n + \\[Beta]",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 27,
            "numberOfFailedTests" : 4,
            "numberOfSuccessfulTests" : 23,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "FullSimplify[n, Plus[n, α], Plus[n, β]]",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "n , n + Symbol('alpha'), n + Symbol('beta')"
        },
        "Maple" : {
          "translation" : "n , n + alpha , n + beta",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 27,
            "numberOfFailedTests" : 27,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "2",
                  "n" : "3"
                }
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 3,
          "sentence" : 2,
          "word" : 8
        }
      ],
      "includes" : [
        "n",
        "\\alpha,\\beta"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "quantity",
          "score" : 0.722
        },
        {
          "definition" : "nonnegative integer",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "special case",
          "score" : 0.6460746792928004
        },
        {
          "definition" : "Jacobi polynomial",
          "score" : 0.5500952380952381
        }
      ]
    },
    {
      "id" : "FORMULA_30148eb3081f2fd3d2ccaf3ddb3e541c",
      "formula" : "n + \\alpha + \\beta",
      "semanticFormula" : "n + \\alpha + \\beta",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "n + \\[Alpha]+ \\[Beta]",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 27,
            "numberOfFailedTests" : 27,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "4.0",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "5.0",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "6.0",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "3.0",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "4.0",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "5.0",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "4.5",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "5.5",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "6.5",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.0",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "4.0",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "5.0",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "2.0",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "3.0",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "4.0",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "3.5",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "4.5",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "5.5",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "4.5",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "5.5",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "6.5",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "3.5",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "4.5",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "5.5",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "5.0",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "6.0",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "7.0",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "n" : "3"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "Plus[n, α, β]",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "n + Symbol('alpha')+ Symbol('beta')"
        },
        "Maple" : {
          "translation" : "n + alpha + beta",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 27,
            "numberOfFailedTests" : 27,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "4.",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "5.",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "6.",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "4.",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "5.",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "4.500000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "5.500000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "6.500000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "4.",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "5.",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "2.",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "3.",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "4.",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.500000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "4.500000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "5.500000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "4.500000000",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "5.500000000",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "6.500000000",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.500000000",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "4.500000000",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "5.500000000",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "5.",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "6.",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "7.",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "2",
                  "n" : "3"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "alpha+beta+n",
                "property" : "Simple"
              },
              {
                "result" : "alpha+beta+n",
                "property" : "ConvEXP"
              },
              {
                "result" : "alpha+beta+n",
                "property" : "ConvHYP"
              },
              {
                "result" : "alpha+beta+n",
                "property" : "EXP"
              },
              {
                "result" : "alpha+beta+n",
                "property" : "EXP+EXP"
              },
              {
                "result" : "alpha+beta+n",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 3,
          "sentence" : 2,
          "word" : 11
        }
      ],
      "includes" : [
        "n"
      ],
      "isPartOf" : [
        "P_n^{(\\alpha,\\beta)}(z)=\\frac{(\\alpha+1)_n}{n!}\\,{}_2F_1\\left(-n,1+\\alpha+\\beta+n;\\alpha+1;\\tfrac{1}{2}(1-z)\\right)",
        "P_n^{(\\alpha,\\beta)} (z) = \\frac{\\Gamma (\\alpha+n+1)}{n!\\,\\Gamma (\\alpha+\\beta+n+1)} \\sum_{m=0}^n {n\\choose m} \\frac{\\Gamma (\\alpha + \\beta + n + m + 1)}{\\Gamma (\\alpha + m + 1)} \\left(\\frac{z-1}{2}\\right)^m",
        "\\int_{-1}^1 (1-x)^{\\alpha} (1+x)^{\\beta} P_m^{(\\alpha,\\beta)} (x)P_n^{(\\alpha,\\beta)} (x)\\,dx =\\frac{2^{\\alpha+\\beta+1}}{2n+\\alpha+\\beta+1} \\frac{\\Gamma(n+\\alpha+1)\\Gamma(n+\\beta+1)}{\\Gamma(n+\\alpha+\\beta+1)n!} \\delta_{nm}, \\qquad \\alpha,\\ \\beta > -1",
        "\\frac{d^k}{dz^k} P_n^{(\\alpha,\\beta)} (z) = \\frac{\\Gamma (\\alpha+\\beta+n+1+k)}{2^k \\Gamma (\\alpha+\\beta+n+1)} P_{n-k}^{(\\alpha+k, \\beta+k)} (z)",
        "\\left (1-x^2 \\right )y'' + ( \\beta-\\alpha - (\\alpha + \\beta + 2)x )y' + n(n+\\alpha+\\beta+1) y = 0",
        "\\begin{align}&2n (n + \\alpha + \\beta) (2n + \\alpha + \\beta - 2) P_n^{(\\alpha,\\beta)}(z) \\\\&\\qquad= (2n+\\alpha + \\beta-1) \\Big\\{ (2n+\\alpha + \\beta)(2n+\\alpha+\\beta-2) z +  \\alpha^2 - \\beta^2 \\Big\\} P_{n-1}^{(\\alpha,\\beta)}(z) - 2 (n+\\alpha - 1) (n + \\beta-1) (2n+\\alpha + \\beta) P_{n-2}^{(\\alpha, \\beta)}(z),\\end{align}",
        "\\begin{align}(z-1) \\frac{d}{dz} P_n^{(\\alpha,\\beta)}(z) &= \\frac{1}{2} (z-1)(1+\\alpha+\\beta+n)P_{n-1}^{(\\alpha+1,\\beta+1)} \\\\&= n P_n^{(\\alpha,\\beta)} - (\\alpha+n) P_{n-1}^{(\\alpha,\\beta+1)} \\\\&=(1+\\alpha+\\beta+n) \\left( P_n^{(\\alpha,\\beta+1)} - P_{n}^{(\\alpha,\\beta)} \\right) \\\\&=(\\alpha+n) P_n^{(\\alpha-1,\\beta+1)} - \\alpha P_n^{(\\alpha,\\beta)} \\\\&=\\frac{2(n+1) P_{n+1}^{(\\alpha,\\beta-1)} - \\left(z(1+\\alpha+\\beta+n)+\\alpha+1+n-\\beta \\right) P_n^{(\\alpha,\\beta)}}{1+z} \\\\&=\\frac{(2\\beta+n+nz) P_n^{(\\alpha,\\beta)} - 2(\\beta+n) P_n^{(\\alpha,\\beta-1)}}{1+z} \\\\&=\\frac{1-z}{1+z} \\left( \\beta P_n^{(\\alpha,\\beta)} - (\\beta+n) P_{n}^{(\\alpha+1,\\beta-1)} \\right) \\, .\\end{align}"
      ],
      "definiens" : [
        {
          "definition" : "nonnegative integer",
          "score" : 0.722
        },
        {
          "definition" : "quantity",
          "score" : 0.6601229053380933
        },
        {
          "definition" : "Jacobi polynomial",
          "score" : 0.6476241008701227
        },
        {
          "definition" : "special case",
          "score" : 0.5730317852477183
        },
        {
          "definition" : "orthogonality condition",
          "score" : 0.45267071030642325
        },
        {
          "definition" : "equivalent expression",
          "score" : 0.36449136763412854
        },
        {
          "definition" : "identity",
          "score" : 0.3524055268732403
        },
        {
          "definition" : "solution of the second order linear homogeneous differential equation",
          "score" : 0.34315870430225354
        },
        {
          "definition" : "recurrence relation for the Jacobi polynomial",
          "score" : 0.3430341139924638
        },
        {
          "definition" : "Pochhammer 's symbol",
          "score" : 0.3242088302147525
        },
        {
          "definition" : "derivative of the explicit expression",
          "score" : 0.31698488450476003
        },
        {
          "definition" : "Gauss ' contiguous relation",
          "score" : 0.27648020616604074
        },
        {
          "definition" : "case",
          "score" : 0.2507103566762897
        },
        {
          "definition" : "series for the hypergeometric function",
          "score" : 0.2507103566762897
        },
        {
          "definition" : "hypergeometric function",
          "score" : 0.23711771012437738
        }
      ]
    },
    {
      "id" : "FORMULA_f604a748edd68a6b7adf15118bb64595",
      "formula" : "P_n^{(\\alpha,\\beta)}(x)=(n+\\alpha)! (n+\\beta)! \\sum_{s=0}^n \\frac{1}{s! (n+\\alpha-s)!(\\beta+s)!(n-s)!} \\left(\\frac{x-1}{2}\\right)^{n-s} \\left(\\frac{x+1}{2}\\right)^{s}",
      "semanticFormula" : "\\JacobipolyP{\\alpha}{\\beta}{n}@{x} = (n + \\alpha)! (n + \\beta)! \\sum_{s=0}^n \\frac{1}{s! (n+\\alpha-s)!(\\beta+s)!(n-s)!} (\\frac{x-1}{2})^{n-s} (\\frac{x+1}{2})^{s}",
      "confidence" : 0.6859086196238077,
      "translations" : {
        "Mathematica" : {
          "translation" : "JacobiP[n, \\[Alpha], \\[Beta], x] == (n + \\[Alpha])!*(n + \\[Beta])!*Sum[Divide[1,(s)!*(n + \\[Alpha]- s)!*(\\[Beta]+ s)!*(n - s)!]*(Divide[x - 1,2])^(n - s)*(Divide[x + 1,2])^(s), {s, 0, n}, GenerateConditions->None]",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 50,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "Plus[Times[-1, Power[2, Times[-1, n]], Power[Plus[-1, x], n], Power[Gamma[Plus[1, n]], -1], Gamma[Plus[1, n, β]], Hypergeometric2F1Regularized[Times[-1, n], Plus[Times[-1, n], Times[-1, α]], Plus[1, β], Times[Power[Plus[-1, x], -1], Plus[1, x]]]], JacobiP[n, α, β, x]]",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "JacobiP(n, alpha, beta, x) = factorial(n + alpha)*factorial(n + beta)*sum((1)/(factorial(s)*factorial(n + alpha - s)*factorial(beta + s)*factorial(n - s))*((x - 1)/(2))^(n - s)*((x + 1)/(2))^(s), s = 0..n)",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 50,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "JacobiP(n,alpha,beta,x)-(n+beta)!/beta!/n!*(1/2*x-1/2)^n*hypergeom([-n, -n-alpha],[beta+1],1/(x-1)*(1+x))",
                "property" : "Simple"
              },
              {
                "result" : "(JacobiP(n,alpha,beta,x)*beta!*n!-exp(-n*(ln(2)-ln(x-1)))*hypergeom([-n, -n-alpha],[beta+1],1/(x-1)*(1+x))*(n+beta)!)/beta!/n!",
                "property" : "ConvEXP"
              },
              {
                "result" : "binomial(alpha+n,alpha)*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*x)-(n+beta)!/beta!/n!*(1/2*x-1/2)^n*hypergeom([-n, -n-alpha],[beta+1],1/(x-1)*(1+x))",
                "property" : "ConvHYP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,x)-(n+beta)!/beta!/n!*(1/2*x-1/2)^n*hypergeom([-n, -n-alpha],[beta+1],1/(x-1)*(1+x))",
                "property" : "EXP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,x)-(n+beta)!/beta!/n!*(1/2*x-1/2)^n*hypergeom([-n, -n-alpha],[beta+1],1/(x-1)*(1+x))",
                "property" : "EXP+EXP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,x)-(n+beta)!/beta!/n!*(1/2*x-1/2)^n*hypergeom([-n, -n-alpha],[beta+1],1/(x-1)*(1+x))",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 3,
          "sentence" : 2,
          "word" : 23
        }
      ],
      "includes" : [
        "x",
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "n",
        "s",
        "P_{n}^{(\\alpha, \\beta)}",
        "\\alpha,\\beta"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "Jacobi polynomial",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "special case",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "nonnegative integer",
          "score" : 0.6460746792928004
        },
        {
          "definition" : "quantity",
          "score" : 0.5988174995334326
        }
      ]
    },
    {
      "id" : "FORMULA_03c7c0ace395d80182db07ae2c30f034",
      "formula" : "s",
      "semanticFormula" : "s",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "s",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "numberOfFailedTests" : 6,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "-1.5",
                "testValues" : {
                  "s" : "Rational[-3, 2]"
                }
              },
              {
                "result" : "1.5",
                "testValues" : {
                  "s" : "Rational[3, 2]"
                }
              },
              {
                "result" : "-0.5",
                "testValues" : {
                  "s" : "Rational[-1, 2]"
                }
              },
              {
                "result" : "0.5",
                "testValues" : {
                  "s" : "Rational[1, 2]"
                }
              },
              {
                "result" : "-2.0",
                "testValues" : {
                  "s" : "-2"
                }
              },
              {
                "result" : "2.0",
                "testValues" : {
                  "s" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "s",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "s"
        },
        "Maple" : {
          "translation" : "s",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "numberOfFailedTests" : 6,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "-1.500000000",
                "testValues" : {
                  "s" : "-3/2"
                }
              },
              {
                "result" : "1.500000000",
                "testValues" : {
                  "s" : "3/2"
                }
              },
              {
                "result" : "-.5000000000",
                "testValues" : {
                  "s" : "-1/2"
                }
              },
              {
                "result" : ".5000000000",
                "testValues" : {
                  "s" : "1/2"
                }
              },
              {
                "result" : "-2.",
                "testValues" : {
                  "s" : "-2"
                }
              },
              {
                "result" : "2.",
                "testValues" : {
                  "s" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "s",
                "property" : "Simple"
              },
              {
                "result" : "s",
                "property" : "ConvEXP"
              },
              {
                "result" : "s",
                "property" : "ConvHYP"
              },
              {
                "result" : "s",
                "property" : "EXP"
              },
              {
                "result" : "s",
                "property" : "EXP+EXP"
              },
              {
                "result" : "s",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 3,
          "sentence" : 3,
          "word" : 8
        }
      ],
      "includes" : [ ],
      "isPartOf" : [
        "P_n^{(\\alpha,\\beta)}(x)= \\sum_{s=0}^n {n+\\alpha\\choose n-s}{n+\\beta \\choose s} \\left(\\frac{x-1}{2}\\right)^{s} \\left(\\frac{x+1}{2}\\right)^{n-s}",
        "P_n^{(\\alpha,\\beta)}(x)=(n+\\alpha)! (n+\\beta)! \\sum_{s=0}^n \\frac{1}{s! (n+\\alpha-s)!(\\beta+s)!(n-s)!} \\left(\\frac{x-1}{2}\\right)^{n-s} \\left(\\frac{x+1}{2}\\right)^{s}"
      ],
      "definiens" : [
        {
          "definition" : "Jacobi polynomial",
          "score" : 0.7778461045086086
        },
        {
          "definition" : "integer value",
          "score" : 0.6954080343007951
        },
        {
          "definition" : "argument of the factorial",
          "score" : 0.6687181434333315
        },
        {
          "definition" : "special case",
          "score" : 0.6432331635625809
        },
        {
          "definition" : "sum",
          "score" : 0.6288842031023242
        },
        {
          "definition" : "nonnegative integer",
          "score" : 0.6033992232315736
        },
        {
          "definition" : "quantity",
          "score" : 0.5561420434722057
        }
      ]
    },
    {
      "id" : "FORMULA_5a59d52ac2638a6e955a48d2dbf276db",
      "formula" : "P_0^{(\\alpha,\\beta)}(z)= 1",
      "semanticFormula" : "\\JacobipolyP{\\alpha}{\\beta}{0}@{z} = 1",
      "confidence" : 0.8135152636383296,
      "translations" : {
        "Mathematica" : {
          "translation" : "JacobiP[0, \\[Alpha], \\[Beta], z] == 1",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 50,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : true,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "0",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "JacobiP(0, alpha, beta, z) = 1",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 0,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : true,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "0",
                "property" : "Simple"
              },
              {
                "result" : "0",
                "property" : "ConvEXP"
              },
              {
                "result" : "0",
                "property" : "ConvHYP"
              },
              {
                "result" : "0",
                "property" : "EXP"
              },
              {
                "result" : "0",
                "property" : "EXP+EXP"
              },
              {
                "result" : "0",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 4,
          "sentence" : 0,
          "word" : 0
        }
      ],
      "includes" : [
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "P_{n}^{(\\alpha, \\beta)}",
        "\\alpha,\\beta",
        "z"
      ],
      "isPartOf" : [ ],
      "definiens" : [ ]
    },
    {
      "id" : "FORMULA_ca61fa237002fce94643d9197732d667",
      "formula" : "P_1^{(\\alpha,\\beta)}(z)= (\\alpha+1) + (\\alpha+\\beta+2)\\frac{z-1}{2}",
      "semanticFormula" : "\\JacobipolyP{\\alpha}{\\beta}{1}@{z} = (\\alpha + 1) + (\\alpha + \\beta + 2) \\frac{z-1}{2}",
      "confidence" : 0.8135152636383296,
      "translations" : {
        "Mathematica" : {
          "translation" : "JacobiP[1, \\[Alpha], \\[Beta], z] == (\\[Alpha]+ 1)+(\\[Alpha]+ \\[Beta]+ 2)*Divide[z - 1,2]",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 50,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : true,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "0",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "JacobiP(1, alpha, beta, z) = (alpha + 1)+(alpha + beta + 2)*(z - 1)/(2)",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 27,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 27,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : true,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "0",
                "property" : "Simple"
              },
              {
                "result" : "0",
                "property" : "ConvEXP"
              },
              {
                "result" : "0",
                "property" : "ConvHYP"
              },
              {
                "result" : "0",
                "property" : "EXP"
              },
              {
                "result" : "0",
                "property" : "EXP+EXP"
              },
              {
                "result" : "0",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 4,
          "sentence" : 0,
          "word" : 2
        }
      ],
      "includes" : [
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "P_{n}^{(\\alpha, \\beta)}",
        "\\alpha,\\beta",
        "z"
      ],
      "isPartOf" : [ ],
      "definiens" : [ ]
    },
    {
      "id" : "FORMULA_f95cd8e6d82bfb68b3b85bef1c1662b1",
      "formula" : "P_2^{(\\alpha,\\beta)}(z)= \\frac{(\\alpha+1)(\\alpha+2)}{2}+ (\\alpha+2)(\\alpha+\\beta+3)\\frac{z-1}{2}+ \\frac{(\\alpha+\\beta+3)(\\alpha+\\beta+4)}{2}\\left(\\frac{z-1}{2}\\right)^2,..",
      "semanticFormula" : "\\JacobipolyP{\\alpha}{\\beta}{2}@{z} = \\frac{(\\alpha+1)(\\alpha+2)}{2} + (\\alpha + 2) (\\alpha + \\beta + 3) \\frac{z-1}{2} + \\frac{(\\alpha+\\beta+3)(\\alpha+\\beta+4)}{2} (\\frac{z-1}{2})^2 ,",
      "confidence" : 0.8135152636383296,
      "translations" : {
        "Mathematica" : {
          "translation" : "JacobiP[2, \\[Alpha], \\[Beta], z] == Divide[(\\[Alpha]+ 1)*(\\[Alpha]+ 2),2]+(\\[Alpha]+ 2)*(\\[Alpha]+ \\[Beta]+ 3)*Divide[z - 1,2]+Divide[(\\[Alpha]+ \\[Beta]+ 3)*(\\[Alpha]+ \\[Beta]+ 4),2]*(Divide[z - 1,2])^(2)",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 50,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : true,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "0",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "JacobiP(2, alpha, beta, z) = ((alpha + 1)*(alpha + 2))/(2)+(alpha + 2)*(alpha + beta + 3)*(z - 1)/(2)+((alpha + beta + 3)*(alpha + beta + 4))/(2)*((z - 1)/(2))^(2)",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 27,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 27,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : true,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "0",
                "property" : "Simple"
              },
              {
                "result" : "0",
                "property" : "ConvEXP"
              },
              {
                "result" : "-1/8*(alpha^2+3*alpha-2*binomial(2+alpha,alpha)+2)*((z+1)^2*alpha^2+((2*beta+7)*z^2+6*z-2*beta-1)*alpha+(beta^2+7*beta+12)*z^2+(-2*beta^2-6*beta)*z+beta^2-beta-4)/(2+alpha)/(alpha+1)",
                "property" : "ConvHYP"
              },
              {
                "result" : "0",
                "property" : "EXP"
              },
              {
                "result" : "0",
                "property" : "EXP+EXP"
              },
              {
                "result" : "0",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 4,
          "sentence" : 0,
          "word" : 4
        }
      ],
      "includes" : [
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "P_{n}^{(\\alpha, \\beta)}",
        "\\alpha,\\beta",
        "z"
      ],
      "isPartOf" : [ ],
      "definiens" : [ ]
    },
    {
      "id" : "FORMULA_77d1d3b415496da5bb77004fd55dff4c",
      "formula" : "\\int_{-1}^1 (1-x)^{\\alpha} (1+x)^{\\beta} P_m^{(\\alpha,\\beta)} (x)P_n^{(\\alpha,\\beta)} (x)\\,dx =\\frac{2^{\\alpha+\\beta+1}}{2n+\\alpha+\\beta+1} \\frac{\\Gamma(n+\\alpha+1)\\Gamma(n+\\beta+1)}{\\Gamma(n+\\alpha+\\beta+1)n!} \\delta_{nm}, \\qquad \\alpha,\\ \\beta > -1",
      "semanticFormula" : "\\int_{-1}^1 (1 - x)^{\\alpha} (1 + x)^{\\beta} \\JacobipolyP{\\alpha}{\\beta}{m}@{x} \\JacobipolyP{\\alpha}{\\beta}{n}@{x} \\diff{x} = \\frac{2^{\\alpha+\\beta+1}}{2n+\\alpha+\\beta+1} \\frac{\\EulerGamma@{n + \\alpha + 1} \\EulerGamma@{n + \\beta + 1}}{\\EulerGamma@{n + \\alpha + \\beta + 1} n!} \\delta_{nm} , \\qquad \\alpha , \\beta > - 1",
      "confidence" : 0.6138940871700758,
      "translations" : {
        "Mathematica" : {
          "translation" : "Integrate[(1 - x)^\\[Alpha]*(1 + x)^\\[Beta]* JacobiP[m, \\[Alpha], \\[Beta], x]*JacobiP[n, \\[Alpha], \\[Beta], x], {x, - 1, 1}, GenerateConditions->None] == Divide[(2)^(\\[Alpha]+ \\[Beta]+ 1),2*n + \\[Alpha]+ \\[Beta]+ 1]*Divide[Gamma[n + \\[Alpha]+ 1]*Gamma[n + \\[Beta]+ 1],Gamma[n + \\[Alpha]+ \\[Beta]+ 1]*(n)!]*Subscript[\\[Delta], n*m]",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 100,
            "numberOfFailedTests" : 3,
            "numberOfSuccessfulTests" : 97,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 2,
            "testCalculations" : [
              {
                "result" : "$Failed",
                "property" : "Simple"
              },
              {
                "result" : "Times[Power[2, Plus[1, α, β]], α, Power[Plus[1, Times[2, n], α, β], -1], Power[Factorial[n], -1], Gamma[Plus[1, n, α]], Gamma[Plus[1, n, β]], Power[Gamma[Plus[1, n, α, β]], -1], Subscript[δ, Times[m, n]]]",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "int((1 - x)^(alpha)*(1 + x)^(beta)* JacobiP(m, alpha, beta, x)*JacobiP(n, alpha, beta, x), x = - 1..1) = ((2)^(alpha + beta + 1))/(2*n + alpha + beta + 1)*(GAMMA(n + alpha + 1)*GAMMA(n + beta + 1))/(GAMMA(n + alpha + beta + 1)*factorial(n))*delta[n*m]"
        }
      },
      "positions" : [
        {
          "section" : 5,
          "sentence" : 0,
          "word" : 7
        }
      ],
      "includes" : [
        "x",
        "n + \\alpha + \\beta",
        "(1 - x)^{\\alpha}(1 + x)^{\\beta}",
        "\\Gamma(z)",
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "n",
        "P_{n}^{(\\alpha, \\beta)}",
        "\\alpha,\\beta"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "orthogonality condition",
          "score" : 0.722
        },
        {
          "definition" : "Jacobi polynomial",
          "score" : 0.6859086196238077
        }
      ]
    },
    {
      "id" : "FORMULA_7805eba586f1593f610d48d02c5d5ecb",
      "formula" : "n=m",
      "semanticFormula" : "n=m",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "n == m",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 9,
            "numberOfFailedTests" : 6,
            "numberOfSuccessfulTests" : 3,
            "testCalculations" : [
              {
                "result" : "1.0",
                "testValues" : {
                  "m" : "1",
                  "n" : "2"
                }
              },
              {
                "result" : "2.0",
                "testValues" : {
                  "m" : "1",
                  "n" : "3"
                }
              },
              {
                "result" : "-1.0",
                "testValues" : {
                  "m" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "1.0",
                "testValues" : {
                  "m" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "-2.0",
                "testValues" : {
                  "m" : "3",
                  "n" : "1"
                }
              },
              {
                "result" : "-1.0",
                "testValues" : {
                  "m" : "3",
                  "n" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "Plus[Times[-1, m], n]",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "n == m"
        },
        "Maple" : {
          "translation" : "n = m",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 9,
            "numberOfFailedTests" : 6,
            "numberOfSuccessfulTests" : 3,
            "testCalculations" : [
              {
                "result" : "1.",
                "testValues" : {
                  "m" : "1",
                  "n" : "2"
                }
              },
              {
                "result" : "2.",
                "testValues" : {
                  "m" : "1",
                  "n" : "3"
                }
              },
              {
                "result" : "-1.",
                "testValues" : {
                  "m" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "1.",
                "testValues" : {
                  "m" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "-2.",
                "testValues" : {
                  "m" : "3",
                  "n" : "1"
                }
              },
              {
                "result" : "-1.",
                "testValues" : {
                  "m" : "3",
                  "n" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "n-m",
                "property" : "Simple"
              },
              {
                "result" : "n-m",
                "property" : "ConvEXP"
              },
              {
                "result" : "n-m",
                "property" : "ConvHYP"
              },
              {
                "result" : "n-m",
                "property" : "EXP"
              },
              {
                "result" : "n-m",
                "property" : "EXP+EXP"
              },
              {
                "result" : "n-m",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 5,
          "sentence" : 2,
          "word" : 21
        }
      ],
      "includes" : [
        "n"
      ],
      "isPartOf" : [
        "n= 2, 3, ...",
        "\\sum_{n=0}^\\infty P_n^{(\\alpha,\\beta)}(z) t^n = 2^{\\alpha + \\beta} R^{-1} (1 - t + R)^{-\\alpha} (1 + t + R)^{-\\beta}"
      ],
      "definiens" : [
        {
          "definition" : "square root of the right hand side",
          "score" : 0.6460746792928004
        },
        {
          "definition" : "equation",
          "score" : 0.5500952380952381
        },
        {
          "definition" : "recurrence relation for the Jacobi polynomial",
          "score" : 0.3635871910523791
        },
        {
          "definition" : "function of the Jacobi polynomial",
          "score" : 0.3427705987904743
        },
        {
          "definition" : "branch of square root",
          "score" : 0.2556794787000992
        }
      ]
    },
    {
      "id" : "FORMULA_885c4cc0c4b31f8e336b9b90a9f5a73a",
      "formula" : "P_n^{(\\alpha, \\beta)} (1) = {n+\\alpha\\choose n}",
      "semanticFormula" : "\\JacobipolyP{\\alpha}{\\beta}{n}@{1} ={n+\\alpha\\choose n}",
      "confidence" : 0.8135152636383296,
      "translations" : {
        "Mathematica" : {
          "translation" : "JacobiP[n, \\[Alpha], \\[Beta], 1] == Binomial[n + \\[Alpha],n]",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 27,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 27,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : true,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "0",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "JacobiP(n, alpha, beta, 1) = binomial(n + alpha,n)",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 27,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 27,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "JacobiP(n,alpha,beta,1)-binomial(alpha+n,n)",
                "property" : "Simple"
              },
              {
                "result" : "JacobiP(n,alpha,beta,1)-binomial(alpha+n,n)",
                "property" : "ConvEXP"
              },
              {
                "result" : "binomial(alpha+n,alpha)-binomial(alpha+n,n)",
                "property" : "ConvHYP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,1)-binomial(alpha+n,n)",
                "property" : "EXP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,1)-binomial(alpha+n,n)",
                "property" : "EXP+EXP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,1)-binomial(alpha+n,n)",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 5,
          "sentence" : 3,
          "word" : 20
        }
      ],
      "includes" : [
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "n",
        "P_{n}^{(\\alpha, \\beta)}",
        "\\alpha,\\beta"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "simplicity",
          "score" : 0.7125985104912714
        },
        {
          "definition" : "alternative normalization",
          "score" : 0.6460746792928004
        },
        {
          "definition" : "orthonormal basis",
          "score" : 0.5988174995334326
        }
      ]
    },
    {
      "id" : "FORMULA_324997ff1bef2ad1ea296179286ee476",
      "formula" : "P_n^{(\\alpha, \\beta)} (-z) = (-1)^n P_n^{(\\beta, \\alpha)} (z)",
      "semanticFormula" : "\\JacobipolyP{\\alpha}{\\beta}{n}@{- z} = (- 1)^n \\JacobipolyP{\\beta}{\\alpha}{n}@{z}",
      "confidence" : 0.6859086196238077,
      "translations" : {
        "Mathematica" : {
          "translation" : "JacobiP[n, \\[Alpha], \\[Beta], - z] == (- 1)^(n)* JacobiP[n, \\[Beta], \\[Alpha], z]",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 50,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "Plus[JacobiP[n, α, β, Times[-1, z]], Times[Power[-1, Plus[1, n]], JacobiP[n, β, α, z]]]",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "JacobiP(n, alpha, beta, - z) = (- 1)^(n)* JacobiP(n, beta, alpha, z)",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 50,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "JacobiP(n,alpha,beta,-z)-(-1)^n*JacobiP(n,beta,alpha,z)",
                "property" : "Simple"
              },
              {
                "result" : "JacobiP(n,alpha,beta,-z)-exp(I*Pi*n)*JacobiP(n,beta,alpha,z)",
                "property" : "ConvEXP"
              },
              {
                "result" : "binomial(alpha+n,alpha)*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2+1/2*z)-(-1)^n*binomial(n+beta,beta)*hypergeom([-n, alpha+beta+n+1],[beta+1],1/2-1/2*z)",
                "property" : "ConvHYP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,-z)-(-1)^n*JacobiP(n,beta,alpha,z)",
                "property" : "EXP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,-z)-(-1)^n*JacobiP(n,beta,alpha,z)",
                "property" : "EXP+EXP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,-z)-(-1)^n*JacobiP(n,beta,alpha,z)",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 6,
          "sentence" : 0,
          "word" : 6
        }
      ],
      "includes" : [
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "n",
        "P_{n}^{(\\alpha, \\beta)}",
        "\\alpha,\\beta",
        "z"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "symmetry relation",
          "score" : 0.722
        },
        {
          "definition" : "polynomial",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "other terminal value",
          "score" : 0.6460746792928004
        }
      ]
    },
    {
      "id" : "FORMULA_94395b8a0992e45434577f269a17e6c4",
      "formula" : "P_n^{(\\alpha, \\beta)} (-1) = (-1)^n { n+\\beta\\choose n}",
      "semanticFormula" : "\\JacobipolyP{\\alpha}{\\beta}{n}@{- 1} = (- 1)^n{n+\\beta\\choose n}",
      "confidence" : 0.6859086196238077,
      "translations" : {
        "Mathematica" : {
          "translation" : "JacobiP[n, \\[Alpha], \\[Beta], - 1] == (- 1)^(n)*Binomial[n + \\[Beta],n]",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 27,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 27,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "Plus[Times[Power[-1, Plus[1, n]], Binomial[Plus[n, β], n]], JacobiP[n, α, β, -1]]",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "JacobiP(n, alpha, beta, - 1) = (- 1)^(n)*binomial(n + beta,n)",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 27,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 27,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "JacobiP(n,alpha,beta,-1)-(-1)^n*binomial(n+beta,n)",
                "property" : "Simple"
              },
              {
                "result" : "JacobiP(n,alpha,beta,-1)-exp(I*Pi*n)*binomial(n+beta,n)",
                "property" : "ConvEXP"
              },
              {
                "result" : "binomial(alpha+n,alpha)*hypergeom([-n, alpha+beta+n+1],[alpha+1],1)-(-1)^n*binomial(n+beta,n)",
                "property" : "ConvHYP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,-1)-(-1)^n*binomial(n+beta,n)",
                "property" : "EXP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,-1)-(-1)^n*binomial(n+beta,n)",
                "property" : "EXP+EXP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,-1)-(-1)^n*binomial(n+beta,n)",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 6,
          "sentence" : 0,
          "word" : 14
        }
      ],
      "includes" : [
        "n",
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "P_{n}^{(\\alpha, \\beta)}",
        "\\alpha,\\beta"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "other terminal value",
          "score" : 0.7125985104912714
        },
        {
          "definition" : "polynomial",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "symmetry relation",
          "score" : 0.6859086196238077
        }
      ]
    },
    {
      "id" : "FORMULA_8ce4b16b22b58894aa86c421e8759df3",
      "formula" : "k",
      "semanticFormula" : "k",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "k",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 3,
            "numberOfFailedTests" : 3,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "1.0",
                "testValues" : {
                  "k" : "1"
                }
              },
              {
                "result" : "2.0",
                "testValues" : {
                  "k" : "2"
                }
              },
              {
                "result" : "3.0",
                "testValues" : {
                  "k" : "3"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "k",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "k"
        },
        "Maple" : {
          "translation" : "k",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 3,
            "numberOfFailedTests" : 3,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "1.",
                "testValues" : {
                  "k" : "1"
                }
              },
              {
                "result" : "2.",
                "testValues" : {
                  "k" : "2"
                }
              },
              {
                "result" : "3.",
                "testValues" : {
                  "k" : "3"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "k",
                "property" : "Simple"
              },
              {
                "result" : "k",
                "property" : "ConvEXP"
              },
              {
                "result" : "k",
                "property" : "ConvHYP"
              },
              {
                "result" : "k",
                "property" : "EXP"
              },
              {
                "result" : "k",
                "property" : "EXP+EXP"
              },
              {
                "result" : "k",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 7,
          "sentence" : 0,
          "word" : 1
        }
      ],
      "includes" : [ ],
      "isPartOf" : [
        "\\frac{d^k}{dz^k} P_n^{(\\alpha,\\beta)} (z) = \\frac{\\Gamma (\\alpha+\\beta+n+1+k)}{2^k \\Gamma (\\alpha+\\beta+n+1)} P_{n-k}^{(\\alpha+k, \\beta+k)} (z)",
        "P_n^{(\\alpha,\\beta)}(\\cos \\theta) = n^{-\\frac{1}{2}}k(\\theta)\\cos (N\\theta + \\gamma) + O \\left (n^{-\\frac{3}{2}} \\right )",
        "\\begin{align}k(\\theta) &= \\pi^{-\\frac{1}{2}} \\sin^{-\\alpha-\\frac{1}{2}} \\tfrac{\\theta}{2} \\cos^{-\\beta-\\frac{1}{2}} \\tfrac{\\theta}{2},\\\\N &= n + \\tfrac{1}{2} (\\alpha+\\beta+1),\\\\\\gamma &= - \\tfrac{\\pi}{2} \\left (\\alpha + \\tfrac{1}{2} \\right ),\\end{align}"
      ],
      "definiens" : [
        {
          "definition" : "derivative of the explicit expression",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "Darboux formula",
          "score" : 0.38608592487665916
        },
        {
          "definition" : "term",
          "score" : 0.3766844353679306
        },
        {
          "definition" : "asymptotic",
          "score" : 0.34999454450046674
        },
        {
          "definition" : "interval",
          "score" : 0.34999454450046674
        },
        {
          "definition" : "interior",
          "score" : 0.3101606041694595
        }
      ]
    },
    {
      "id" : "FORMULA_c1a5b2b20d5efff4922f26591d73e078",
      "formula" : "\\frac{d^k}{dz^k} P_n^{(\\alpha,\\beta)} (z) = \\frac{\\Gamma (\\alpha+\\beta+n+1+k)}{2^k \\Gamma (\\alpha+\\beta+n+1)} P_{n-k}^{(\\alpha+k, \\beta+k)} (z)",
      "semanticFormula" : "\\deriv [k]{ }{z} \\JacobipolyP{\\alpha}{\\beta}{n}@{z} = \\frac{\\EulerGamma@{\\alpha + \\beta + n + 1 + k}}{2^k \\EulerGamma@{\\alpha + \\beta + n + 1}} \\JacobipolyP{\\alpha + k}{\\beta + k}{n-k}@{z}",
      "confidence" : 0.6776974091773368,
      "translations" : {
        "Mathematica" : {
          "translation" : "D[JacobiP[n, \\[Alpha], \\[Beta], z], {z, k}] == Divide[Gamma[\\[Alpha]+ \\[Beta]+ n + 1 + k],(2)^(k)* Gamma[\\[Alpha]+ \\[Beta]+ n + 1]]*JacobiP[n - k, \\[Alpha]+ k, \\[Beta]+ k, z]",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 50,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : true,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "0",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "diff(JacobiP(n, alpha, beta, z), [z$(k)]) = (GAMMA(alpha + beta + n + 1 + k))/((2)^(k)* GAMMA(alpha + beta + n + 1))*JacobiP(n - k, alpha + k, beta + k, z)",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 50,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : true,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "0",
                "property" : "Simple"
              },
              {
                "result" : "0",
                "property" : "ConvEXP"
              },
              {
                "result" : "0",
                "property" : "ConvHYP"
              },
              {
                "result" : "0",
                "property" : "EXP"
              },
              {
                "result" : "0",
                "property" : "EXP+EXP"
              },
              {
                "result" : "0",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 7,
          "sentence" : 0,
          "word" : 10
        }
      ],
      "includes" : [
        "n + \\alpha + \\beta",
        "\\Gamma(z)",
        "n",
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "k",
        "P_{n}^{(\\alpha, \\beta)}",
        "\\alpha,\\beta",
        "z"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "derivative of the explicit expression",
          "score" : 0.6859086196238077
        }
      ]
    },
    {
      "id" : "FORMULA_d070202e484c3f87021e1210f0cfe802",
      "formula" : "P_{n}^{(\\alpha, \\beta)}",
      "semanticFormula" : "\\JacobipolyP{\\alpha}{\\beta}{n}@{x}",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "JacobiP[n, \\[Alpha], \\[Beta], x]",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 49,
            "numberOfSuccessfulTests" : 1,
            "testCalculations" : [
              {
                "result" : "3.75",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "10.9375",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "29.53125",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "3.5",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "9.6875",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "25.15625",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "3.875",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "11.5859375",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "31.8701171875",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "2.5",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "5.9375",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "14.21875",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "2.25",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "5.0",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "11.484375",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "2.625",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "6.4296875",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "15.7080078125",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "4.375",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "14.0234375",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "40.2880859375",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "4.125",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "12.6171875",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "34.9462890625",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "4.5",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "14.75",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "43.125",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "1.25",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "0.4375",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "-0.65625",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "1.5",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "0.9375",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "-0.21875",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "1.125",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "0.2109375",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[1, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "-0.8154296875",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "0.5",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "-0.3125",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "-0.65625",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "0.75",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "-0.546875",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "0.375",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "-0.4453125",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[1, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "-0.6689453125",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "1.625",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "1.0234375",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "2"
                }
              },
              {
                "result" : "-0.3662109375",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "3"
                }
              },
              {
                "result" : "1.875",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "1"
                }
              },
              {
                "result" : "1.6171875",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[1, 2]",
                  "n" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "JacobiP[n, α, β, x]",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "JacobiP(n, alpha, beta, x)",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 49,
            "numberOfSuccessfulTests" : 1,
            "testCalculations" : [
              {
                "result" : "3.750000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "10.93750000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "29.53125000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "1.250000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : ".4375000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-.6562500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "5.000000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "20.12500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "76.12500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.500000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "9.687499999",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "25.15625000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "1.500000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : ".9375000001",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-.2187500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "4.500000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "16.87500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "60.81250000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.875000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "11.58593750",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "31.87011719",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "1.125000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : ".2109375000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "-.8154296876",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "5.250000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "21.84375000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "84.57031249",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "2.500000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "5.937500001",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "14.21875000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : ".5000000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "1/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-.3125000001",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-.6562500000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.500000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "11.87500000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "40.68750000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "2.250000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "5.000000001",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "11.48437500",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : ".7500000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "1/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-.5468750000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "1/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.000000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "9.375000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "30.62500000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "2.625000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "6.429687501",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "15.70800781",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "3/2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : ".3750000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "1/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "-.4453125000",
                "testValues" : {
                  "alpha" : "1/2",
                  "x" : "1/2",
                  "beta" : "2",
                  "n" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "JacobiP(n,alpha,beta,x)",
                "property" : "Simple"
              },
              {
                "result" : "JacobiP(n,alpha,beta,x)",
                "property" : "ConvEXP"
              },
              {
                "result" : "binomial(alpha+n,alpha)*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*x)",
                "property" : "ConvHYP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,x)",
                "property" : "EXP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,x)",
                "property" : "EXP+EXP"
              },
              {
                "result" : "JacobiP(n,alpha,beta,x)",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 8,
          "sentence" : 0,
          "word" : 3
        },
        {
          "section" : 11,
          "sentence" : 0,
          "word" : 11
        }
      ],
      "includes" : [
        "n",
        "\\alpha,\\beta"
      ],
      "isPartOf" : [
        "\\frac{d^k}{dz^k} P_n^{(\\alpha,\\beta)} (z) = \\frac{\\Gamma (\\alpha+\\beta+n+1+k)}{2^k \\Gamma (\\alpha+\\beta+n+1)} P_{n-k}^{(\\alpha+k, \\beta+k)} (z)",
        "P_0^{(\\alpha,\\beta)}(z)= 1",
        "\\int_{-1}^1 (1-x)^{\\alpha} (1+x)^{\\beta} P_m^{(\\alpha,\\beta)} (x)P_n^{(\\alpha,\\beta)} (x)\\,dx =\\frac{2^{\\alpha+\\beta+1}}{2n+\\alpha+\\beta+1} \\frac{\\Gamma(n+\\alpha+1)\\Gamma(n+\\beta+1)}{\\Gamma(n+\\alpha+\\beta+1)n!} \\delta_{nm}, \\qquad \\alpha,\\ \\beta > -1",
        "P_n^{(\\alpha,\\beta)}(z) = \\frac{(-1)^n}{2^n n!} (1-z)^{-\\alpha} (1+z)^{-\\beta} \\frac{d^n}{dz^n} \\left\\{ (1-z)^\\alpha (1+z)^\\beta \\left (1 - z^2 \\right )^n \\right\\}",
        "P_1^{(\\alpha,\\beta)}(z)= (\\alpha+1) + (\\alpha+\\beta+2)\\frac{z-1}{2}",
        "P_n^{(\\alpha,\\beta)}(z)=\\frac{(\\alpha+1)_n}{n!}\\,{}_2F_1\\left(-n,1+\\alpha+\\beta+n;\\alpha+1;\\tfrac{1}{2}(1-z)\\right)",
        "P_n^{(\\alpha,\\beta)}(x)= \\sum_{s=0}^n {n+\\alpha\\choose n-s}{n+\\beta \\choose s} \\left(\\frac{x-1}{2}\\right)^{s} \\left(\\frac{x+1}{2}\\right)^{n-s}",
        "P_n^{(\\alpha,\\beta)}(x)=(n+\\alpha)! (n+\\beta)! \\sum_{s=0}^n \\frac{1}{s! (n+\\alpha-s)!(\\beta+s)!(n-s)!} \\left(\\frac{x-1}{2}\\right)^{n-s} \\left(\\frac{x+1}{2}\\right)^{s}",
        "P_n^{(\\alpha,\\beta)} (z) = \\frac{\\Gamma (\\alpha+n+1)}{n!\\,\\Gamma (\\alpha+\\beta+n+1)} \\sum_{m=0}^n {n\\choose m} \\frac{\\Gamma (\\alpha + \\beta + n + m + 1)}{\\Gamma (\\alpha + m + 1)} \\left(\\frac{z-1}{2}\\right)^m",
        "P_2^{(\\alpha,\\beta)}(z)= \\frac{(\\alpha+1)(\\alpha+2)}{2}+ (\\alpha+2)(\\alpha+\\beta+3)\\frac{z-1}{2}+ \\frac{(\\alpha+\\beta+3)(\\alpha+\\beta+4)}{2}\\left(\\frac{z-1}{2}\\right)^2,..",
        "P_n^{(\\alpha, \\beta)} (1) = {n+\\alpha\\choose n}",
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "P_n^{(\\alpha, \\beta)} (-1) = (-1)^n { n+\\beta\\choose n}",
        "P_n^{(\\alpha, \\beta)} (-z) = (-1)^n P_n^{(\\beta, \\alpha)} (z)",
        "\\begin{align}&2n (n + \\alpha + \\beta) (2n + \\alpha + \\beta - 2) P_n^{(\\alpha,\\beta)}(z) \\\\&\\qquad= (2n+\\alpha + \\beta-1) \\Big\\{ (2n+\\alpha + \\beta)(2n+\\alpha+\\beta-2) z +  \\alpha^2 - \\beta^2 \\Big\\} P_{n-1}^{(\\alpha,\\beta)}(z) - 2 (n+\\alpha - 1) (n + \\beta-1) (2n+\\alpha + \\beta) P_{n-2}^{(\\alpha, \\beta)}(z),\\end{align}",
        "\\begin{align}(z-1) \\frac{d}{dz} P_n^{(\\alpha,\\beta)}(z) &= \\frac{1}{2} (z-1)(1+\\alpha+\\beta+n)P_{n-1}^{(\\alpha+1,\\beta+1)} \\\\&= n P_n^{(\\alpha,\\beta)} - (\\alpha+n) P_{n-1}^{(\\alpha,\\beta+1)} \\\\&=(1+\\alpha+\\beta+n) \\left( P_n^{(\\alpha,\\beta+1)} - P_{n}^{(\\alpha,\\beta)} \\right) \\\\&=(\\alpha+n) P_n^{(\\alpha-1,\\beta+1)} - \\alpha P_n^{(\\alpha,\\beta)} \\\\&=\\frac{2(n+1) P_{n+1}^{(\\alpha,\\beta-1)} - \\left(z(1+\\alpha+\\beta+n)+\\alpha+1+n-\\beta \\right) P_n^{(\\alpha,\\beta)}}{1+z} \\\\&=\\frac{(2\\beta+n+nz) P_n^{(\\alpha,\\beta)} - 2(\\beta+n) P_n^{(\\alpha,\\beta-1)}}{1+z} \\\\&=\\frac{1-z}{1+z} \\left( \\beta P_n^{(\\alpha,\\beta)} - (\\beta+n) P_{n}^{(\\alpha+1,\\beta-1)} \\right) \\, .\\end{align}",
        "\\sum_{n=0}^\\infty P_n^{(\\alpha,\\beta)}(z) t^n = 2^{\\alpha + \\beta} R^{-1} (1 - t + R)^{-\\alpha} (1 + t + R)^{-\\beta}",
        "P_n^{(\\alpha,\\beta)}(\\cos \\theta) = n^{-\\frac{1}{2}}k(\\theta)\\cos (N\\theta + \\gamma) + O \\left (n^{-\\frac{3}{2}} \\right )",
        "\\begin{align}\\lim_{n \\to \\infty} n^{-\\alpha}P_n^{(\\alpha,\\beta)}\\left(\\cos \\left ( \\tfrac{z}{n} \\right ) \\right) &= \\left(\\tfrac{z}{2}\\right)^{-\\alpha} J_\\alpha(z)\\\\ \\lim_{n \\to \\infty} n^{-\\beta}P_n^{(\\alpha,\\beta)}\\left(\\cos \\left (\\pi - \\tfrac{z}{n} \\right) \\right) &= \\left(\\tfrac{z}{2}\\right)^{-\\beta} J_\\beta(z)\\end{align}",
        "d^j_{m'm}(\\phi) =\\left[ \\frac{(j+m)!(j-m)!}{(j+m')!(j-m')!}\\right]^{\\frac{1}{2}} \\left(\\sin\\tfrac{\\phi}{2}\\right)^{m-m'} \\left(\\cos\\tfrac{\\phi}{2}\\right)^{m+m'} P_{j-m}^{(m-m',m+m')}(\\cos \\phi)"
      ],
      "definiens" : [
        {
          "definition" : "Jacobi polynomial",
          "score" : 0.8534190724334316
        },
        {
          "definition" : "solution of the second order linear homogeneous differential equation",
          "score" : 0.722
        },
        {
          "definition" : "recurrence relation for the Jacobi polynomial",
          "score" : 0.5927925509888069
        },
        {
          "definition" : "derivative of the explicit expression",
          "score" : 0.566102660121343
        },
        {
          "definition" : "symmetry relation",
          "score" : 0.5214444444444444
        },
        {
          "definition" : "other terminal value",
          "score" : 0.5120429549357158
        },
        {
          "definition" : "polynomial",
          "score" : 0.485353064068252
        },
        {
          "definition" : "identity",
          "score" : 0.4498056309413439
        },
        {
          "definition" : "simplicity",
          "score" : 0.44040414143261547
        },
        {
          "definition" : "alternative normalization",
          "score" : 0.3738803102341444
        },
        {
          "definition" : "Gauss ' contiguous relation",
          "score" : 0.3738803102341444
        },
        {
          "definition" : "Darboux formula",
          "score" : 0.37102777777777773
        },
        {
          "definition" : "function of the Jacobi polynomial",
          "score" : 0.3635812763643209
        },
        {
          "definition" : "asymptotic",
          "score" : 0.3616262882690492
        },
        {
          "definition" : "Heine formula",
          "score" : 0.3574351312258654
        },
        {
          "definition" : "orthogonality condition",
          "score" : 0.3574351312258654
        },
        {
          "definition" : "expression of the Wigner d-matrix",
          "score" : 0.3408096960071445
        },
        {
          "definition" : "equivalent expression",
          "score" : 0.3401382032772763
        },
        {
          "definition" : "class of classical orthogonal polynomial",
          "score" : 0.34013819303096837
        },
        {
          "definition" : "orthonormal basis",
          "score" : 0.32662313047477654
        },
        {
          "definition" : "asymptotic of the Jacobi polynomial",
          "score" : 0.32134375084967315
        },
        {
          "definition" : "limit",
          "score" : 0.32134375084967315
        },
        {
          "definition" : "Mehler",
          "score" : 0.32134375084967315
        },
        {
          "definition" : "special case",
          "score" : 0.3136037340697103
        },
        {
          "definition" : "Rodrigues ' formula",
          "score" : 0.31344839778454997
        },
        {
          "definition" : "Pochhammer 's symbol",
          "score" : 0.313448303104701
        },
        {
          "definition" : "mathematics",
          "score" : 0.31344830216350456
        },
        {
          "definition" : "interior",
          "score" : 0.29510245707057825
        },
        {
          "definition" : "interval",
          "score" : 0.29510245707057825
        },
        {
          "definition" : "domain",
          "score" : 0.28150981051866586
        },
        {
          "definition" : "branch of square root",
          "score" : 0.27649015627394585
        },
        {
          "definition" : "nonnegative integer",
          "score" : 0.2737697937387031
        },
        {
          "definition" : "equivalent definition",
          "score" : 0.2736144574535428
        },
        {
          "definition" : "term",
          "score" : 0.2478452773112104
        },
        {
          "definition" : "point",
          "score" : 0.23425263075929803
        },
        {
          "definition" : "expression",
          "score" : 0.2270286850493056
        },
        {
          "definition" : "term of Jacobi polynomial",
          "score" : 0.2270286850493056
        },
        {
          "definition" : "quantity",
          "score" : 0.22651261397933525
        },
        {
          "definition" : "case",
          "score" : 0.2263571923194374
        },
        {
          "definition" : "series for the hypergeometric function",
          "score" : 0.2263571923194374
        },
        {
          "definition" : "hypergeometric function",
          "score" : 0.22635718301432597
        },
        {
          "definition" : "hypergeometric polynomial",
          "score" : 0.2263571820731295
        }
      ]
    },
    {
      "id" : "FORMULA_643faf34fb9ce455fa62652afb937fb3",
      "formula" : "\\left (1-x^2 \\right )y'' + ( \\beta-\\alpha - (\\alpha + \\beta + 2)x )y' + n(n+\\alpha+\\beta+1) y = 0",
      "semanticFormula" : "(1 - x^2) y ' ' + (\\beta - \\alpha - (\\alpha + \\beta + 2) x) y ' + n (n + \\alpha + \\beta + 1) y = 0",
      "confidence" : 0.0,
      "translations" : { },
      "positions" : [
        {
          "section" : 8,
          "sentence" : 0,
          "word" : 15
        }
      ],
      "includes" : [
        "n + \\alpha + \\beta",
        "n",
        "x"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "solution of the second order linear homogeneous differential equation",
          "score" : 0.722
        },
        {
          "definition" : "Jacobi polynomial",
          "score" : 0.6859086196238077
        }
      ]
    },
    {
      "id" : "FORMULA_238526af1095d1d92c03cb5704755132",
      "formula" : "\\alpha,\\beta",
      "semanticFormula" : "\\alpha,\\beta",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "\\[Alpha], \\[Beta]",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 9,
            "numberOfFailedTests" : 3,
            "numberOfSuccessfulTests" : 6,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "α",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "Symbol('alpha'), Symbol('beta')"
        },
        "Maple" : {
          "translation" : "alpha , beta",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 9,
            "numberOfFailedTests" : 9,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "beta" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "1/2",
                  "beta" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(nTest) < .1e-2\"",
                "testValues" : {
                  "alpha" : "2",
                  "beta" : "2"
                }
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 9,
          "sentence" : 0,
          "word" : 9
        }
      ],
      "includes" : [ ],
      "isPartOf" : [
        "\\frac{d^k}{dz^k} P_n^{(\\alpha,\\beta)} (z) = \\frac{\\Gamma (\\alpha+\\beta+n+1+k)}{2^k \\Gamma (\\alpha+\\beta+n+1)} P_{n-k}^{(\\alpha+k, \\beta+k)} (z)",
        "P_0^{(\\alpha,\\beta)}(z)= 1",
        "\\int_{-1}^1 (1-x)^{\\alpha} (1+x)^{\\beta} P_m^{(\\alpha,\\beta)} (x)P_n^{(\\alpha,\\beta)} (x)\\,dx =\\frac{2^{\\alpha+\\beta+1}}{2n+\\alpha+\\beta+1} \\frac{\\Gamma(n+\\alpha+1)\\Gamma(n+\\beta+1)}{\\Gamma(n+\\alpha+\\beta+1)n!} \\delta_{nm}, \\qquad \\alpha,\\ \\beta > -1",
        "P_n^{(\\alpha,\\beta)}(z) = \\frac{(-1)^n}{2^n n!} (1-z)^{-\\alpha} (1+z)^{-\\beta} \\frac{d^n}{dz^n} \\left\\{ (1-z)^\\alpha (1+z)^\\beta \\left (1 - z^2 \\right )^n \\right\\}",
        "n, n + \\alpha, n + \\beta",
        "P_1^{(\\alpha,\\beta)}(z)= (\\alpha+1) + (\\alpha+\\beta+2)\\frac{z-1}{2}",
        "P_n^{(\\alpha,\\beta)}(z)=\\frac{(\\alpha+1)_n}{n!}\\,{}_2F_1\\left(-n,1+\\alpha+\\beta+n;\\alpha+1;\\tfrac{1}{2}(1-z)\\right)",
        "P_{n}^{(\\alpha, \\beta)}",
        "P_n^{(\\alpha,\\beta)}(x)= \\sum_{s=0}^n {n+\\alpha\\choose n-s}{n+\\beta \\choose s} \\left(\\frac{x-1}{2}\\right)^{s} \\left(\\frac{x+1}{2}\\right)^{n-s}",
        "P_n^{(\\alpha,\\beta)}(x)=(n+\\alpha)! (n+\\beta)! \\sum_{s=0}^n \\frac{1}{s! (n+\\alpha-s)!(\\beta+s)!(n-s)!} \\left(\\frac{x-1}{2}\\right)^{n-s} \\left(\\frac{x+1}{2}\\right)^{s}",
        "P_n^{(\\alpha,\\beta)} (z) = \\frac{\\Gamma (\\alpha+n+1)}{n!\\,\\Gamma (\\alpha+\\beta+n+1)} \\sum_{m=0}^n {n\\choose m} \\frac{\\Gamma (\\alpha + \\beta + n + m + 1)}{\\Gamma (\\alpha + m + 1)} \\left(\\frac{z-1}{2}\\right)^m",
        "P_2^{(\\alpha,\\beta)}(z)= \\frac{(\\alpha+1)(\\alpha+2)}{2}+ (\\alpha+2)(\\alpha+\\beta+3)\\frac{z-1}{2}+ \\frac{(\\alpha+\\beta+3)(\\alpha+\\beta+4)}{2}\\left(\\frac{z-1}{2}\\right)^2,..",
        "P_n^{(\\alpha, \\beta)} (1) = {n+\\alpha\\choose n}",
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "P_n^{(\\alpha, \\beta)} (-1) = (-1)^n { n+\\beta\\choose n}",
        "P_n^{(\\alpha, \\beta)} (-z) = (-1)^n P_n^{(\\beta, \\alpha)} (z)",
        "\\begin{align}&2n (n + \\alpha + \\beta) (2n + \\alpha + \\beta - 2) P_n^{(\\alpha,\\beta)}(z) \\\\&\\qquad= (2n+\\alpha + \\beta-1) \\Big\\{ (2n+\\alpha + \\beta)(2n+\\alpha+\\beta-2) z +  \\alpha^2 - \\beta^2 \\Big\\} P_{n-1}^{(\\alpha,\\beta)}(z) - 2 (n+\\alpha - 1) (n + \\beta-1) (2n+\\alpha + \\beta) P_{n-2}^{(\\alpha, \\beta)}(z),\\end{align}",
        "\\begin{align}(z-1) \\frac{d}{dz} P_n^{(\\alpha,\\beta)}(z) &= \\frac{1}{2} (z-1)(1+\\alpha+\\beta+n)P_{n-1}^{(\\alpha+1,\\beta+1)} \\\\&= n P_n^{(\\alpha,\\beta)} - (\\alpha+n) P_{n-1}^{(\\alpha,\\beta+1)} \\\\&=(1+\\alpha+\\beta+n) \\left( P_n^{(\\alpha,\\beta+1)} - P_{n}^{(\\alpha,\\beta)} \\right) \\\\&=(\\alpha+n) P_n^{(\\alpha-1,\\beta+1)} - \\alpha P_n^{(\\alpha,\\beta)} \\\\&=\\frac{2(n+1) P_{n+1}^{(\\alpha,\\beta-1)} - \\left(z(1+\\alpha+\\beta+n)+\\alpha+1+n-\\beta \\right) P_n^{(\\alpha,\\beta)}}{1+z} \\\\&=\\frac{(2\\beta+n+nz) P_n^{(\\alpha,\\beta)} - 2(\\beta+n) P_n^{(\\alpha,\\beta-1)}}{1+z} \\\\&=\\frac{1-z}{1+z} \\left( \\beta P_n^{(\\alpha,\\beta)} - (\\beta+n) P_{n}^{(\\alpha+1,\\beta-1)} \\right) \\, .\\end{align}",
        "\\sum_{n=0}^\\infty P_n^{(\\alpha,\\beta)}(z) t^n = 2^{\\alpha + \\beta} R^{-1} (1 - t + R)^{-\\alpha} (1 + t + R)^{-\\beta}",
        "P_n^{(\\alpha,\\beta)}(\\cos \\theta) = n^{-\\frac{1}{2}}k(\\theta)\\cos (N\\theta + \\gamma) + O \\left (n^{-\\frac{3}{2}} \\right )",
        "\\begin{align}\\lim_{n \\to \\infty} n^{-\\alpha}P_n^{(\\alpha,\\beta)}\\left(\\cos \\left ( \\tfrac{z}{n} \\right ) \\right) &= \\left(\\tfrac{z}{2}\\right)^{-\\alpha} J_\\alpha(z)\\\\ \\lim_{n \\to \\infty} n^{-\\beta}P_n^{(\\alpha,\\beta)}\\left(\\cos \\left (\\pi - \\tfrac{z}{n} \\right) \\right) &= \\left(\\tfrac{z}{2}\\right)^{-\\beta} J_\\beta(z)\\end{align}"
      ],
      "definiens" : [
        {
          "definition" : "Jacobi polynomial",
          "score" : 0.7610166159802031
        },
        {
          "definition" : "recurrence relation for the Jacobi polynomial",
          "score" : 0.6839477168404777
        },
        {
          "definition" : "identity",
          "score" : 0.6021940404975354
        },
        {
          "definition" : "solution of the second order linear homogeneous differential equation",
          "score" : 0.5927925509888069
        },
        {
          "definition" : "Gauss ' contiguous relation",
          "score" : 0.5262687197903358
        },
        {
          "definition" : "derivative of the explicit expression",
          "score" : 0.485353064068252
        },
        {
          "definition" : "symmetry relation",
          "score" : 0.4498056309413439
        },
        {
          "definition" : "other terminal value",
          "score" : 0.44040414143261547
        },
        {
          "definition" : "function of the Jacobi polynomial",
          "score" : 0.41371425056515165
        },
        {
          "definition" : "polynomial",
          "score" : 0.41371425056515165
        },
        {
          "definition" : "Darboux formula",
          "score" : 0.3996726567405132
        },
        {
          "definition" : "asymptotic",
          "score" : 0.39027116723178473
        },
        {
          "definition" : "simplicity",
          "score" : 0.39027116723178473
        },
        {
          "definition" : "Heine formula",
          "score" : 0.37102777777777773
        },
        {
          "definition" : "orthogonality condition",
          "score" : 0.35202659303920414
        },
        {
          "definition" : "quantity",
          "score" : 0.3401690346273844
        },
        {
          "definition" : "equivalent expression",
          "score" : 0.3401381939721649
        },
        {
          "definition" : "class of classical orthogonal polynomial",
          "score" : 0.34013819303095466
        },
        {
          "definition" : "asymptotic of the Jacobi polynomial",
          "score" : 0.33493639740158543
        },
        {
          "definition" : "limit",
          "score" : 0.33493639740158543
        },
        {
          "definition" : "Mehler",
          "score" : 0.33493639740158543
        },
        {
          "definition" : "branch of square root",
          "score" : 0.32662313047477654
        },
        {
          "definition" : "alternative normalization",
          "score" : 0.3237473360333137
        },
        {
          "definition" : "interior",
          "score" : 0.3237473360333137
        },
        {
          "definition" : "interval",
          "score" : 0.3237473360333137
        },
        {
          "definition" : "nonnegative integer",
          "score" : 0.31347914375992064
        },
        {
          "definition" : "special case",
          "score" : 0.31347914375992064
        },
        {
          "definition" : "Rodrigues ' formula",
          "score" : 0.31344831240981247
        },
        {
          "definition" : "Pochhammer 's symbol",
          "score" : 0.3134483022376059
        },
        {
          "definition" : "mathematics",
          "score" : 0.31344830216349084
        },
        {
          "definition" : "domain",
          "score" : 0.29510245707057825
        },
        {
          "definition" : "orthonormal basis",
          "score" : 0.27649015627394585
        },
        {
          "definition" : "term",
          "score" : 0.27649015627394585
        },
        {
          "definition" : "equivalent definition",
          "score" : 0.27361437207880523
        },
        {
          "definition" : "point",
          "score" : 0.2478452773112104
        },
        {
          "definition" : "case",
          "score" : 0.22635718301432597
        },
        {
          "definition" : "series for the hypergeometric function",
          "score" : 0.22635718301432597
        },
        {
          "definition" : "hypergeometric function",
          "score" : 0.22635718214723086
        },
        {
          "definition" : "hypergeometric polynomial",
          "score" : 0.22635718207311575
        }
      ]
    },
    {
      "id" : "FORMULA_bbe31257a81536e1e108b8f41a89c164",
      "formula" : "\\begin{align}&2n (n + \\alpha + \\beta) (2n + \\alpha + \\beta - 2) P_n^{(\\alpha,\\beta)}(z) \\\\&\\qquad= (2n+\\alpha + \\beta-1) \\Big\\{ (2n+\\alpha + \\beta)(2n+\\alpha+\\beta-2) z +  \\alpha^2 - \\beta^2 \\Big\\} P_{n-1}^{(\\alpha,\\beta)}(z) - 2 (n+\\alpha - 1) (n + \\beta-1) (2n+\\alpha + \\beta) P_{n-2}^{(\\alpha, \\beta)}(z),\\end{align}",
      "semanticFormula" : "\\begin{align}&2 n (n + \\alpha + \\beta) (2 n + \\alpha + \\beta - 2) \\JacobipolyP{\\alpha}{\\beta}{n}@{z} \\\\ &\\qquad = (2 n + \\alpha + \\beta - 1) \\{(2 n + \\alpha + \\beta) (2 n + \\alpha + \\beta - 2) z + \\alpha^2 - \\beta^2 \\} \\JacobipolyP{\\alpha}{\\beta}{n-1}@{z} - 2 (n + \\alpha - 1) (n + \\beta - 1) (2 n + \\alpha + \\beta) \\JacobipolyP{\\alpha}{\\beta}{n-2}@{z} ,\\end{align}",
      "confidence" : 0.7125985104912714,
      "translations" : {
        "Mathematica" : {
          "translation" : "2*n*(n + \\[Alpha]+ \\[Beta])*(2*n + \\[Alpha]+ \\[Beta]- 2)*JacobiP[n, \\[Alpha], \\[Beta], z] ",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 50,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "Complex[51.96152422706632, 29.999999999999996]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[175.00000000000009, 454.6633369868302]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-859.3137069051088, 2149.875]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[26.78460969082653, 11.999999999999998]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[149.28203230275514, 247.84609690826522]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-251.69700328814696, 1432.9470032881472]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[67.144450602827, 43.31249999999999]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[173.8745024904425, 589.4021688216822]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-1309.7238202098142, 2551.750626525221]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[14.784609690826528, 11.999999999999998]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[10.717967697244937, 167.84609690826528]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-566.697003288147, 614.5529967118529]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[5.196152422706632, 2.9999999999999996]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[22.50000000000002, 77.94228634059947]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-227.331668493415, 393.75000000000006]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[20.974750274012273, 19.687499999999996]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-6.727244019737731, 229.9428828760985]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-819.3870778228332, 730.4313849189001]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[82.894450602827, 43.31249999999999]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[344.1567475095578, 687.7146688216822]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-886.969913959814, 3561.04234222478]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[47.22475027401227, 19.687499999999996]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[282.63349401973784, 397.0053828760985]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-123.93785907283284, 2428.4162713311002]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[103.92304845413264, 59.99999999999999]",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[360.0000000000001, 872.9536070147142]",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-1454.9226783578558, 4200.0]",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-29.999999999999986, 51.96152422706632]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-350.0000000000001, -454.66333698683013]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[3142.125, -859.3137069051111]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-5.999999999999995, 20.784609690826528]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-200.0, -138.56406460551005]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[1181.2500000000014, -818.3940065762959]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-51.18749999999998, 75.019450602827]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-429.171875, -723.6995413312393]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[4695.996093750002, -593.7010092350366]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-17.999999999999993, 20.784609690826528]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-120.0, -277.1281292110202]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[1811.2500000000007, -1.2789769243681803*^-12]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-2.9999999999999987, 5.196152422706632]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-67.5, -77.94228634059944]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[656.25, -227.33166849341507]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-32.81249999999999, 34.09975027401227]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-140.484375, -458.1545018958362]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[2756.66015625, 377.3299747582646]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-35.43749999999998, 75.019450602827]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-527.484375, -553.4172963121241]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[3953.3203125000023, -1602.9927249345976]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-6.562499999999992, 34.09975027401227]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-307.54687499999983, -168.7937638563605]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 0,
            "testCalculations" : [ ]
          }
        },
        "Maple" : {
          "translation" : "2*n*(n + alpha + beta)*(2*n + alpha + beta - 2)*JacobiP(n, alpha, beta, z) ",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 49,
            "numberOfSuccessfulTests" : 1,
            "testCalculations" : [
              {
                "result" : "90.00000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "1093.750000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "7441.875000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "30.00000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "43.75000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-165.3750000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "120.0000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "2012.500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "19183.50000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "42.00000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "619.9999999",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "4528.125000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "18.00000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "60.00000001",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-39.37500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "54.00000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "1080.000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "10946.25000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "122.0625000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "3/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "1401.898438",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "3/2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "9322.009278",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "3/2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "35.43750000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "1/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "25.52343750",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "1/2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "-238.5131836",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "1/2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "165.3750000",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "2643.093750",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "24736.81640",
                "testValues" : {
                  "alpha" : "3/2",
                  "z" : "2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "30.00000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "380.0000001",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "2559.375000",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "6.000000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-20.00000001",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-118.1250000",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "42.00000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "760.0000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "7323.750000",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "9.000000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "180.0000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "1378.125000",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.000000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-65.62500000",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "12.00000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "337.5000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "3675.000000",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "45.93750000",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "3/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "520.8046876",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "3/2",
                  "beta" : "2",
                  "n" : "2"
                }
              },
              {
                "result" : "3369.367675",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "3/2",
                  "beta" : "2",
                  "n" : "3"
                }
              },
              {
                "result" : "6.562500000",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "1/2",
                  "beta" : "2",
                  "n" : "1"
                }
              },
              {
                "result" : "-36.07031250",
                "testValues" : {
                  "alpha" : "1/2",
                  "z" : "1/2",
                  "beta" : "2",
                  "n" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 0,
            "testCalculations" : [ ]
          }
        }
      },
      "positions" : [
        {
          "section" : 9,
          "sentence" : 0,
          "word" : 12
        }
      ],
      "includes" : [
        "n + \\alpha + \\beta",
        "\\alpha,\\beta",
        "n",
        "P_{n}^{(\\alpha, \\beta)}",
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "z"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "recurrence relation for the Jacobi polynomial",
          "score" : 0.7125985104912714
        }
      ]
    },
    {
      "id" : "FORMULA_742460c93f449417419cf4d797043608",
      "formula" : "n= 2, 3, ...",
      "semanticFormula" : "n= 2, 3,",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "n == 2 , 3 ",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 3,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 3,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "$Failed",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "n == 2 , 3 "
        },
        "Maple" : {
          "translation" : "n = 2 , 3 ",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 3,
            "numberOfFailedTests" : 3,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (-2., -3.) < -.999\"",
                "testValues" : {
                  "n" : "1"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (-2., -3.) < -1.999\"",
                "testValues" : {
                  "n" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (-2., -3.) < -2.999\"",
                "testValues" : {
                  "n" : "3"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "n-2",
                "property" : "Simple"
              },
              {
                "result" : "n-2",
                "property" : "ConvEXP"
              },
              {
                "result" : "n-2",
                "property" : "ConvHYP"
              },
              {
                "result" : "n-2",
                "property" : "EXP"
              },
              {
                "result" : "n-2",
                "property" : "EXP+EXP"
              },
              {
                "result" : "n-2",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 9,
          "sentence" : 0,
          "word" : 14
        }
      ],
      "includes" : [
        "n=m",
        "n"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "recurrence relation for the Jacobi polynomial",
          "score" : 0.6859086196238077
        }
      ]
    },
    {
      "id" : "FORMULA_2583a2b549a7ff71d02941bc95a657b7",
      "formula" : "\\begin{align}(z-1) \\frac{d}{dz} P_n^{(\\alpha,\\beta)}(z) &= \\frac{1}{2} (z-1)(1+\\alpha+\\beta+n)P_{n-1}^{(\\alpha+1,\\beta+1)} \\\\&= n P_n^{(\\alpha,\\beta)} - (\\alpha+n) P_{n-1}^{(\\alpha,\\beta+1)} \\\\&=(1+\\alpha+\\beta+n) \\left( P_n^{(\\alpha,\\beta+1)} - P_{n}^{(\\alpha,\\beta)} \\right) \\\\&=(\\alpha+n) P_n^{(\\alpha-1,\\beta+1)} - \\alpha P_n^{(\\alpha,\\beta)} \\\\&=\\frac{2(n+1) P_{n+1}^{(\\alpha,\\beta-1)} - \\left(z(1+\\alpha+\\beta+n)+\\alpha+1+n-\\beta \\right) P_n^{(\\alpha,\\beta)}}{1+z} \\\\&=\\frac{(2\\beta+n+nz) P_n^{(\\alpha,\\beta)} - 2(\\beta+n) P_n^{(\\alpha,\\beta-1)}}{1+z} \\\\&=\\frac{1-z}{1+z} \\left( \\beta P_n^{(\\alpha,\\beta)} - (\\beta+n) P_{n}^{(\\alpha+1,\\beta-1)} \\right) \\, .\\end{align}",
      "semanticFormula" : "\\begin{align}(z - 1) \\deriv [1]{ }{z} \\JacobipolyP{\\alpha}{\\beta}{n}@{z} &= \\frac{1}{2} (z - 1) (1 + \\alpha + \\beta + n) \\JacobipolyP{\\alpha + 1}{\\beta + 1}{n-1}@{x} \\\\ &= n \\JacobipolyP{\\alpha}{\\beta}{n}@{x} - (\\alpha + n) \\JacobipolyP{\\alpha}{\\beta + 1}{n-1}@{x} \\\\ &= (1 + \\alpha + \\beta + n) (\\JacobipolyP{\\alpha}{\\beta + 1}{n}@{x} - \\JacobipolyP{\\alpha}{\\beta}{n}@{x}) \\\\ &= (\\alpha + n) \\JacobipolyP{\\alpha - 1}{\\beta + 1}{n}@{x} - \\alpha \\JacobipolyP{\\alpha}{\\beta}{n}@{x} \\\\ &= \\frac{2 (n + 1) \\JacobipolyP{\\alpha}{\\beta - 1}{n+1}@{x} - (z (1 + \\alpha + \\beta + n) + \\alpha + 1 + n - \\beta) \\JacobipolyP{\\alpha}{\\beta}{n}@{x}}{1+z} \\\\ &= \\frac{(2 \\beta + n + nz) \\JacobipolyP{\\alpha}{\\beta}{n}@{x} - 2 (\\beta + n) \\JacobipolyP{\\alpha}{\\beta - 1}{n}@{x}}{1+z} \\\\ &= \\frac{1-z}{1+z} (\\beta \\JacobipolyP{\\alpha}{\\beta}{n}@{x} - (\\beta + n) \\JacobipolyP{\\alpha + 1}{\\beta - 1}{n}@{x}) .\\end{align}",
      "confidence" : 0.4067576318191648,
      "translations" : {
        "Mathematica" : {
          "translation" : "(z - 1)*D[JacobiP[n, \\[Alpha], \\[Beta], z], {z, 1}] == Divide[1,2]*(z - 1)*(1 + \\[Alpha]+ \\[Beta]+ n)*JacobiP[n - 1, \\[Alpha]+ 1, \\[Beta]+ 1, x] == n*JacobiP[n, \\[Alpha], \\[Beta], x]-(\\[Alpha]+ n)*JacobiP[n - 1, \\[Alpha], \\[Beta]+ 1, x] == (1 + \\[Alpha]+ \\[Beta]+ n)*(JacobiP[n, \\[Alpha], \\[Beta]+ 1, x]- JacobiP[n, \\[Alpha], \\[Beta], x]) == (\\[Alpha]+ n)*JacobiP[n, \\[Alpha]- 1, \\[Beta]+ 1, x]- \\[Alpha]*JacobiP[n, \\[Alpha], \\[Beta], x] == Divide[2*(n + 1)*JacobiP[n + 1, \\[Alpha], \\[Beta]- 1, x]-(z*(1 + \\[Alpha]+ \\[Beta]+ n)+ \\[Alpha]+ 1 + n - \\[Beta])*JacobiP[n, \\[Alpha], \\[Beta], x],1 + z] == Divide[(2*\\[Beta]+ n + n*z)*JacobiP[n, \\[Alpha], \\[Beta], x]- 2*(\\[Beta]+ n)*JacobiP[n, \\[Alpha], \\[Beta]- 1, x],1 + z] == Divide[1 - z,1 + z]*(\\[Beta]*JacobiP[n, \\[Alpha], \\[Beta], x]-(\\[Beta]+ n)*JacobiP[n, \\[Alpha]+ 1, \\[Beta]- 1, x])",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 350,
            "numberOfFailedTests" : 233,
            "numberOfSuccessfulTests" : 117,
            "testCalculations" : [
              {
                "result" : "Complex[-1.7331668493415138, -4.031733260263394]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-6.254550493222089, -31.217300219209804]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-1.2379763209582244, -2.87980947161671]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-5.036283753485485, -22.827400109604902]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-2.0117115215571144, -4.679690391377153]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-6.858023774843382, -35.98196122863803]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-1.2379763209582244, -2.879809471616709]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-3.3031169041439696, -18.795666849341508]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-0.8253175473054828, -1.9198729810778064]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-2.606062705509204, -13.007208424670754]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-1.475255115808551, -3.4317729536765786]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-3.633536518810148, -22.156241687290677]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-2.011711521557114, -4.679690391377153]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-8.173373615861495, -39.04175879223078]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-1.475255115808551, -3.431772953676579]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-6.651103801145817, -29.175777274356403]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-2.310889132455353, -5.3756443470178565]",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-8.935072133174414, -44.596143170299726]",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[23.62499999999999, -31.826433589078118]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[153.56249999999997, -34.09975027401231]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[16.874999999999993, -22.733166849341515]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[114.18749999999997, -38.6463836438806]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[27.42187499999999, -36.94139613017996]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[175.56152343749997, -28.89852348370539]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[16.874999999999993, -22.733166849341515]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[90.56249999999997, -6.819950054802483]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[11.249999999999996, -15.155444566227676]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[63.98437499999999, -14.208229280838456]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[20.10937499999999, -27.090357162131973]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[105.68847656249999, -0.3298338940194796]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[27.42187499999999, -36.94139613017995]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[193.49121093749994, -53.05251326113077]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[20.109374999999993, -27.09035716213197]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-1.5849364905389032, 1.2499999999999998]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-9.985099890395091, 7.874999999999999]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-42.43667453417913, 33.46874999999999]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-1.2679491924311226, 0.9999999999999999]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-7.924682452694516, 6.249999999999999]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-33.28366630131697, 26.249999999999996]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-1.7434301395927936, 1.3749999999999998]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-11.074743727640586, 8.734374999999998]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-47.45522734367458, 37.42675781249999]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-1.2679491924311226, 0.9999999999999999]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-6.339745962155613, 4.999999999999999]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-23.29856641092188, 18.374999999999996]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-0.950961894323342, 0.7499999999999999]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-4.75480947161671, 3.7499999999999996]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-17.335242865269255, 13.671874999999998]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-1.426442841485013, 1.1249999999999998]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-7.191649325820274, 5.671874999999999]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-26.64055358901914, 21.010742187499996]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-1.7434301395927936, 1.3749999999999998]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-12.104952446490874, 9.546874999999998]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-55.033204939063715, 43.40332031249999]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-1.426442841485013, 1.1249999999999998]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-9.806794535209464, 7.734374999999999]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-44.02532571961774, 34.72167968749999]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-1.901923788646684, 1.4999999999999998]",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-13.313466520526788, 10.499999999999998]",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-61.020054885747776, 48.12499999999999]",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-5.0, 2.165063509461097]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-31.499999999999996, 13.639900109604909]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-133.875, 57.96957546582087]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-3.9999999999999996, 1.7320508075688774]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-24.999999999999996, 10.825317547305485]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-104.99999999999999, 45.46633369868303]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-5.499999999999999, 2.3815698604072066]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-34.9375, 15.128381272359414]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-149.70703125, 64.82504609382542]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-3.9999999999999996, 1.7320508075688774]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-20.0, 8.660254037844387]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-73.5, 31.82643358907812]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-2.9999999999999996, 1.299038105676658]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-14.999999999999998, 6.49519052838329]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-54.68749999999999, 23.680382134730745]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-4.5, 1.948557158514987]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-22.687499999999996, 9.823975674179726]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-84.04296875, 36.39167297348086]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-5.499999999999999, 2.3815698604072066]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-38.1875, 16.535672553509126]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-173.61328124999997, 75.17675599843629]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-4.5, 1.948557158514987]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-30.937499999999996, 13.396330464790536]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-5.0, 6.698729810778066]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-18.375000000000004, 24.617832054609394]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-60.046874999999986, 80.44755832131284]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-3.75, 5.02404735808355]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-13.671874999999993, 18.316839326346273]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-44.296875, 59.34655941736193]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-5.671875, 7.598871629101369]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-21.010742187499996, 28.149057007595722]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-69.1131591796875, 92.5940759428045]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-2.749999999999999, 3.6843013959279363]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-8.671875, 11.618109515568209]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-25.921875, 34.72872736275254]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-1.875, 2.512023679041775]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-5.937499999999998, 7.954741650298953]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-17.773437499999993, 23.811891124250156]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-3.234375, 4.333240846347062]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-10.2587890625, 13.744171223090543]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-30.778198242187493, 41.234966817395694]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-6.359374999999999, 8.519946978083354]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-25.174804687499993, 33.72784292813433]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-86.3909912109375, 115.74198164147458]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-4.921875, 6.594062157484659]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-19.282226562499996, 25.833285178479084]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-65.46813964843747, 87.71067574383395]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-7.125, 9.545689980358745]",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-28.4375, 38.099025798800255]",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-98.28124999999997, 131.67190784310637]",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-5.0000000000000036, 43.301270189221924]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-18.375, 159.13216794539053]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-60.046875, 520.0211916786869]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-3.75, 32.475952641916436]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-13.671875, 118.40191067365369]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-44.296875, 383.6221905826379]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-5.671875, 49.11987837089861]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-21.010742187499993, 181.9583648674042]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-69.11315917968756, 598.5375158540703]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-2.75, 23.815698604072054]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-8.671875000000004, 75.10064048443178]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-25.921875000000007, 224.49002263724736]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-1.8750000000000009, 16.237976320958218]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-5.9375, 51.42025834970103]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-17.773437500000007, 153.9224838757498]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-3.234375, 28.010509153652926]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-10.258789062499996, 88.84371940190941]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-30.778198242187514, 266.5470156044792]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-6.359375, 55.073803021916625]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-25.1748046875, 218.02020394686556]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[-86.39099121093753, 748.1679304679001]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[-4.9218750000000036, 42.62468784251533]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[-19.282226562499993, 166.98898044652083]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[5.625, -7.536071037125325]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[21.875000000000007, -29.306942922154043]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[73.82812499999999, -98.91093236226989]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[4.374999999999999, -5.861388584430808]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[16.953124999999993, -22.71288076466938]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[56.6015625, -75.83171481107358]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[6.296875000000001, -8.436212855448629]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[24.620117187499996, -32.98470258975114]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[83.6590576171875, -112.08188464037076]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[3.125, -4.186706131736291]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[10.390625, -13.92079788802317]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[31.9921875, -42.86140402365028]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[2.25, -3.01442841485013]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[7.499999999999997, -10.048094716167098]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[22.968749999999993, -30.77229006826174]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[3.609375, -4.835645582155417]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[12.055664062499998, -16.15152724883891]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[37.30651855468749, -49.98125759572604]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[7.109375, -9.524756449700064]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[29.79980468749999, -39.92416800310404]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[105.7562255859375, -141.6864762015779]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[5.671875, -7.598871629101369]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[23.657226562499996, -31.694673762909893]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[82.99743652343747, -111.19548045154221]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[7.875, -10.550499451975455]",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[33.18749999999999, -44.462819119039416]",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[118.59374999999999, -158.88549769939226]",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[5.625000000000004, -48.71392896287466]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[21.875000000000004, -189.44305707784588]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[73.82812500000001, -639.3703176377298]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[4.375, -37.88861141556917]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[16.953125, -146.81836923533058]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[56.6015625, -490.18391018892623]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[6.296875, -54.532537144551355]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[24.620117187499996, -213.2164692852488]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[83.65905761718757, -724.5086915315039]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[3.1250000000000004, -27.0632938682637]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[10.390625000000005, -89.98545211197681]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[31.99218750000001, -277.0604709763496]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[2.250000000000001, -19.485571585149863]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[7.500000000000001, -64.95190528383287]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[22.968750000000007, -198.9152099317382]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[3.609375000000001, -31.25810441784457]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[12.0556640625, -104.40511337616104]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[37.30651855468752, -323.08392795114884]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[7.109375000000001, -61.568993550299915]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[29.799804687500007, -258.07387887189583]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[105.75622558593753, -915.8757796577967]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[5.6718750000000036, -49.11987837089862]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[23.657226562499996, -204.87759186209001]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[0.625, -0.8373412263472582]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[4.374999999999998, -5.861388584430808]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[19.687499999999996, -26.376248629938633]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[0.37500000000000056, -0.502404735808355]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[2.968750000000001, -3.9773708251494764]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[13.9453125, -18.683176112873202]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[0.7499999999999987, -1.0048094716167095]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[5.125, -6.8661980560475175]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[22.880859374999996, -30.65453895830666]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[0.6249999999999993, -0.837341226347258]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[3.281250000000001, -4.396041438323106]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[12.304687500000002, -16.48515539371165]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[0.375, -0.502404735808355]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[2.187500000000001, -2.9306942922154042]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[8.4765625, -11.356440382334693]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[0.75, -1.00480947161671]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[3.8750000000000013, -5.191515603353002]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[14.482421875000002, -19.402766229265374]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[0.6249999999999993, -0.8373412263472582]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[4.9218750000000036, -6.59406215748466]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[24.038085937499993, -32.20492857271526]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[0.37499999999999994, -0.502404735808355]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[3.359375000000001, -4.500709091616514]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[17.1923828125, -23.03342545288044]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[0.75, -1.00480947161671]",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[5.750000000000004, -7.703539282394777]",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[27.812499999999986, -37.26168457245299]",
                "testValues" : {
                  "α" : "2",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[0.6249999999999991, -5.4126587736527405]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[4.375, -37.88861141556917]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[19.6875, -170.4987513700613]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[0.37500000000000044, -3.247595264191644]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[2.9687500000000036, -25.71012917485051]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[13.945312500000014, -120.76994888712676]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[0.7499999999999996, -6.4951905283832865]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[5.1249999999999964, -44.38380194395246]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[22.880859374999986, -198.15405479169328]",
                "testValues" : {
                  "α" : "Rational[3, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[0.625, -5.41265877365274]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[3.2812499999999982, -28.416458561676887]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[12.304687499999996, -106.56171960628834]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[0.3750000000000002, -3.2475952641916437]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[2.187500000000001, -18.944305707784586]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[8.476562500000007, -73.40918461766529]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[0.7499999999999993, -6.495190528383287]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[3.875, -33.55848439664699]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[14.482421874999993, -125.42145252073459]",
                "testValues" : {
                  "α" : "Rational[1, 2]",
                  "β" : "2",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[0.6249999999999991, -5.412658773652738]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[4.921874999999993, -42.624687842515314]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              },
              {
                "result" : "Complex[24.03808593750003, -208.17593080228463]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[3, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "3"
                }
              },
              {
                "result" : "Complex[0.37499999999999956, -3.247595264191644]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "1"
                }
              },
              {
                "result" : "Complex[3.3593749999999964, -29.093040908383486]",
                "testValues" : {
                  "α" : "2",
                  "β" : "Rational[1, 2]",
                  "x" : "Rational[3, 2]",
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]",
                  "n" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : true,
            "numberOfTests" : 7,
            "testCalculations" : [
              {
                "result" : "Times[Rational[1, 2], Plus[-1, z], Plus[1, n, α, β], Plus[Times[-1, JacobiP[Plus[-1, n], Plus[1, α], Plus[1, β], x]], JacobiP[Plus[-1, n], Plus[1, α], Plus[1, β], z]]]",
                "property" : "Simple"
              },
              {
                "result" : "Plus[Times[Plus[n, α], JacobiP[Plus[-1, n], α, Plus[1, β], x]], Times[Rational[1, 2], Plus[-1, z], Plus[1, n, α, β], JacobiP[Plus[-1, n], Plus[1, α], Plus[1, β], x]], Times[-1, n, JacobiP[n, α, β, x]]]",
                "property" : "Simple"
              },
              {
                "result" : "0",
                "property" : "Simple"
              },
              {
                "result" : "0",
                "property" : "Simple"
              },
              {
                "result" : "Times[Power[Plus[1, z], -1], Plus[Times[Plus[1, z], Plus[n, α], JacobiP[n, Plus[-1, α], Plus[1, β], x]], Times[Plus[1, n, z, Times[n, z], Times[-1, β], Times[z, β]], JacobiP[n, α, β, x]], Times[-2, Plus[1, n], JacobiP[Plus[1, n], α, Plus[-1, β], x]]]]",
                "property" : "Simple"
              },
              {
                "result" : "Times[Power[Plus[1, z], -1], Plus[Times[2, Plus[n, β], JacobiP[n, α, Plus[-1, β], x]], Times[-1, Plus[1, z], Plus[1, Times[2, n], α, β], JacobiP[n, α, β, x]], Times[2, Plus[1, n], JacobiP[Plus[1, n], α, Plus[-1, β], x]]]]",
                "property" : "Simple"
              },
              {
                "result" : "Times[Power[Plus[1, z], -1], Plus[n, β], Plus[Times[-2, JacobiP[n, α, Plus[-1, β], x]], Times[Plus[1, z], JacobiP[n, α, β, x]], Times[-1, Plus[-1, z], JacobiP[n, Plus[1, α], Plus[-1, β], x]]]]",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "(z - 1)*diff(JacobiP(n, alpha, beta, z), [z$(1)]) = (1)/(2)*(z - 1)*(1 + alpha + beta + n)*JacobiP(n - 1, alpha + 1, beta + 1, x) = n*JacobiP(n, alpha, beta, x)-(alpha + n)*JacobiP(n - 1, alpha, beta + 1, x) = (1 + alpha + beta + n)*(JacobiP(n, alpha, beta + 1, x)- JacobiP(n, alpha, beta, x)) = (alpha + n)*JacobiP(n, alpha - 1, beta + 1, x)- alpha*JacobiP(n, alpha, beta, x) = (2*(n + 1)*JacobiP(n + 1, alpha, beta - 1, x)-(z*(1 + alpha + beta + n)+ alpha + 1 + n - beta)*JacobiP(n, alpha, beta, x))/(1 + z) = ((2*beta + n + n*z)*JacobiP(n, alpha, beta, x)- 2*(beta + n)*JacobiP(n, alpha, beta - 1, x))/(1 + z) = (1 - z)/(1 + z)*(beta*JacobiP(n, alpha, beta, x)-(beta + n)*JacobiP(n, alpha + 1, beta - 1, x))",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 350,
            "numberOfFailedTests" : 161,
            "numberOfSuccessfulTests" : 189,
            "testCalculations" : [
              {
                "result" : "5.250000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "31.50000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "5.2500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "55.1250001",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "5.25000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "31.5000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "15.7500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "118.1250001",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-2.62500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-27.5625000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "7.875000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "59.06250000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.750000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "23.62500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.75000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "39.3750000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.75000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "23.6250000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "11.25000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "86.6250000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-1.87500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-19.6875000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "5.625000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-2.500000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-15.75000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-66.93750000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "1.250000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "7.87500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "33.46875000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "2.500000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "5.250000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "3.937500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.750000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "7.875000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "5.906250000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-1.250000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-10.50000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-61.0312500",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-3.750000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-31.50000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-183.0937500",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-2.000000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-12.50000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-52.50000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "1.000000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "6.25000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "26.25000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "2.000000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "5.000000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "5.250000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.000000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "7.500000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "7.875000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-1.000000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-8.12500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-45.9375000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-3.000000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-24.37500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-13.33333333",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-49.00000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-160.1250000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "3.333333330",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "12.25000001",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "40.03125000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "2.000000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-2.625000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "2.500000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-3.281249999",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-5.50000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-28.35000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-130.9875000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-27.50000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-141.7500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-654.9375000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-10.00000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-36.45833333",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-118.1250000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "2.500000001",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "9.11458332",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "29.53125000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "2.000000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : ".875000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-1.575000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "2.499999999",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "1.093750000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-1.968750000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-4.000000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-20.12500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-91.3500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-20.00000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-100.6250000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "15.00000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "58.33333330",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "196.8750000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-3.75000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-14.58333335",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-49.2187500",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-3.000000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-1.400000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "2.625000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-3.750000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-1.750000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "3.281249999",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "6.00000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "32.2000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "152.2500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "30.00000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "161.0000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "761.2500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "11.66666667",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "45.20833330",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "150.9375000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-2.91666667",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-11.30208331",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-37.7343750",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-3.000000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-2.625000001",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : ".787500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-3.749999998",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-3.281250000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : ".9843750002",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "4.50000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "23.6250000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "109.4625000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "22.50000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "118.1250000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "1.666666663",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "11.66666666",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "52.49999999",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-.416666666",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-2.91666666",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-13.1250000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-1.000000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-2.800000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-3.150000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-1.250000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-3.500000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-3.937500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : ".50000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "4.55000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "27.5625000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "2.50000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "1"
                }
              },
              {
                "result" : "22.75000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "2"
                }
              },
              {
                "result" : "137.8125000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "3/2",
                  "n" : "3"
                }
              },
              {
                "result" : "1.000000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "7.91666667",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "37.18749999",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-.250000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-1.97916667",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-9.29687499",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-.600000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-2.250000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-3.412500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "-.750000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "-2.812500000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "-4.265624999",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "z" : "2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : ".300000001",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "3.00000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              },
              {
                "result" : "18.6375000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "3/2",
                  "beta" : "1/2",
                  "n" : "3"
                }
              },
              {
                "result" : "1.499999999",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "1"
                }
              },
              {
                "result" : "15.00000000",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "z" : "1/2",
                  "beta" : "1/2",
                  "n" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 42,
            "testCalculations" : [
              {
                "result" : "-1/2*(alpha+beta+n+1)*((-1+z)*JacobiP(n-1,alpha+1,beta+1,x)+2*JacobiP(n,alpha,beta,z)-2*JacobiP(n,alpha,beta+1,z))",
                "property" : "Simple"
              },
              {
                "result" : "1/2*(-1+z)*(alpha+beta+n+1)*JacobiP(n-1,alpha+1,beta+1,x)+1/2*(2*n+2*alpha)*JacobiP(n-1,alpha,beta+1,x)-n*JacobiP(n,alpha,beta,x)",
                "property" : "Simple"
              },
              {
                "result" : "(-n-alpha)*JacobiP(n-1,alpha,beta+1,x)+(-n-beta-alpha-1)*JacobiP(n,alpha,beta+1,x)+2*JacobiP(n,alpha,beta,x)*(n+1/2*beta+1/2*alpha+1/2)",
                "property" : "Simple"
              },
              {
                "result" : "(-n-alpha)*JacobiP(n,alpha-1,beta+1,x)+(alpha+beta+n+1)*JacobiP(n,alpha,beta+1,x)-JacobiP(n,alpha,beta,x)*(beta+n+1)",
                "property" : "Simple"
              },
              {
                "result" : "((alpha+n)*JacobiP(n,alpha-1,beta+1,x)*(z+1)+(-2*n-2)*JacobiP(n+1,alpha,beta-1,x)+((beta+n+1)*z+n-beta+1)*JacobiP(n,alpha,beta,x))/(z+1)",
                "property" : "Simple"
              },
              {
                "result" : "((2*n+2)*JacobiP(n+1,alpha,beta-1,x)+(2*n+2*beta)*JacobiP(n,alpha,beta-1,x)-2*(z+1)*(n+1/2*beta+1/2*alpha+1/2)*JacobiP(n,alpha,beta,x))/(z+1)",
                "property" : "Simple"
              },
              {
                "result" : "(n+beta)*((1-z)*JacobiP(n,alpha+1,beta-1,x)-2*JacobiP(n,alpha,beta-1,x)+(z+1)*JacobiP(n,alpha,beta,x))/(z+1)",
                "property" : "Simple"
              },
              {
                "result" : "-1/2*(alpha+beta+n+1)*((-1+z)*JacobiP(n-1,alpha+1,beta+1,x)+2*JacobiP(n,alpha,beta,z)-2*JacobiP(n,alpha,beta+1,z))",
                "property" : "ConvEXP"
              },
              {
                "result" : "1/2*(-1+z)*(alpha+beta+n+1)*JacobiP(n-1,alpha+1,beta+1,x)+1/2*(2*n+2*alpha)*JacobiP(n-1,alpha,beta+1,x)-n*JacobiP(n,alpha,beta,x)",
                "property" : "ConvEXP"
              },
              {
                "result" : "(-n-alpha)*JacobiP(n-1,alpha,beta+1,x)+(-n-beta-alpha-1)*JacobiP(n,alpha,beta+1,x)+2*JacobiP(n,alpha,beta,x)*(n+1/2*beta+1/2*alpha+1/2)",
                "property" : "ConvEXP"
              },
              {
                "result" : "(-n-alpha)*JacobiP(n,alpha-1,beta+1,x)+(alpha+beta+n+1)*JacobiP(n,alpha,beta+1,x)-JacobiP(n,alpha,beta,x)*(beta+n+1)",
                "property" : "ConvEXP"
              },
              {
                "result" : "((alpha+n)*JacobiP(n,alpha-1,beta+1,x)*(z+1)+(-2*n-2)*JacobiP(n+1,alpha,beta-1,x)+((beta+n+1)*z+n-beta+1)*JacobiP(n,alpha,beta,x))/(z+1)",
                "property" : "ConvEXP"
              },
              {
                "result" : "((2*n+2)*JacobiP(n+1,alpha,beta-1,x)+(2*n+2*beta)*JacobiP(n,alpha,beta-1,x)-2*(z+1)*(n+1/2*beta+1/2*alpha+1/2)*JacobiP(n,alpha,beta,x))/(z+1)",
                "property" : "ConvEXP"
              },
              {
                "result" : "(n+beta)*((1-z)*JacobiP(n,alpha+1,beta-1,x)-2*JacobiP(n,alpha,beta-1,x)+(z+1)*JacobiP(n,alpha,beta,x))/(z+1)",
                "property" : "ConvEXP"
              },
              {
                "result" : "(-1+z)*(-hypergeom([-n+1, alpha+beta+n+2],[2+alpha],1/2-1/2*x)*(alpha+1)*binomial(alpha+n,alpha+1)+binomial(alpha+n,alpha)*n*hypergeom([-n+1, alpha+beta+n+2],[2+alpha],1/2-1/2*z))*(alpha+beta+n+1)/(2*alpha+2)",
                "property" : "ConvHYP"
              },
              {
                "result" : "(-(alpha+beta+n+1)*(-(alpha+1)*(-1+z)*binomial(alpha+n,alpha+1)+binomial(alpha+n-1,alpha)*(x-1)*(alpha+n))*hypergeom([-n+1, alpha+beta+n+2],[2+alpha],1/2-1/2*x)-2*(alpha+1)*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*x)*((-n-alpha)*binomial(alpha+n-1,alpha)+n*binomial(alpha+n,alpha)))/(2*alpha+2)",
                "property" : "ConvHYP"
              },
              {
                "result" : "-((-n-alpha)*binomial(alpha+n-1,alpha)+n*binomial(alpha+n,alpha))*((x-1)*(alpha+beta+n+1)*hypergeom([-n+1, alpha+beta+n+2],[2+alpha],1/2-1/2*x)-2*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*x)*(alpha+1))/(2*alpha+2)",
                "property" : "ConvHYP"
              },
              {
                "result" : "-1/2*(n*(x-1)*(alpha+beta+n+1)*hypergeom([-n+1, alpha+beta+n+2],[2+alpha],1/2-1/2*x)+2*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*x)*alpha*(alpha+1))*((alpha+n)*binomial(alpha+n-1,alpha-1)-alpha*binomial(alpha+n,alpha))/(alpha+1)/alpha",
                "property" : "ConvHYP"
              },
              {
                "result" : "1/2*(-2*((-2*alpha+(x-1)*(beta+n+1))*(z+1)*(alpha+n)*binomial(alpha+n-1,alpha-1)-(1+x)*alpha*((-2*n-2)*binomial(n+alpha+1,alpha)+((z+1)*n+(beta+1)*z-beta+1)*binomial(alpha+n,alpha)))*(alpha+1)*hypergeom([-1-n, alpha+beta+n+1],[alpha+1],1/2-1/2*x)+(x-1)*(alpha+beta+n+1)*hypergeom([-n, alpha+beta+n+2],[2+alpha],1/2-1/2*x)*(((beta+n+1)*x+n-beta+1)*(z+1)*(alpha+n)*binomial(alpha+n-1,alpha-1)-(1+x)*alpha*((z+1)*n+(beta+1)*z-beta+1)*binomial(alpha+n,alpha)))/(1+x)/(alpha+1)/alpha/(z+1)",
                "property" : "ConvHYP"
              },
              {
                "result" : "(2*(alpha+1)*((1+x)*(n+1)*binomial(n+alpha+1,alpha)+((n+beta)*x+(-2*z-1)*n+(-z-1)*alpha-1+(-beta-1)*z)*binomial(alpha+n,alpha))*hypergeom([-1-n, alpha+beta+n],[alpha+1],1/2-1/2*x)-(x-1)*hypergeom([-n, alpha+beta+n+1],[2+alpha],1/2-1/2*x)*(-(n+1)^2*(1+x)*binomial(n+alpha+1,alpha)+((n+beta)*(alpha+beta+n)*x+n^2+(alpha+2+(-2*beta+2)*z)*n+(1+(1-beta)*z)*alpha-beta^2*z+z+1)*binomial(alpha+n,alpha)))/(1+x)/(alpha+1)/(z+1)",
                "property" : "ConvHYP"
              },
              {
                "result" : "1/2*(n+beta)*((x-1)*n*(-(alpha+1)*(-1+z)*(1+x)*binomial(n+alpha+1,alpha+1)+binomial(alpha+n,alpha)*((-1+z)*(1+x)*n+(-2*beta+(-1+z)*alpha+z+1)*x+(-1+z)*alpha-1+(2*beta-1)*z))*hypergeom([-n+1, alpha+beta+n+1],[alpha+3],1/2-1/2*x)+2*(2+alpha)*hypergeom([-n, alpha+beta+n],[2+alpha],1/2-1/2*x)*(-(alpha+1)*(-1+z)*(1+x)*binomial(n+alpha+1,alpha+1)+binomial(alpha+n,alpha)*((z+1)*(x-1)*n+(alpha+1)*(-1+z)*(1+x))))/(1+x)/(2+alpha)/(alpha+1)/(z+1)",
                "property" : "ConvHYP"
              },
              {
                "result" : "-1/2*(alpha+beta+n+1)*((-1+z)*JacobiP(n-1,alpha+1,beta+1,x)+2*JacobiP(n,alpha,beta,z)-2*JacobiP(n,alpha,beta+1,z))",
                "property" : "EXP"
              },
              {
                "result" : "1/2*(-1+z)*(alpha+beta+n+1)*JacobiP(n-1,alpha+1,beta+1,x)+1/2*(2*n+2*alpha)*JacobiP(n-1,alpha,beta+1,x)-n*JacobiP(n,alpha,beta,x)",
                "property" : "EXP"
              },
              {
                "result" : "(-n-alpha)*JacobiP(n-1,alpha,beta+1,x)+(-n-beta-alpha-1)*JacobiP(n,alpha,beta+1,x)+2*JacobiP(n,alpha,beta,x)*(n+1/2*beta+1/2*alpha+1/2)",
                "property" : "EXP"
              },
              {
                "result" : "(-n-alpha)*JacobiP(n,alpha-1,beta+1,x)+(alpha+beta+n+1)*JacobiP(n,alpha,beta+1,x)-JacobiP(n,alpha,beta,x)*(beta+n+1)",
                "property" : "EXP"
              },
              {
                "result" : "((alpha+n)*JacobiP(n,alpha-1,beta+1,x)*(z+1)+(-2*n-2)*JacobiP(n+1,alpha,beta-1,x)+((beta+n+1)*z+n-beta+1)*JacobiP(n,alpha,beta,x))/(z+1)",
                "property" : "EXP"
              },
              {
                "result" : "((2*n+2)*JacobiP(n+1,alpha,beta-1,x)+(2*n+2*beta)*JacobiP(n,alpha,beta-1,x)-2*(z+1)*(n+1/2*beta+1/2*alpha+1/2)*JacobiP(n,alpha,beta,x))/(z+1)",
                "property" : "EXP"
              },
              {
                "result" : "(n+beta)*((1-z)*JacobiP(n,alpha+1,beta-1,x)-2*JacobiP(n,alpha,beta-1,x)+(z+1)*JacobiP(n,alpha,beta,x))/(z+1)",
                "property" : "EXP"
              },
              {
                "result" : "-1/2*(alpha+beta+n+1)*((-1+z)*JacobiP(n-1,alpha+1,beta+1,x)+2*JacobiP(n,alpha,beta,z)-2*JacobiP(n,alpha,beta+1,z))",
                "property" : "EXP+EXP"
              },
              {
                "result" : "1/2*(-1+z)*(alpha+beta+n+1)*JacobiP(n-1,alpha+1,beta+1,x)+1/2*(2*n+2*alpha)*JacobiP(n-1,alpha,beta+1,x)-n*JacobiP(n,alpha,beta,x)",
                "property" : "EXP+EXP"
              },
              {
                "result" : "(-n-alpha)*JacobiP(n-1,alpha,beta+1,x)+(-n-beta-alpha-1)*JacobiP(n,alpha,beta+1,x)+2*JacobiP(n,alpha,beta,x)*(n+1/2*beta+1/2*alpha+1/2)",
                "property" : "EXP+EXP"
              },
              {
                "result" : "(-n-alpha)*JacobiP(n,alpha-1,beta+1,x)+(alpha+beta+n+1)*JacobiP(n,alpha,beta+1,x)-JacobiP(n,alpha,beta,x)*(beta+n+1)",
                "property" : "EXP+EXP"
              },
              {
                "result" : "((alpha+n)*JacobiP(n,alpha-1,beta+1,x)*(z+1)+(-2*n-2)*JacobiP(n+1,alpha,beta-1,x)+((beta+n+1)*z+n-beta+1)*JacobiP(n,alpha,beta,x))/(z+1)",
                "property" : "EXP+EXP"
              },
              {
                "result" : "((2*n+2)*JacobiP(n+1,alpha,beta-1,x)+(2*n+2*beta)*JacobiP(n,alpha,beta-1,x)-2*(z+1)*(n+1/2*beta+1/2*alpha+1/2)*JacobiP(n,alpha,beta,x))/(z+1)",
                "property" : "EXP+EXP"
              },
              {
                "result" : "(n+beta)*((1-z)*JacobiP(n,alpha+1,beta-1,x)-2*JacobiP(n,alpha,beta-1,x)+(z+1)*JacobiP(n,alpha,beta,x))/(z+1)",
                "property" : "EXP+EXP"
              },
              {
                "result" : "-1/2*(alpha+beta+n+1)*((-1+z)*JacobiP(n-1,alpha+1,beta+1,x)+2*JacobiP(n,alpha,beta,z)-2*JacobiP(n,alpha,beta+1,z))",
                "property" : "EXP+HYP"
              },
              {
                "result" : "1/2*(-1+z)*(alpha+beta+n+1)*JacobiP(n-1,alpha+1,beta+1,x)+1/2*(2*n+2*alpha)*JacobiP(n-1,alpha,beta+1,x)-n*JacobiP(n,alpha,beta,x)",
                "property" : "EXP+HYP"
              },
              {
                "result" : "(-n-alpha)*JacobiP(n-1,alpha,beta+1,x)+(-n-beta-alpha-1)*JacobiP(n,alpha,beta+1,x)+2*JacobiP(n,alpha,beta,x)*(n+1/2*beta+1/2*alpha+1/2)",
                "property" : "EXP+HYP"
              },
              {
                "result" : "(-n-alpha)*JacobiP(n,alpha-1,beta+1,x)+(alpha+beta+n+1)*JacobiP(n,alpha,beta+1,x)-JacobiP(n,alpha,beta,x)*(beta+n+1)",
                "property" : "EXP+HYP"
              },
              {
                "result" : "((alpha+n)*JacobiP(n,alpha-1,beta+1,x)*(z+1)+(-2*n-2)*JacobiP(n+1,alpha,beta-1,x)+((beta+n+1)*z+n-beta+1)*JacobiP(n,alpha,beta,x))/(z+1)",
                "property" : "EXP+HYP"
              },
              {
                "result" : "((2*n+2)*JacobiP(n+1,alpha,beta-1,x)+(2*n+2*beta)*JacobiP(n,alpha,beta-1,x)-2*(z+1)*(n+1/2*beta+1/2*alpha+1/2)*JacobiP(n,alpha,beta,x))/(z+1)",
                "property" : "EXP+HYP"
              },
              {
                "result" : "(n+beta)*((1-z)*JacobiP(n,alpha+1,beta-1,x)-2*JacobiP(n,alpha,beta-1,x)+(z+1)*JacobiP(n,alpha,beta,x))/(z+1)",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 9,
          "sentence" : 2,
          "word" : 11
        }
      ],
      "includes" : [
        "n + \\alpha + \\beta",
        "\\alpha,\\beta",
        "n",
        "P_{n}^{(\\alpha, \\beta)}",
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "z"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "identity",
          "score" : 0.722
        },
        {
          "definition" : "Gauss ' contiguous relation",
          "score" : 0.6460746792928004
        }
      ]
    },
    {
      "id" : "FORMULA_43e16b736c3ae9163cfddd4918b3c9b8",
      "formula" : "\\sum_{n=0}^\\infty P_n^{(\\alpha,\\beta)}(z) t^n = 2^{\\alpha + \\beta} R^{-1} (1 - t + R)^{-\\alpha} (1 + t + R)^{-\\beta}",
      "semanticFormula" : "\\sum_{n=0}^\\infty \\JacobipolyP{\\alpha}{\\beta}{n}@{z} t^n = 2^{\\alpha + \\beta} R^{-1} (1 - t + R)^{-\\alpha} (1 + t + R)^{-\\beta}",
      "confidence" : 0.6859086196238077,
      "translations" : {
        "Mathematica" : {
          "translation" : "Sum[JacobiP[n, \\[Alpha], \\[Beta], z]*(t)^(n), {n, 0, Infinity}, GenerateConditions->None] == (2)^(\\[Alpha]+ \\[Beta])* (R)^(- 1)*(1 - t + R)^(- \\[Alpha])*(1 + t + R)^(- \\[Beta])"
        },
        "Maple" : {
          "translation" : "sum(JacobiP(n, alpha, beta, z)*(t)^(n), n = 0..infinity) = (2)^(alpha + beta)* (R)^(- 1)*(1 - t + R)^(- alpha)*(1 + t + R)^(- beta)"
        }
      },
      "positions" : [
        {
          "section" : 10,
          "sentence" : 0,
          "word" : 10
        }
      ],
      "includes" : [
        "n=m",
        "\\alpha,\\beta",
        "n",
        "P_{n}^{(\\alpha, \\beta)}",
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "z"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "function of the Jacobi polynomial",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "branch of square root",
          "score" : 0.5988174995334326
        }
      ]
    },
    {
      "id" : "FORMULA_2153500c5ffe4eef80d43a4c74554738",
      "formula" : "R = R(z, t) = \\left(1 - 2zt + t^2\\right)^{\\frac{1}{2}}",
      "semanticFormula" : "R = R (z , t) = (1 - 2 zt + t^2)^{\\frac{1}{2}}",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "R == R*(z , t) == (1 - 2*z*t + (t)^(2))^(Divide[1,2])",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 100,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 100,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 2,
            "testCalculations" : [
              {
                "result" : "$Failed",
                "property" : "Simple"
              },
              {
                "result" : "$Failed",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "R == R*(z , t) == (1 - 2*z*t + (t)**(2))**((1)/(2))"
        },
        "Maple" : {
          "translation" : "R = R*(z , t) = (1 - 2*z*t + (t)^(2))^((1)/(2))",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 100,
            "numberOfFailedTests" : 95,
            "numberOfSuccessfulTests" : 5,
            "testCalculations" : [
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]-1.*Exp[1/6*I*Pi]*(1.500000000, -1.500000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "-3/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]-1.*Exp[1/6*I*Pi]*(.5000000000, -1.500000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "-3/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]-1.*Exp[1/6*I*Pi]*(2., -1.500000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "-3/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]-1.*Exp[1/6*I*Pi]*(1.500000000, 1.500000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "3/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]-1.*Exp[1/6*I*Pi]*(.5000000000, 1.500000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "3/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]-1.*Exp[1/6*I*Pi]*(2., 1.500000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "3/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]-1.*Exp[1/6*I*Pi]*(1.500000000, -.5000000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "-1/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]-1.*Exp[1/6*I*Pi]*(.5000000000, -.5000000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "-1/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]-1.*Exp[1/6*I*Pi]*(2., -.5000000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "-1/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]-1.*Exp[1/6*I*Pi]*(1.500000000, .5000000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "1/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]-1.*Exp[1/6*I*Pi]*(.5000000000, .5000000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "1/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]-1.*Exp[1/6*I*Pi]*(1.500000000, -2.)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "-2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]-1.*Exp[1/6*I*Pi]*(.5000000000, -2.)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "-2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]-1.*Exp[1/6*I*Pi]*(2., -2.)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "-2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]-1.*Exp[1/6*I*Pi]*(1.500000000, 2.)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]-1.*Exp[1/6*I*Pi]*(2., 2.)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]-1.*Exp[2/3*I*Pi]*(1.500000000, -1.500000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "-3/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]-1.*Exp[2/3*I*Pi]*(.5000000000, -1.500000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "-3/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]-1.*Exp[2/3*I*Pi]*(2., -1.500000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "-3/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]-1.*Exp[2/3*I*Pi]*(1.500000000, 1.500000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "3/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]-1.*Exp[2/3*I*Pi]*(.5000000000, 1.500000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "3/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]-1.*Exp[2/3*I*Pi]*(2., 1.500000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "3/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]-1.*Exp[2/3*I*Pi]*(1.500000000, -.5000000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "-1/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]-1.*Exp[2/3*I*Pi]*(.5000000000, -.5000000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "-1/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]-1.*Exp[2/3*I*Pi]*(2., -.5000000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "-1/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]-1.*Exp[2/3*I*Pi]*(1.500000000, .5000000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "1/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]-1.*Exp[2/3*I*Pi]*(.5000000000, .5000000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "1/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]-1.*Exp[2/3*I*Pi]*(1.500000000, -2.)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "-2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]-1.*Exp[2/3*I*Pi]*(.5000000000, -2.)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "-2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]-1.*Exp[2/3*I*Pi]*(2., -2.)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "-2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]-1.*Exp[2/3*I*Pi]*(1.500000000, 2.)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]-1.*Exp[2/3*I*Pi]*(2., 2.)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]-1.*Exp[-1/3*I*Pi]*(1.500000000, -1.500000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "-3/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]-1.*Exp[-1/3*I*Pi]*(.5000000000, -1.500000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "-3/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]-1.*Exp[-1/3*I*Pi]*(2., -1.500000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "-3/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]-1.*Exp[-1/3*I*Pi]*(1.500000000, 1.500000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "3/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]-1.*Exp[-1/3*I*Pi]*(.5000000000, 1.500000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "3/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]-1.*Exp[-1/3*I*Pi]*(2., 1.500000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "3/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]-1.*Exp[-1/3*I*Pi]*(1.500000000, -.5000000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "-1/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]-1.*Exp[-1/3*I*Pi]*(.5000000000, -.5000000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "-1/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]-1.*Exp[-1/3*I*Pi]*(2., -.5000000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "-1/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]-1.*Exp[-1/3*I*Pi]*(1.500000000, .5000000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "1/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]-1.*Exp[-1/3*I*Pi]*(.5000000000, .5000000000)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "1/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]-1.*Exp[-1/3*I*Pi]*(1.500000000, -2.)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "-2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]-1.*Exp[-1/3*I*Pi]*(.5000000000, -2.)) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "-2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]*(1.500000000, -1.500000000)-2.783882181) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "-3/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]*(.5000000000, -1.500000000)-2.179449472) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "-3/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]*(2., -1.500000000)-3.041381265) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "-3/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]*(1.500000000, 1.500000000)-1.118033989*I) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "3/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]*(.5000000000, 1.500000000)-1.322875656) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "3/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]*(2., 1.500000000)-1.658312395*I) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "3/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]*(1.500000000, -.5000000000)-1.658312395) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "-1/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]*(.5000000000, -.5000000000)-1.322875656) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "-1/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]*(2., -.5000000000)-1.802775638) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "-1/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]*(1.500000000, .5000000000)-.5000000000*I) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "1/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]*(.5000000000, .5000000000)-.8660254038) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "1/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]*(2., .5000000000)-.8660254038*I) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "1/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]*(1.500000000, -2.)-3.316624790) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "-2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]*(.5000000000, -2.)-2.645751311) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "-2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]*(2., -2.)-3.605551275) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "-2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]*(1.500000000, 2.)-1.0*I) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]*(.5000000000, 2.)-1.732050808) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]*(2., 2.)-1.732050808*I) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "t" : "2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]*(1.500000000, -1.500000000)-2.783882181) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "-3/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]*(.5000000000, -1.500000000)-2.179449472) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "-3/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]*(2., -1.500000000)-3.041381265) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "-3/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]*(1.500000000, 1.500000000)-1.118033989*I) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "3/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]*(.5000000000, 1.500000000)-1.322875656) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "3/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]*(2., 1.500000000)-1.658312395*I) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "3/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]*(1.500000000, -.5000000000)-1.658312395) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "-1/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]*(.5000000000, -.5000000000)-1.322875656) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "-1/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]*(2., -.5000000000)-1.802775638) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "-1/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]*(1.500000000, .5000000000)-.5000000000*I) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "1/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]*(.5000000000, .5000000000)-.8660254038) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "1/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]*(2., .5000000000)-.8660254038*I) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "1/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]*(1.500000000, -2.)-3.316624790) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "-2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]*(.5000000000, -2.)-2.645751311) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "-2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]*(2., -2.)-3.605551275) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "-2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]*(1.500000000, 2.)-1.0*I) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]*(.5000000000, 2.)-1.732050808) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]*(2., 2.)-1.732050808*I) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "t" : "2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]*(1.500000000, -1.500000000)-2.783882181) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "-3/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]*(.5000000000, -1.500000000)-2.179449472) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "-3/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]*(2., -1.500000000)-3.041381265) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "-3/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]*(1.500000000, 1.500000000)-1.118033989*I) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "3/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]*(.5000000000, 1.500000000)-1.322875656) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "3/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]*(2., 1.500000000)-1.658312395*I) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "3/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]*(1.500000000, -.5000000000)-1.658312395) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "-1/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]*(.5000000000, -.5000000000)-1.322875656) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "-1/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]*(2., -.5000000000)-1.802775638) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "-1/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]*(1.500000000, .5000000000)-.5000000000*I) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "1/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]*(.5000000000, .5000000000)-.8660254038) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "1/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]*(2., .5000000000)-.8660254038*I) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "1/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]*(1.500000000, -2.)-3.316624790) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "-2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]*(.5000000000, -2.)-2.645751311) < .1e-2\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "t" : "-2",
                  "z" : "1/2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 12,
            "testCalculations" : [
              {
                "result" : "-R*z+R",
                "property" : "Simple"
              },
              {
                "result" : "R*z-(t^2-2*t*z+1)^(1/2)",
                "property" : "Simple"
              },
              {
                "result" : "-R*z+R",
                "property" : "ConvEXP"
              },
              {
                "result" : "R*z-(t^2-2*t*z+1)^(1/2)",
                "property" : "ConvEXP"
              },
              {
                "result" : "-R*z+R",
                "property" : "ConvHYP"
              },
              {
                "result" : "R*z-(t^2-2*t*z+1)^(1/2)",
                "property" : "ConvHYP"
              },
              {
                "result" : "-R*z+R",
                "property" : "EXP"
              },
              {
                "result" : "R*z-(t^2-2*t*z+1)^(1/2)",
                "property" : "EXP"
              },
              {
                "result" : "-R*z+R",
                "property" : "EXP+EXP"
              },
              {
                "result" : "R*z-(t^2-2*t*z+1)^(1/2)",
                "property" : "EXP+EXP"
              },
              {
                "result" : "-R*z+R",
                "property" : "EXP+HYP"
              },
              {
                "result" : "R*z-(t^2-2*t*z+1)^(1/2)",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 10,
          "sentence" : 0,
          "word" : 13
        }
      ],
      "includes" : [
        "z"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "branch of square root",
          "score" : 0.7125985104912714
        },
        {
          "definition" : "function of the Jacobi polynomial",
          "score" : 0.6460746792928004
        }
      ]
    },
    {
      "id" : "FORMULA_72b205d3ea4ad955996b9b9bf51af87c",
      "formula" : "R(z, 0) = 1",
      "semanticFormula" : "R(z, 0) = 1",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "R*(z , 0) == 1",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 50,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "$Failed",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "R*(z , 0) == 1"
        },
        "Maple" : {
          "translation" : "R*(z , 0) = 1",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 30,
            "numberOfFailedTests" : 30,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not -Exp[1/6*I*Pi]*(1.500000000, 0.) < -.999\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not -Exp[1/6*I*Pi]*(.5000000000, 0.) < -.999\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not -Exp[1/6*I*Pi]*(2., 0.) < -.999\"",
                "testValues" : {
                  "R" : "Exp[1/6*I*Pi]",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not -Exp[2/3*I*Pi]*(1.500000000, 0.) < -.999\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not -Exp[2/3*I*Pi]*(.5000000000, 0.) < -.999\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not -Exp[2/3*I*Pi]*(2., 0.) < -.999\"",
                "testValues" : {
                  "R" : "Exp[2/3*I*Pi]",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not -Exp[-1/3*I*Pi]*(1.500000000, 0.) < -.999\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not -Exp[-1/3*I*Pi]*(.5000000000, 0.) < -.999\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not -Exp[-1/3*I*Pi]*(2., 0.) < -.999\"",
                "testValues" : {
                  "R" : "Exp[-1/3*I*Pi]",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not -Exp[-5/6*I*Pi]*(1.500000000, 0.) < -.999\"",
                "testValues" : {
                  "R" : "Exp[-5/6*I*Pi]",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not -Exp[-5/6*I*Pi]*(.5000000000, 0.) < -.999\"",
                "testValues" : {
                  "R" : "Exp[-5/6*I*Pi]",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not -Exp[-5/6*I*Pi]*(2., 0.) < -.999\"",
                "testValues" : {
                  "R" : "Exp[-5/6*I*Pi]",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (2.250000000, 0.) < -.999\"",
                "testValues" : {
                  "R" : "-3/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (.7500000000, 0.) < -.999\"",
                "testValues" : {
                  "R" : "-3/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (3., 0.) < -.999\"",
                "testValues" : {
                  "R" : "-3/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (2.250000000, 0.) < 1.001\"",
                "testValues" : {
                  "R" : "3/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (-.7500000000, -0.) < -.999\"",
                "testValues" : {
                  "R" : "3/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (3., 0.) < 1.001\"",
                "testValues" : {
                  "R" : "3/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (.7500000000, 0.) < -.999\"",
                "testValues" : {
                  "R" : "-1/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (.2500000000, 0.) < -.999\"",
                "testValues" : {
                  "R" : "-1/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (1., 0.) < -.999\"",
                "testValues" : {
                  "R" : "-1/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (-.7500000000, -0.) < -.999\"",
                "testValues" : {
                  "R" : "1/2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (-.2500000000, -0.) < -.999\"",
                "testValues" : {
                  "R" : "1/2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs((1., 0.)-1.) < .1e-2\"",
                "testValues" : {
                  "R" : "1/2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (3., 0.) < -.999\"",
                "testValues" : {
                  "R" : "-2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (1., 0.) < -.999\"",
                "testValues" : {
                  "R" : "-2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (4., 0.) < -.999\"",
                "testValues" : {
                  "R" : "-2",
                  "z" : "2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (3., 0.) < 1.001\"",
                "testValues" : {
                  "R" : "2",
                  "z" : "3/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs((1., 0.)-1.) < .1e-2\"",
                "testValues" : {
                  "R" : "2",
                  "z" : "1/2"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not (4., 0.) < 1.001\"",
                "testValues" : {
                  "R" : "2",
                  "z" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "R*z-1",
                "property" : "Simple"
              },
              {
                "result" : "R*z-1",
                "property" : "ConvEXP"
              },
              {
                "result" : "R*z-1",
                "property" : "ConvHYP"
              },
              {
                "result" : "R*z-1",
                "property" : "EXP"
              },
              {
                "result" : "R*z-1",
                "property" : "EXP+EXP"
              },
              {
                "result" : "R*z-1",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 10,
          "sentence" : 0,
          "word" : 25
        }
      ],
      "includes" : [
        "z"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "branch of square root",
          "score" : 0.6460746792928004
        },
        {
          "definition" : "function of the Jacobi polynomial",
          "score" : 0.6460746792928004
        }
      ]
    },
    {
      "id" : "FORMULA_9dc229093c0cfe263c966e50e7f0a24a",
      "formula" : "P_n^{(\\alpha,\\beta)}(\\cos \\theta) = n^{-\\frac{1}{2}}k(\\theta)\\cos (N\\theta + \\gamma) + O \\left (n^{-\\frac{3}{2}} \\right )",
      "semanticFormula" : "\\JacobipolyP{\\alpha}{\\beta}{n}@{\\cos \\theta} = n^{-\\frac{1}{2}} k (\\theta) \\cos (\\AirymodderivN@{x} \\theta + \\gamma) + O (n^{-\\frac{3}{2}})",
      "confidence" : 0.4540928738647516,
      "translations" : {
        "Mathematica" : {
          "translation" : "JacobiP[n, \\[Alpha], \\[Beta], Cos[\\[Theta]]] == (n)^(-Divide[1,2])* k*(\\[Theta])*Cos[Sqrt[AiryAiPrime[x]^2 + AiryBiPrime[x]^2]*\\[Theta]+ \\[Gamma]]+ O*((n)^(-Divide[3,2]))",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 0,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "Plus[Times[-1, Power[n, Rational[-3, 2]], Plus[O, Times[k, n, θ, Cos[Plus[γ, Times[θ, Power[Plus[Power[AiryAiPrime[x], 2], Power[AiryBiPrime[x], 2]], Rational[1, 2]]]]]]]], JacobiP[n, α, β, Cos[θ]]]",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "JacobiP(n, alpha, beta, cos(theta)) = (n)^(-(1)/(2))* k*(theta)*cos(sqrt(AiryAi(1, x)^2+AiryBi(1, x)^2)*theta + gamma)+ O*((n)^(-(3)/(2)))",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 50,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(1.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+1.*Exp[1/6*I*Pi]*cos(1.888724418*Exp[1/6*I*Pi]+.5772156649)+1.*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "k" : "1",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "1",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(2.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+.7071067810*Exp[1/6*I*Pi]*cos(1.888724418*Exp[1/6*I*Pi]+.5772156649)+.3535533905*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "k" : "1",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "2",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(3.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+.5773502693*Exp[1/6*I*Pi]*cos(1.888724418*Exp[1/6*I*Pi]+.5772156649)+.1924500898*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "k" : "1",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "3",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(1.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+2.*Exp[1/6*I*Pi]*cos(1.888724418*Exp[1/6*I*Pi]+.5772156649)+1.*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "k" : "2",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "1",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(2.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+1.414213562*Exp[1/6*I*Pi]*cos(1.888724418*Exp[1/6*I*Pi]+.5772156649)+.3535533905*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "k" : "2",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "2",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(3.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+1.154700539*Exp[1/6*I*Pi]*cos(1.888724418*Exp[1/6*I*Pi]+.5772156649)+.1924500898*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "k" : "2",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "3",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(1.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+3.*Exp[1/6*I*Pi]*cos(1.888724418*Exp[1/6*I*Pi]+.5772156649)+1.*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "k" : "3",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "1",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(2.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+2.121320343*Exp[1/6*I*Pi]*cos(1.888724418*Exp[1/6*I*Pi]+.5772156649)+.3535533905*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "k" : "3",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "2",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(3.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+1.732050808*Exp[1/6*I*Pi]*cos(1.888724418*Exp[1/6*I*Pi]+.5772156649)+.1924500898*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "k" : "3",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "3",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(1.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+1.*Exp[1/6*I*Pi]*cos(.5891892950*Exp[1/6*I*Pi]+.5772156649)+1.*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "k" : "1",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "1",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(2.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+.7071067810*Exp[1/6*I*Pi]*cos(.5891892950*Exp[1/6*I*Pi]+.5772156649)+.3535533905*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "k" : "1",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "2",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(3.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+.5773502693*Exp[1/6*I*Pi]*cos(.5891892950*Exp[1/6*I*Pi]+.5772156649)+.1924500898*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "k" : "1",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "3",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(1.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+2.*Exp[1/6*I*Pi]*cos(.5891892950*Exp[1/6*I*Pi]+.5772156649)+1.*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "k" : "2",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "1",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(2.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+1.414213562*Exp[1/6*I*Pi]*cos(.5891892950*Exp[1/6*I*Pi]+.5772156649)+.3535533905*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "k" : "2",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "2",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(3.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+1.154700539*Exp[1/6*I*Pi]*cos(.5891892950*Exp[1/6*I*Pi]+.5772156649)+.1924500898*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "k" : "2",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "3",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(1.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+3.*Exp[1/6*I*Pi]*cos(.5891892950*Exp[1/6*I*Pi]+.5772156649)+1.*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "k" : "3",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "1",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(2.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+2.121320343*Exp[1/6*I*Pi]*cos(.5891892950*Exp[1/6*I*Pi]+.5772156649)+.3535533905*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "k" : "3",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "2",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(3.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+1.732050808*Exp[1/6*I*Pi]*cos(.5891892950*Exp[1/6*I*Pi]+.5772156649)+.1924500898*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "k" : "3",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "3",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(1.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+1.*Exp[1/6*I*Pi]*cos(4.101025710*Exp[1/6*I*Pi]+.5772156649)+1.*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "k" : "1",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "1",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(2.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+.7071067810*Exp[1/6*I*Pi]*cos(4.101025710*Exp[1/6*I*Pi]+.5772156649)+.3535533905*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "k" : "1",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "2",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(3.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+.5773502693*Exp[1/6*I*Pi]*cos(4.101025710*Exp[1/6*I*Pi]+.5772156649)+.1924500898*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "k" : "1",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "3",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(1.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+2.*Exp[1/6*I*Pi]*cos(4.101025710*Exp[1/6*I*Pi]+.5772156649)+1.*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "k" : "2",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "1",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(2.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+1.414213562*Exp[1/6*I*Pi]*cos(4.101025710*Exp[1/6*I*Pi]+.5772156649)+.3535533905*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "k" : "2",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "2",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(3.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+1.154700539*Exp[1/6*I*Pi]*cos(4.101025710*Exp[1/6*I*Pi]+.5772156649)+.1924500898*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "k" : "2",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "3",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(1.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+3.*Exp[1/6*I*Pi]*cos(4.101025710*Exp[1/6*I*Pi]+.5772156649)+1.*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "k" : "3",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "1",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(2.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+2.121320343*Exp[1/6*I*Pi]*cos(4.101025710*Exp[1/6*I*Pi]+.5772156649)+.3535533905*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "k" : "3",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "2",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(3.,1.500000000,1.500000000,cos(Exp[1/6*I*Pi]))+1.732050808*Exp[1/6*I*Pi]*cos(4.101025710*Exp[1/6*I*Pi]+.5772156649)+.1924500898*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "k" : "3",
                  "theta" : "Exp[1/6*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "3",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(1.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+1.*Exp[2/3*I*Pi]*cos(1.888724418*Exp[2/3*I*Pi]+.5772156649)+1.*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "k" : "1",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "1",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(2.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+.7071067810*Exp[2/3*I*Pi]*cos(1.888724418*Exp[2/3*I*Pi]+.5772156649)+.3535533905*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "k" : "1",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "2",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(3.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+.5773502693*Exp[2/3*I*Pi]*cos(1.888724418*Exp[2/3*I*Pi]+.5772156649)+.1924500898*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "k" : "1",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "3",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(1.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+2.*Exp[2/3*I*Pi]*cos(1.888724418*Exp[2/3*I*Pi]+.5772156649)+1.*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "k" : "2",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "1",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(2.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+1.414213562*Exp[2/3*I*Pi]*cos(1.888724418*Exp[2/3*I*Pi]+.5772156649)+.3535533905*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "k" : "2",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "2",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(3.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+1.154700539*Exp[2/3*I*Pi]*cos(1.888724418*Exp[2/3*I*Pi]+.5772156649)+.1924500898*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "k" : "2",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "3",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(1.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+3.*Exp[2/3*I*Pi]*cos(1.888724418*Exp[2/3*I*Pi]+.5772156649)+1.*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "k" : "3",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "1",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(2.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+2.121320343*Exp[2/3*I*Pi]*cos(1.888724418*Exp[2/3*I*Pi]+.5772156649)+.3535533905*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "k" : "3",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "2",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(3.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+1.732050808*Exp[2/3*I*Pi]*cos(1.888724418*Exp[2/3*I*Pi]+.5772156649)+.1924500898*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "3/2",
                  "k" : "3",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "3",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(1.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+1.*Exp[2/3*I*Pi]*cos(.5891892950*Exp[2/3*I*Pi]+.5772156649)+1.*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "k" : "1",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "1",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(2.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+.7071067810*Exp[2/3*I*Pi]*cos(.5891892950*Exp[2/3*I*Pi]+.5772156649)+.3535533905*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "k" : "1",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "2",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(3.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+.5773502693*Exp[2/3*I*Pi]*cos(.5891892950*Exp[2/3*I*Pi]+.5772156649)+.1924500898*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "k" : "1",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "3",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(1.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+2.*Exp[2/3*I*Pi]*cos(.5891892950*Exp[2/3*I*Pi]+.5772156649)+1.*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "k" : "2",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "1",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(2.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+1.414213562*Exp[2/3*I*Pi]*cos(.5891892950*Exp[2/3*I*Pi]+.5772156649)+.3535533905*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "k" : "2",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "2",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(3.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+1.154700539*Exp[2/3*I*Pi]*cos(.5891892950*Exp[2/3*I*Pi]+.5772156649)+.1924500898*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "k" : "2",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "3",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(1.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+3.*Exp[2/3*I*Pi]*cos(.5891892950*Exp[2/3*I*Pi]+.5772156649)+1.*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "k" : "3",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "1",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(2.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+2.121320343*Exp[2/3*I*Pi]*cos(.5891892950*Exp[2/3*I*Pi]+.5772156649)+.3535533905*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "k" : "3",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "2",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(3.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+1.732050808*Exp[2/3*I*Pi]*cos(.5891892950*Exp[2/3*I*Pi]+.5772156649)+.1924500898*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "1/2",
                  "k" : "3",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "3",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(1.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+1.*Exp[2/3*I*Pi]*cos(4.101025710*Exp[2/3*I*Pi]+.5772156649)+1.*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "k" : "1",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "1",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(2.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+.7071067810*Exp[2/3*I*Pi]*cos(4.101025710*Exp[2/3*I*Pi]+.5772156649)+.3535533905*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "k" : "1",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "2",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(3.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+.5773502693*Exp[2/3*I*Pi]*cos(4.101025710*Exp[2/3*I*Pi]+.5772156649)+.1924500898*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "k" : "1",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "3",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(1.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+2.*Exp[2/3*I*Pi]*cos(4.101025710*Exp[2/3*I*Pi]+.5772156649)+1.*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "k" : "2",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "1",
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(-JacobiP(2.,1.500000000,1.500000000,cos(Exp[2/3*I*Pi]))+1.414213562*Exp[2/3*I*Pi]*cos(4.101025710*Exp[2/3*I*Pi]+.5772156649)+.3535533905*Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "alpha" : "3/2",
                  "x" : "2",
                  "k" : "2",
                  "theta" : "Exp[2/3*I*Pi]",
                  "beta" : "3/2",
                  "gamma" : "Exp[1/6*I*Pi]",
                  "n" : "2",
                  "O" : "Exp[1/6*I*Pi]"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "-(k*theta*cos((AiryAi(1,x)^2+AiryBi(1,x)^2)^(1/2)*theta+gamma)*n-JacobiP(n,alpha,beta,cos(theta))*n^(3/2)+O)/n^(3/2)",
                "property" : "Simple"
              },
              {
                "result" : "-(k*theta*cos((AiryAi(1,x)^2+AiryBi(1,x)^2)^(1/2)*theta+gamma)*n-JacobiP(n,alpha,beta,cos(theta))*n^(3/2)+O)/n^(3/2)",
                "property" : "ConvEXP"
              },
              {
                "result" : "-(-binomial(alpha+n,alpha)*hypergeom([-n, alpha+beta+n+1],[alpha+1],1/2-1/2*cos(theta))*n^(3/2)+k*theta*cos(2/3*(x^2*(BesselI(2/3,2/3*(x^3)^(1/2))*BesselI(-2/3,2/3*(x^3)^(1/2))*(x^3)^(2/3)+BesselI(-2/3,2/3*(x^3)^(1/2))^2*(x^3)^(1/3)*x+BesselI(2/3,2/3*(x^3)^(1/2))^2*x^2)/(x^3)^(2/3))^(1/2)*theta+gamma)*n+O)/n^(3/2)",
                "property" : "ConvHYP"
              },
              {
                "result" : "-(cos((AiryAi(1,x)^2+AiryBi(1,x)^2)^(1/2)*theta)*cos(gamma)*k*n*theta-sin((AiryAi(1,x)^2+AiryBi(1,x)^2)^(1/2)*theta)*sin(gamma)*k*n*theta-JacobiP(n,alpha,beta,cos(theta))*n^(3/2)+O)/n^(3/2)",
                "property" : "EXP"
              },
              {
                "result" : "-(cos((AiryAi(1,x)^2+AiryBi(1,x)^2)^(1/2)*theta)*cos(gamma)*k*n*theta-sin((AiryAi(1,x)^2+AiryBi(1,x)^2)^(1/2)*theta)*sin(gamma)*k*n*theta-JacobiP(n,alpha,beta,cos(theta))*n^(3/2)+O)/n^(3/2)",
                "property" : "EXP+EXP"
              },
              {
                "result" : "-(cos((AiryAi(1,x)^2+AiryBi(1,x)^2)^(1/2)*theta)*cos(gamma)*k*n*theta-sin((AiryAi(1,x)^2+AiryBi(1,x)^2)^(1/2)*theta)*sin(gamma)*k*n*theta-JacobiP(n,alpha,beta,cos(theta))*n^(3/2)+O)/n^(3/2)",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 11,
          "sentence" : 0,
          "word" : 21
        }
      ],
      "includes" : [
        "\\alpha,\\beta",
        "n",
        "P_{n}^{(\\alpha, \\beta)}",
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "k",
        "O"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "Darboux formula",
          "score" : 0.722
        },
        {
          "definition" : "asymptotic",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "interior",
          "score" : 0.6460746792928004
        },
        {
          "definition" : "interval",
          "score" : 0.6460746792928004
        },
        {
          "definition" : "term",
          "score" : 0.5988174995334326
        }
      ]
    },
    {
      "id" : "FORMULA_25de4fcbf8879d9f165ef8adcb1f1d40",
      "formula" : "\\begin{align}k(\\theta) &= \\pi^{-\\frac{1}{2}} \\sin^{-\\alpha-\\frac{1}{2}} \\tfrac{\\theta}{2} \\cos^{-\\beta-\\frac{1}{2}} \\tfrac{\\theta}{2},\\\\N &= n + \\tfrac{1}{2} (\\alpha+\\beta+1),\\\\\\gamma &= - \\tfrac{\\pi}{2} \\left (\\alpha + \\tfrac{1}{2} \\right ),\\end{align}",
      "semanticFormula" : "\\begin{align}k(\\theta) &= \\pi^{-\\frac{1}{2}} \\sin^{-\\alpha-\\frac{1}{2}} \\tfrac{\\theta}{2} \\cos^{-\\beta-\\frac{1}{2}} \\tfrac{\\theta}{2}, \\\\ \\AirymodderivN@{x} &= n + \\tfrac{1}{2} (\\alpha+\\beta+1), \\\\ \\gamma &= - \\tfrac{\\pi}{2} (\\alpha + \\tfrac{1}{2}) ,\\end{align}",
      "confidence" : 0.09467048409117368,
      "translations" : {
        "Mathematica" : {
          "translation" : "k*(\\[Theta]) == \\[Pi]^(-Divide[1,2])* (Sin[Divide[\\[Theta],2]])^(- \\[Alpha]-Divide[1,2])* (Cos[Divide[\\[Theta],2]])^(- \\[Beta]-Divide[1,2])\nSqrt[AiryAiPrime[x]^2 + AiryBiPrime[x]^2] == n +Divide[1,2]*(\\[Alpha]+ \\[Beta]+ 1)\n\\[Gamma] == -Divide[\\[Pi],2]*(\\[Alpha]+Divide[1,2])",
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 0,
            "testCalculations" : [ ]
          }
        },
        "Maple" : {
          "translation" : "k*(theta) = (pi)^(-(1)/(2))* (sin((theta)/(2)))^(- alpha -(1)/(2))* (cos((theta)/(2)))^(- beta -(1)/(2)); sqrt(AiryAi(1, x)^2+AiryBi(1, x)^2) = n +(1)/(2)*(alpha + beta + 1); gamma = -(pi)/(2)*(alpha +(1)/(2))",
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 0,
            "testCalculations" : [ ]
          }
        }
      },
      "positions" : [
        {
          "section" : 11,
          "sentence" : 0,
          "word" : 24
        }
      ],
      "includes" : [
        "n",
        "k"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "term",
          "score" : 0.7125985104912714
        },
        {
          "definition" : "interval",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "asymptotic",
          "score" : 0.6460746792928004
        },
        {
          "definition" : "Darboux formula",
          "score" : 0.6460746792928004
        },
        {
          "definition" : "interior",
          "score" : 0.5988174995334326
        }
      ]
    },
    {
      "id" : "FORMULA_f186217753c37b9b9f958d906208506e",
      "formula" : "O",
      "semanticFormula" : "O",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "O",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 10,
            "numberOfFailedTests" : 10,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "Complex[0.8660254037844387, 0.49999999999999994]",
                "testValues" : {
                  "O" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]"
                }
              },
              {
                "result" : "Complex[-0.4999999999999998, 0.8660254037844387]",
                "testValues" : {
                  "O" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]"
                }
              },
              {
                "result" : "Complex[0.5000000000000001, -0.8660254037844386]",
                "testValues" : {
                  "O" : "Power[E, Times[Complex[0, Rational[-1, 3]], Pi]]"
                }
              },
              {
                "result" : "Complex[-0.8660254037844387, -0.49999999999999994]",
                "testValues" : {
                  "O" : "Power[E, Times[Complex[0, Rational[-5, 6]], Pi]]"
                }
              },
              {
                "result" : "-1.5",
                "testValues" : {
                  "O" : "Rational[-3, 2]"
                }
              },
              {
                "result" : "1.5",
                "testValues" : {
                  "O" : "Rational[3, 2]"
                }
              },
              {
                "result" : "-0.5",
                "testValues" : {
                  "O" : "Rational[-1, 2]"
                }
              },
              {
                "result" : "0.5",
                "testValues" : {
                  "O" : "Rational[1, 2]"
                }
              },
              {
                "result" : "-2.0",
                "testValues" : {
                  "O" : "-2"
                }
              },
              {
                "result" : "2.0",
                "testValues" : {
                  "O" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "O",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "O"
        },
        "Maple" : {
          "translation" : "O",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 10,
            "numberOfFailedTests" : 10,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[1/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "O" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[2/3*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "O" : "Exp[2/3*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-1/3*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "O" : "Exp[-1/3*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(Exp[-5/6*I*Pi]) < .1e-2\"",
                "testValues" : {
                  "O" : "Exp[-5/6*I*Pi]"
                }
              },
              {
                "result" : "-1.500000000",
                "testValues" : {
                  "O" : "-3/2"
                }
              },
              {
                "result" : "1.500000000",
                "testValues" : {
                  "O" : "3/2"
                }
              },
              {
                "result" : "-.5000000000",
                "testValues" : {
                  "O" : "-1/2"
                }
              },
              {
                "result" : ".5000000000",
                "testValues" : {
                  "O" : "1/2"
                }
              },
              {
                "result" : "-2.",
                "testValues" : {
                  "O" : "-2"
                }
              },
              {
                "result" : "2.",
                "testValues" : {
                  "O" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "O",
                "property" : "Simple"
              },
              {
                "result" : "O",
                "property" : "ConvEXP"
              },
              {
                "result" : "O",
                "property" : "ConvHYP"
              },
              {
                "result" : "O",
                "property" : "EXP"
              },
              {
                "result" : "O",
                "property" : "EXP+EXP"
              },
              {
                "result" : "O",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 11,
          "sentence" : 0,
          "word" : 28
        }
      ],
      "includes" : [ ],
      "isPartOf" : [
        "P_n^{(\\alpha,\\beta)}(\\cos \\theta) = n^{-\\frac{1}{2}}k(\\theta)\\cos (N\\theta + \\gamma) + O \\left (n^{-\\frac{3}{2}} \\right )"
      ],
      "definiens" : [
        {
          "definition" : "Darboux formula",
          "score" : 0.722
        },
        {
          "definition" : "term",
          "score" : 0.722
        },
        {
          "definition" : "asymptotic",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "interior",
          "score" : 0.6460746792928004
        },
        {
          "definition" : "interval",
          "score" : 0.6460746792928004
        }
      ]
    },
    {
      "id" : "FORMULA_ce84060a9db09d40e6b443d14a3e30f4",
      "formula" : "[\\epsilon,\\pi-\\epsilon]",
      "semanticFormula" : "[\\epsilon,\\pi-\\epsilon]",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "[\\[Epsilon], \\[Pi]- \\[Epsilon]]",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 30,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 30,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "Part[FullSimplify, ϵ, Plus[Pi, Times[-1, ϵ]]]",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "[Symbol('epsilon'), Symbol('pi')- Symbol('epsilon')]"
        },
        "Maple" : {
          "translation" : "[epsilon , pi - epsilon]",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 50,
            "numberOfFailedTests" : 50,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[1/6*I*Pi], 0.]\"",
                "testValues" : {
                  "epsilon" : "Exp[1/6*I*Pi]",
                  "pi" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[1/6*I*Pi], Exp[2/3*I*Pi]-1.*Exp[1/6*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[1/6*I*Pi]",
                  "pi" : "Exp[2/3*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[1/6*I*Pi], Exp[-1/3*I*Pi]-1.*Exp[1/6*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[1/6*I*Pi]",
                  "pi" : "Exp[-1/3*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[1/6*I*Pi], Exp[-5/6*I*Pi]-1.*Exp[1/6*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[1/6*I*Pi]",
                  "pi" : "Exp[-5/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[1/6*I*Pi], -1.500000000-1.*Exp[1/6*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[1/6*I*Pi]",
                  "pi" : "-3/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[1/6*I*Pi], 1.500000000-1.*Exp[1/6*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[1/6*I*Pi]",
                  "pi" : "3/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[1/6*I*Pi], -.5000000000-1.*Exp[1/6*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[1/6*I*Pi]",
                  "pi" : "-1/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[1/6*I*Pi], .5000000000-1.*Exp[1/6*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[1/6*I*Pi]",
                  "pi" : "1/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[1/6*I*Pi], -2.-1.*Exp[1/6*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[1/6*I*Pi]",
                  "pi" : "-2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[1/6*I*Pi], 2.-1.*Exp[1/6*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[1/6*I*Pi]",
                  "pi" : "2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[2/3*I*Pi], Exp[1/6*I*Pi]-1.*Exp[2/3*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[2/3*I*Pi]",
                  "pi" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[2/3*I*Pi], 0.]\"",
                "testValues" : {
                  "epsilon" : "Exp[2/3*I*Pi]",
                  "pi" : "Exp[2/3*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[2/3*I*Pi], Exp[-1/3*I*Pi]-1.*Exp[2/3*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[2/3*I*Pi]",
                  "pi" : "Exp[-1/3*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[2/3*I*Pi], Exp[-5/6*I*Pi]-1.*Exp[2/3*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[2/3*I*Pi]",
                  "pi" : "Exp[-5/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[2/3*I*Pi], -1.500000000-1.*Exp[2/3*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[2/3*I*Pi]",
                  "pi" : "-3/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[2/3*I*Pi], 1.500000000-1.*Exp[2/3*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[2/3*I*Pi]",
                  "pi" : "3/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[2/3*I*Pi], -.5000000000-1.*Exp[2/3*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[2/3*I*Pi]",
                  "pi" : "-1/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[2/3*I*Pi], .5000000000-1.*Exp[2/3*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[2/3*I*Pi]",
                  "pi" : "1/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[2/3*I*Pi], -2.-1.*Exp[2/3*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[2/3*I*Pi]",
                  "pi" : "-2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[2/3*I*Pi], 2.-1.*Exp[2/3*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[2/3*I*Pi]",
                  "pi" : "2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-1/3*I*Pi], Exp[1/6*I*Pi]-1.*Exp[-1/3*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[-1/3*I*Pi]",
                  "pi" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-1/3*I*Pi], Exp[2/3*I*Pi]-1.*Exp[-1/3*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[-1/3*I*Pi]",
                  "pi" : "Exp[2/3*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-1/3*I*Pi], 0.]\"",
                "testValues" : {
                  "epsilon" : "Exp[-1/3*I*Pi]",
                  "pi" : "Exp[-1/3*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-1/3*I*Pi], Exp[-5/6*I*Pi]-1.*Exp[-1/3*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[-1/3*I*Pi]",
                  "pi" : "Exp[-5/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-1/3*I*Pi], -1.500000000-1.*Exp[-1/3*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[-1/3*I*Pi]",
                  "pi" : "-3/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-1/3*I*Pi], 1.500000000-1.*Exp[-1/3*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[-1/3*I*Pi]",
                  "pi" : "3/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-1/3*I*Pi], -.5000000000-1.*Exp[-1/3*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[-1/3*I*Pi]",
                  "pi" : "-1/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-1/3*I*Pi], .5000000000-1.*Exp[-1/3*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[-1/3*I*Pi]",
                  "pi" : "1/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-1/3*I*Pi], -2.-1.*Exp[-1/3*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[-1/3*I*Pi]",
                  "pi" : "-2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-1/3*I*Pi], 2.-1.*Exp[-1/3*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[-1/3*I*Pi]",
                  "pi" : "2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-5/6*I*Pi], Exp[1/6*I*Pi]-1.*Exp[-5/6*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[-5/6*I*Pi]",
                  "pi" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-5/6*I*Pi], Exp[2/3*I*Pi]-1.*Exp[-5/6*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[-5/6*I*Pi]",
                  "pi" : "Exp[2/3*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-5/6*I*Pi], Exp[-1/3*I*Pi]-1.*Exp[-5/6*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[-5/6*I*Pi]",
                  "pi" : "Exp[-1/3*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-5/6*I*Pi], 0.]\"",
                "testValues" : {
                  "epsilon" : "Exp[-5/6*I*Pi]",
                  "pi" : "Exp[-5/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-5/6*I*Pi], -1.500000000-1.*Exp[-5/6*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[-5/6*I*Pi]",
                  "pi" : "-3/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-5/6*I*Pi], 1.500000000-1.*Exp[-5/6*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[-5/6*I*Pi]",
                  "pi" : "3/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-5/6*I*Pi], -.5000000000-1.*Exp[-5/6*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[-5/6*I*Pi]",
                  "pi" : "-1/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-5/6*I*Pi], .5000000000-1.*Exp[-5/6*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[-5/6*I*Pi]",
                  "pi" : "1/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-5/6*I*Pi], -2.-1.*Exp[-5/6*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[-5/6*I*Pi]",
                  "pi" : "-2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [Exp[-5/6*I*Pi], 2.-1.*Exp[-5/6*I*Pi]]\"",
                "testValues" : {
                  "epsilon" : "Exp[-5/6*I*Pi]",
                  "pi" : "2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [-1.500000000, Exp[1/6*I*Pi]+1.500000000]\"",
                "testValues" : {
                  "epsilon" : "-3/2",
                  "pi" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [-1.500000000, Exp[2/3*I*Pi]+1.500000000]\"",
                "testValues" : {
                  "epsilon" : "-3/2",
                  "pi" : "Exp[2/3*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [-1.500000000, Exp[-1/3*I*Pi]+1.500000000]\"",
                "testValues" : {
                  "epsilon" : "-3/2",
                  "pi" : "Exp[-1/3*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [-1.500000000, Exp[-5/6*I*Pi]+1.500000000]\"",
                "testValues" : {
                  "epsilon" : "-3/2",
                  "pi" : "Exp[-5/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [-1.500000000, 0.]\"",
                "testValues" : {
                  "epsilon" : "-3/2",
                  "pi" : "-3/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [-1.500000000, 3.]\"",
                "testValues" : {
                  "epsilon" : "-3/2",
                  "pi" : "3/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [-1.500000000, 1.]\"",
                "testValues" : {
                  "epsilon" : "-3/2",
                  "pi" : "-1/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [-1.500000000, 2.]\"",
                "testValues" : {
                  "epsilon" : "-3/2",
                  "pi" : "1/2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [-1.500000000, -.5000000000]\"",
                "testValues" : {
                  "epsilon" : "-3/2",
                  "pi" : "-2"
                }
              },
              {
                "result" : "\"Error - invalid input: `simpl/abs` expects its 1st argument, a1, to be of type algebraic, but received [-1.500000000, 3.500000000]\"",
                "testValues" : {
                  "epsilon" : "-3/2",
                  "pi" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "[epsilon, pi-epsilon]",
                "property" : "Simple"
              },
              {
                "result" : "[epsilon, pi-epsilon]",
                "property" : "ConvEXP"
              },
              {
                "result" : "[epsilon, pi-epsilon]",
                "property" : "ConvHYP"
              },
              {
                "result" : "[epsilon, pi-epsilon]",
                "property" : "EXP"
              },
              {
                "result" : "[epsilon, pi-epsilon]",
                "property" : "EXP+EXP"
              },
              {
                "result" : "[epsilon, pi-epsilon]",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 11,
          "sentence" : 0,
          "word" : 36
        }
      ],
      "includes" : [ ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "interval",
          "score" : 0.722
        },
        {
          "definition" : "asymptotic",
          "score" : 0.6460746792928004
        },
        {
          "definition" : "Darboux formula",
          "score" : 0.6460746792928004
        },
        {
          "definition" : "term",
          "score" : 0.6460746792928004
        },
        {
          "definition" : "interior",
          "score" : 0.5988174995334326
        }
      ]
    },
    {
      "id" : "FORMULA_48cd3d9bc60a933438e6e151fcabafdf",
      "formula" : "\\epsilon > 0",
      "semanticFormula" : "\\epsilon > 0",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "\\[Epsilon] > 0",
          "numericResults" : {
            "successful" : true,
            "numberOfTests" : 3,
            "numberOfFailedTests" : 0,
            "numberOfSuccessfulTests" : 3,
            "testCalculations" : [ ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "Greater[ϵ, 0]",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "Symbol('epsilon') > 0"
        },
        "Maple" : {
          "translation" : "epsilon > 0",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 10,
            "numberOfFailedTests" : 7,
            "numberOfSuccessfulTests" : 3,
            "testCalculations" : [
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not 0. < Exp[1/6*I*Pi]\"",
                "testValues" : {
                  "epsilon" : "Exp[1/6*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not 0. < Exp[2/3*I*Pi]\"",
                "testValues" : {
                  "epsilon" : "Exp[2/3*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not 0. < Exp[-1/3*I*Pi]\"",
                "testValues" : {
                  "epsilon" : "Exp[-1/3*I*Pi]"
                }
              },
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not 0. < Exp[-5/6*I*Pi]\"",
                "testValues" : {
                  "epsilon" : "Exp[-5/6*I*Pi]"
                }
              },
              {
                "result" : "0. < -1.500000000",
                "testValues" : {
                  "epsilon" : "-3/2"
                }
              },
              {
                "result" : "0. < -.5000000000",
                "testValues" : {
                  "epsilon" : "-1/2"
                }
              },
              {
                "result" : "0. < -2.",
                "testValues" : {
                  "epsilon" : "-2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "0 < epsilon",
                "property" : "Simple"
              },
              {
                "result" : "0 < epsilon",
                "property" : "ConvEXP"
              },
              {
                "result" : "0 < epsilon",
                "property" : "ConvHYP"
              },
              {
                "result" : "0 < epsilon",
                "property" : "EXP"
              },
              {
                "result" : "0 < epsilon",
                "property" : "EXP+EXP"
              },
              {
                "result" : "0 < epsilon",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 11,
          "sentence" : 0,
          "word" : 39
        }
      ],
      "includes" : [ ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "interval",
          "score" : 0.7125985104912714
        },
        {
          "definition" : "asymptotic",
          "score" : 0.5988174995334326
        },
        {
          "definition" : "Darboux formula",
          "score" : 0.5988174995334326
        },
        {
          "definition" : "term",
          "score" : 0.5988174995334326
        },
        {
          "definition" : "interior",
          "score" : 0.5500952380952381
        }
      ]
    },
    {
      "id" : "FORMULA_af6de3ef393b4f48057f5b14b797ac07",
      "formula" : "\\pm1",
      "semanticFormula" : "\\pm1",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "\\[PlusMinus]1",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "numberOfFailedTests" : 1,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "PlusMinus[1.0]",
                "testValues" : { }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "PlusMinus[1]",
                "property" : "Simple"
              }
            ]
          }
        },
        "Maple" : {
          "translation" : "&+- 1",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "numberOfFailedTests" : 1,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "\"Error - cannot determine if this expression is true or false: not abs(&+- 1) < .1e-2\"",
                "testValues" : { }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "&+- 1",
                "property" : "Simple"
              },
              {
                "result" : "&+- 1",
                "property" : "ConvEXP"
              },
              {
                "result" : "&+- 1",
                "property" : "ConvHYP"
              },
              {
                "result" : "&+- 1",
                "property" : "EXP"
              },
              {
                "result" : "&+- 1",
                "property" : "EXP+EXP"
              },
              {
                "result" : "&+- 1",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 11,
          "sentence" : 1,
          "word" : 9
        }
      ],
      "includes" : [ ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "point",
          "score" : 0.722
        },
        {
          "definition" : "asymptotic of the Jacobi polynomial",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "Heine formula",
          "score" : 0.5988174995334326
        },
        {
          "definition" : "Mehler",
          "score" : 0.5988174995334326
        },
        {
          "definition" : "limit",
          "score" : 0.5049074255814494
        },
        {
          "definition" : "domain",
          "score" : 0.46655930748162855
        }
      ]
    },
    {
      "id" : "FORMULA_34980bfcd6b86900308ec8f48f593ff0",
      "formula" : "\\begin{align}\\lim_{n \\to \\infty} n^{-\\alpha}P_n^{(\\alpha,\\beta)}\\left(\\cos \\left ( \\tfrac{z}{n} \\right ) \\right) &= \\left(\\tfrac{z}{2}\\right)^{-\\alpha} J_\\alpha(z)\\\\ \\lim_{n \\to \\infty} n^{-\\beta}P_n^{(\\alpha,\\beta)}\\left(\\cos \\left (\\pi - \\tfrac{z}{n} \\right) \\right) &= \\left(\\tfrac{z}{2}\\right)^{-\\beta} J_\\beta(z)\\end{align}",
      "semanticFormula" : "\\begin{align}\\lim_{n \\to \\infty} n^{-\\alpha} \\JacobipolyP{\\alpha}{\\beta}{n}@{\\cos (\\tfrac{z}{n})} &= (\\tfrac{z}{2})^{-\\alpha} J_\\alpha (z) \\\\ \\lim_{n \\to \\infty} n^{-\\beta} \\JacobipolyP{\\alpha}{\\beta}{n}@{\\cos (\\pi - \\tfrac{z}{n})} &= (\\tfrac{z}{2})^{-\\beta} J_\\beta (z)\\end{align}",
      "confidence" : 0.6560523929888044,
      "translations" : {
        "Mathematica" : {
          "translation" : "Limit[(n)^(- \\[Alpha])* JacobiP[n, \\[Alpha], \\[Beta], Cos[Divide[z,n]]], n -> Infinity, GenerateConditions->None] == (Divide[z,2])^(- \\[Alpha])* Subscript[J, \\[Alpha]]*(z)\nLimit[(n)^(- \\[Beta])* JacobiP[n, \\[Alpha], \\[Beta], Cos[\\[Pi]-Divide[z,n]]], n -> Infinity, GenerateConditions->None] == (Divide[z,2])^(- \\[Beta])* Subscript[J, \\[Beta]]*(z)",
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 0,
            "testCalculations" : [ ]
          }
        },
        "Maple" : {
          "translation" : "limit((n)^(- alpha)* JacobiP(n, alpha, beta, cos((z)/(n))), n = infinity) = ((z)/(2))^(- alpha)* J[alpha]*(z); limit((n)^(- beta)* JacobiP(n, alpha, beta, cos(pi -(z)/(n))), n = infinity) = ((z)/(2))^(- beta)* J[beta]*(z)",
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 0,
            "testCalculations" : [ ]
          }
        }
      },
      "positions" : [
        {
          "section" : 11,
          "sentence" : 1,
          "word" : 18
        }
      ],
      "includes" : [
        "\\alpha,\\beta",
        "n",
        "P_{n}^{(\\alpha, \\beta)}",
        "P_{n}^{(\\alpha, \\beta)}(x)",
        "z"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "Heine formula",
          "score" : 0.722
        },
        {
          "definition" : "asymptotic of the Jacobi polynomial",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "limit",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "Mehler",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "domain",
          "score" : 0.6460746792928004
        },
        {
          "definition" : "point",
          "score" : 0.5988174995334326
        }
      ]
    },
    {
      "id" : "FORMULA_fbade9e36a3f36d3d676c1b808451dd7",
      "formula" : "z",
      "semanticFormula" : "z",
      "confidence" : 0.0,
      "translations" : {
        "Mathematica" : {
          "translation" : "z",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 7,
            "numberOfFailedTests" : 7,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "Complex[0.8660254037844387, 0.49999999999999994]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[1, 6]], Pi]]"
                }
              },
              {
                "result" : "Complex[-0.4999999999999998, 0.8660254037844387]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[2, 3]], Pi]]"
                }
              },
              {
                "result" : "Complex[0.5000000000000001, -0.8660254037844386]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[-1, 3]], Pi]]"
                }
              },
              {
                "result" : "Complex[-0.8660254037844387, -0.49999999999999994]",
                "testValues" : {
                  "z" : "Power[E, Times[Complex[0, Rational[-5, 6]], Pi]]"
                }
              },
              {
                "result" : "1.5",
                "testValues" : {
                  "z" : "Rational[3, 2]"
                }
              },
              {
                "result" : "0.5",
                "testValues" : {
                  "z" : "Rational[1, 2]"
                }
              },
              {
                "result" : "2.0",
                "testValues" : {
                  "z" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 1,
            "testCalculations" : [
              {
                "result" : "z",
                "property" : "Simple"
              }
            ]
          }
        },
        "SymPy" : {
          "translation" : "z"
        },
        "Maple" : {
          "translation" : "z",
          "numericResults" : {
            "successful" : false,
            "numberOfTests" : 3,
            "numberOfFailedTests" : 3,
            "numberOfSuccessfulTests" : 0,
            "testCalculations" : [
              {
                "result" : "1.500000000",
                "testValues" : {
                  "z" : "3/2"
                }
              },
              {
                "result" : ".5000000000",
                "testValues" : {
                  "z" : "1/2"
                }
              },
              {
                "result" : "2.",
                "testValues" : {
                  "z" : "2"
                }
              }
            ]
          },
          "symbolicResults" : {
            "successful" : false,
            "numberOfTests" : 6,
            "testCalculations" : [
              {
                "result" : "z",
                "property" : "Simple"
              },
              {
                "result" : "z",
                "property" : "ConvEXP"
              },
              {
                "result" : "z",
                "property" : "ConvHYP"
              },
              {
                "result" : "z",
                "property" : "EXP"
              },
              {
                "result" : "z",
                "property" : "EXP+EXP"
              },
              {
                "result" : "z",
                "property" : "EXP+HYP"
              }
            ]
          }
        }
      },
      "positions" : [
        {
          "section" : 11,
          "sentence" : 1,
          "word" : 25
        }
      ],
      "includes" : [ ],
      "isPartOf" : [
        "\\frac{d^k}{dz^k} P_n^{(\\alpha,\\beta)} (z) = \\frac{\\Gamma (\\alpha+\\beta+n+1+k)}{2^k \\Gamma (\\alpha+\\beta+n+1)} P_{n-k}^{(\\alpha+k, \\beta+k)} (z)",
        "\\begin{align}\\lim_{n \\to \\infty} n^{-\\alpha}P_n^{(\\alpha,\\beta)}\\left(\\cos \\left ( \\tfrac{z}{n} \\right ) \\right) &= \\left(\\tfrac{z}{2}\\right)^{-\\alpha} J_\\alpha(z)\\\\ \\lim_{n \\to \\infty} n^{-\\beta}P_n^{(\\alpha,\\beta)}\\left(\\cos \\left (\\pi - \\tfrac{z}{n} \\right) \\right) &= \\left(\\tfrac{z}{2}\\right)^{-\\beta} J_\\beta(z)\\end{align}",
        "P_0^{(\\alpha,\\beta)}(z)= 1",
        "P_{n}(z) = \\frac{1 }{2^n  n! } \\frac{d^n }{ d z^n }  ( z^2 - 1 )^n  \\;",
        "P_n^{(\\alpha,\\beta)}(z) = \\frac{(-1)^n}{2^n n!} (1-z)^{-\\alpha} (1+z)^{-\\beta} \\frac{d^n}{dz^n} \\left\\{ (1-z)^\\alpha (1+z)^\\beta \\left (1 - z^2 \\right )^n \\right\\}",
        "\\Gamma(z)",
        "R(z, 0) = 1",
        "P_1^{(\\alpha,\\beta)}(z)= (\\alpha+1) + (\\alpha+\\beta+2)\\frac{z-1}{2}",
        "R = R(z, t) = \\left(1 - 2zt + t^2\\right)^{\\frac{1}{2}}",
        "\\sum_{n=0}^\\infty P_n^{(\\alpha,\\beta)}(z) t^n = 2^{\\alpha + \\beta} R^{-1} (1 - t + R)^{-\\alpha} (1 + t + R)^{-\\beta}",
        "P_n^{(\\alpha,\\beta)}(z)=\\frac{(\\alpha+1)_n}{n!}\\,{}_2F_1\\left(-n,1+\\alpha+\\beta+n;\\alpha+1;\\tfrac{1}{2}(1-z)\\right)",
        "\\begin{align}&2n (n + \\alpha + \\beta) (2n + \\alpha + \\beta - 2) P_n^{(\\alpha,\\beta)}(z) \\\\&\\qquad= (2n+\\alpha + \\beta-1) \\Big\\{ (2n+\\alpha + \\beta)(2n+\\alpha+\\beta-2) z +  \\alpha^2 - \\beta^2 \\Big\\} P_{n-1}^{(\\alpha,\\beta)}(z) - 2 (n+\\alpha - 1) (n + \\beta-1) (2n+\\alpha + \\beta) P_{n-2}^{(\\alpha, \\beta)}(z),\\end{align}",
        "{z \\choose n} = \\begin{cases} \\frac{\\Gamma(z+1)}{\\Gamma(n+1)\\Gamma(z-n+1)} & n \\geq 0 \\\\ 0 & n < 0 \\end{cases}",
        "P_n^{(\\alpha,\\beta)} (z) = \\frac{\\Gamma (\\alpha+n+1)}{n!\\,\\Gamma (\\alpha+\\beta+n+1)} \\sum_{m=0}^n {n\\choose m} \\frac{\\Gamma (\\alpha + \\beta + n + m + 1)}{\\Gamma (\\alpha + m + 1)} \\left(\\frac{z-1}{2}\\right)^m",
        "\\begin{align}(z-1) \\frac{d}{dz} P_n^{(\\alpha,\\beta)}(z) &= \\frac{1}{2} (z-1)(1+\\alpha+\\beta+n)P_{n-1}^{(\\alpha+1,\\beta+1)} \\\\&= n P_n^{(\\alpha,\\beta)} - (\\alpha+n) P_{n-1}^{(\\alpha,\\beta+1)} \\\\&=(1+\\alpha+\\beta+n) \\left( P_n^{(\\alpha,\\beta+1)} - P_{n}^{(\\alpha,\\beta)} \\right) \\\\&=(\\alpha+n) P_n^{(\\alpha-1,\\beta+1)} - \\alpha P_n^{(\\alpha,\\beta)} \\\\&=\\frac{2(n+1) P_{n+1}^{(\\alpha,\\beta-1)} - \\left(z(1+\\alpha+\\beta+n)+\\alpha+1+n-\\beta \\right) P_n^{(\\alpha,\\beta)}}{1+z} \\\\&=\\frac{(2\\beta+n+nz) P_n^{(\\alpha,\\beta)} - 2(\\beta+n) P_n^{(\\alpha,\\beta-1)}}{1+z} \\\\&=\\frac{1-z}{1+z} \\left( \\beta P_n^{(\\alpha,\\beta)} - (\\beta+n) P_{n}^{(\\alpha+1,\\beta-1)} \\right) \\, .\\end{align}",
        "P_2^{(\\alpha,\\beta)}(z)= \\frac{(\\alpha+1)(\\alpha+2)}{2}+ (\\alpha+2)(\\alpha+\\beta+3)\\frac{z-1}{2}+ \\frac{(\\alpha+\\beta+3)(\\alpha+\\beta+4)}{2}\\left(\\frac{z-1}{2}\\right)^2,..",
        "P_n^{(\\alpha, \\beta)} (-z) = (-1)^n P_n^{(\\beta, \\alpha)} (z)"
      ],
      "definiens" : [
        {
          "definition" : "Heine formula",
          "score" : 0.722
        },
        {
          "definition" : "domain",
          "score" : 0.7125985104912714
        },
        {
          "definition" : "asymptotic of the Jacobi polynomial",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "limit",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "Mehler",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "point",
          "score" : 0.5988174995334326
        },
        {
          "definition" : "branch of square root",
          "score" : 0.5406937485865095
        },
        {
          "definition" : "function of the Jacobi polynomial",
          "score" : 0.5140038577190457
        },
        {
          "definition" : "identity",
          "score" : 0.4784564245921376
        },
        {
          "definition" : "Gauss ' contiguous relation",
          "score" : 0.4025311038849381
        },
        {
          "definition" : "recurrence relation for the Jacobi polynomial",
          "score" : 0.3902770819198429
        },
        {
          "definition" : "symmetry relation",
          "score" : 0.3788619791666667
        },
        {
          "definition" : "integer",
          "score" : 0.3781904762645919
        },
        {
          "definition" : "Gamma function",
          "score" : 0.36878898675586336
        },
        {
          "definition" : "Legendre polynomial",
          "score" : 0.3687889866820372
        },
        {
          "definition" : "equivalent expression",
          "score" : 0.36878898668174825
        },
        {
          "definition" : "derivative of the explicit expression",
          "score" : 0.34458600631380554
        },
        {
          "definition" : "polynomial",
          "score" : 0.3427705987904743
        },
        {
          "definition" : "Rodrigues ' formula",
          "score" : 0.34209909581429815
        },
        {
          "definition" : "Pochhammer 's symbol",
          "score" : 0.3420990958142839
        },
        {
          "definition" : "other terminal value",
          "score" : 0.30293665845946705
        },
        {
          "definition" : "equivalent definition",
          "score" : 0.30226515548329097
        },
        {
          "definition" : "case",
          "score" : 0.2550079757239094
        },
        {
          "definition" : "series for the hypergeometric function",
          "score" : 0.2550079757239094
        },
        {
          "definition" : "hypergeometric function",
          "score" : 0.25500797572390876
        },
        {
          "definition" : "Jacobi polynomial",
          "score" : 0.25500797572390876
        }
      ]
    },
    {
      "id" : "FORMULA_6964a7b6d1913beef831d08c5478f8cf",
      "formula" : "d^{j}_{m',m}(\\varphi)",
      "semanticFormula" : "\\ndivisors@{n}_{m',m}^{j} (\\varphi)",
      "confidence" : 0.0,
      "translations" : { },
      "positions" : [
        {
          "section" : 12,
          "sentence" : 0,
          "word" : 11
        }
      ],
      "includes" : [ ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "expression of the Wigner d-matrix",
          "score" : 0.722
        },
        {
          "definition" : "term of Jacobi polynomial",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "expression",
          "score" : 0.5988174995334326
        }
      ]
    },
    {
      "id" : "FORMULA_4ccb6d1e7c90bf59553de9025e547412",
      "formula" : "0 \\leq \\varphi \\leq 4\\pi)",
      "semanticFormula" : "0 \\leq \\varphi \\leq 4\\pi)",
      "confidence" : 0.0,
      "translations" : { },
      "positions" : [
        {
          "section" : 12,
          "sentence" : 0,
          "word" : 14
        }
      ],
      "includes" : [ ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "term of Jacobi polynomial",
          "score" : 0.7125985104912714
        },
        {
          "definition" : "expression of the Wigner d-matrix",
          "score" : 0.6859086196238077
        },
        {
          "definition" : "expression",
          "score" : 0.5500952380952381
        }
      ]
    },
    {
      "id" : "FORMULA_adb31e6dc814328e8bfc8b3f900eee59",
      "formula" : "d^j_{m'm}(\\phi) =\\left[ \\frac{(j+m)!(j-m)!}{(j+m')!(j-m')!}\\right]^{\\frac{1}{2}} \\left(\\sin\\tfrac{\\phi}{2}\\right)^{m-m'} \\left(\\cos\\tfrac{\\phi}{2}\\right)^{m+m'} P_{j-m}^{(m-m',m+m')}(\\cos \\phi)",
      "semanticFormula" : "\\ndivisors@{n}_{m'm}^j (\\Eulertotientphi@{n}) = [\\frac{(j+m)!(j-m)!}{(j+m')!(j-m')!}]^{\\frac{1}{2}} (\\sin \\tfrac{\\Eulertotientphi@{n}}{2})^{m-m'} (\\cos \\tfrac{\\Eulertotientphi@{n}}{2})^{m+m'} \\JacobipolyP{m - m '}{m + m '}{j-m}@{\\cos \\Eulertotientphi@{n}}",
      "confidence" : 0.19960583317781086,
      "translations" : { },
      "positions" : [
        {
          "section" : 12,
          "sentence" : 0,
          "word" : 21
        }
      ],
      "includes" : [
        "P_{n}^{(\\alpha, \\beta)}",
        "P_{n}^{(\\alpha, \\beta)}(x)"
      ],
      "isPartOf" : [ ],
      "definiens" : [
        {
          "definition" : "expression of the Wigner d-matrix",
          "score" : 0.7125985104912714
        },
        {
          "definition" : "expression",
          "score" : 0.5988174995334326
        },
        {
          "definition" : "term of Jacobi polynomial",
          "score" : 0.5988174995334326
        }
      ]
    }
  ]
}